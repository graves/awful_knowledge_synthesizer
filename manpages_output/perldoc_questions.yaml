- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perldoc`.\n\n\n\nManpage text:\n\nPERLDOC(1)\t       Perl Programmers Reference Guide \t    PERLDOC(1)\n\n\nNAME\n       perldoc - Look up Perl documentation in Pod format.\n\nSYNOPSIS\n\t   perldoc [-h] [-D] [-t] [-u] [-m] [-l] [-U] [-F]\n\t       [-i] [-V] [-T] [-r]\n\t       [-d destination_file]\n\t       [-o formatname]\n\t       [-M FormatterClassName]\n\t       [-w formatteroption:value]\n\t       [-n nroff-replacement]\n\t       [-X]\n\t       [-L language_code]\n\t       PageName|ModuleName|ProgramName|URL\n\n       Examples:\n\n\t   perldoc -f BuiltinFunction\n\n\t   perldoc -L it -f BuiltinFunction\n\n\t   perldoc -q FAQ Keyword\n\n\t   perldoc -L fr -q FAQ Keyword\n\n\t   perldoc -v PerlVariable\n\n\t   perldoc -a PerlAPI\n\n       See below for more description of the switches.\n\nDESCRIPTION\n       perldoc looks up documentation in .pod format that is embedded in the\n       perl installation tree or in a perl script, and displays it using a\n       variety of formatters.  This is primarily used for the documentation\n       for the perl library modules.\n\n       Your system may also have man pages installed for those modules, in\n       which case you can probably just use the man(1) command.\n\n       If you are looking for a table of contents to the Perl library modules\n       documentation, see the perltoc page.\n\nOPTIONS\n       -h   Prints out a brief help message.\n\n       -D   Describes search for the item in detail.\n\n       -t   Display docs using plain text converter, instead of nroff. This\n\t    may be faster, but it probably won't look as nice.\n\n       -u   Skip the real Pod formatting, and just show the raw Pod source\n\t    (Unformatted)\n\n       -m module\n\t    Display the entire module: both code and unformatted pod\n\t    documentation.  This may be useful if the docs don't explain a\n\t    function in the detail you need, and you'd like to inspect the\n\t    code directly; perldoc will find the file for you and simply hand\n\t    it off for display.\n\n       -l   Display only the file name of the module found.\n\n       -U   When running as the superuser, don't attempt drop privileges for\n\t    security.  This option is implied with -F.\n\n\t    NOTE: Please see the heading SECURITY below for more information.\n\n       -F   Consider arguments as file names; no search in directories will be\n\t    performed.\tImplies -U if run as the superuser.\n\n       -f perlfunc\n\t    The -f option followed by the name of a perl built-in function\n\t    will extract the documentation of this function from perlfunc.\n\n\t    Example:\n\n\t\t  perldoc -f sprintf\n\n       -q perlfaq-search-regexp\n\t    The -q option takes a regular expression as an argument.  It will\n\t    search the question headings in perlfaq[1-9] and print the entries\n\t    matching the regular expression.\n\n\t    Example:\n\n\t\t perldoc -q shuffle\n\n       -a perlapifunc\n\t    The -a option followed by the name of a perl api function will\n\t    extract the documentation of this function from perlapi.\n\n\t    Example:\n\n\t\t perldoc -a newHV\n\n       -v perlvar\n\t    The -v option followed by the name of a Perl predefined variable\n\t    will extract the documentation of this variable from perlvar.\n\n\t    Examples:\n\n\t\t perldoc -v '$\"'\n\t\t perldoc -v @+\n\t\t perldoc -v DATA\n\n       -T   This specifies that the output is not to be sent to a pager, but\n\t    is to be sent directly to STDOUT.\n\n       -d destination-filename\n\t    This specifies that the output is to be sent neither to a pager\n\t    nor to STDOUT, but is to be saved to the specified filename.\n\t    Example: \"perldoc -oLaTeX -dtextwrapdocs.tex Text::Wrap\"\n\n       -o output-formatname\n\t    This specifies that you want Perldoc to try using a Pod-formatting\n\t    class for the output format that you specify.  For example:\n\t    \"-oman\".  This is actually just a wrapper around the \"-M\" switch;\n\t    using \"-oformatname\" just looks for a loadable class by adding\n\t    that format name (with different capitalizations) to the end of\n\t    different classname prefixes.\n\n\t    For example, \"-oLaTeX\" currently tries all of the following\n\t    classes: Pod::Perldoc::ToLaTeX Pod::Perldoc::Tolatex\n\t    Pod::Perldoc::ToLatex Pod::Perldoc::ToLATEX Pod::Simple::LaTeX\n\t    Pod::Simple::latex Pod::Simple::Latex Pod::Simple::LATEX\n\t    Pod::LaTeX Pod::latex Pod::Latex Pod::LATEX.\n\n       -M module-name\n\t    This specifies the module that you want to try using for\n\t    formatting the pod.  The class must at least provide a\n\t    \"parse_from_file\" method.  For example: \"perldoc\n\t    -MPod::Perldoc::ToChecker\".\n\n\t    You can specify several classes to try by joining them with commas\n\t    or semicolons, as in \"-MTk::SuperPod;Tk::Pod\".\n\n       -w option:value or -w option\n\t    This specifies an option to call the formatter with.  For example,\n\t    \"-w textsize:15\" will call \"$formatter->textsize(15)\" on the\n\t    formatter object before it is used to format the object.  For this\n\t    to be valid, the formatter class must provide such a method, and\n\t    the value you pass should be valid.  (So if \"textsize\" expects an\n\t    integer, and you do \"-w textsize:big\", expect trouble.)\n\n\t    You can use \"-w optionname\" (without a value) as shorthand for \"-w\n\t    optionname:TRUE\".  This is presumably useful in cases of on/off\n\t    features like: \"-w page_numbering\".\n\n\t    You can use an \"=\" instead of the \":\", as in: \"-w textsize=15\".\n\t    This might be more (or less) convenient, depending on what shell\n\t    you use.\n\n       -X   Use an index if it is present. The -X option looks for an entry\n\t    whose basename matches the name given on the command line in the\n\t    file \"$Config{archlib}/pod.idx\". The pod.idx file should contain\n\t    fully qualified filenames, one per line.\n\n       -L language_code\n\t    This allows one to specify the language code for the desired\n\t    language translation. If the \"POD2::<language_code>\" package isn't\n\t    installed in your system, the switch is ignored.  All available\n\t    translation packages are to be found under the \"POD2::\" namespace.\n\t    See POD2::IT (or POD2::FR) to see how to create new localized\n\t    \"POD2::*\" documentation packages and integrate them into\n\t    Pod::Perldoc.\n\n       PageName|ModuleName|ProgramName|URL\n\t    The item you want to look up.  Nested modules (such as\n\t    \"File::Basename\") are specified either as \"File::Basename\" or\n\t    \"File/Basename\".  You may also give a descriptive name of a page,\n\t    such as \"perlfunc\".  For URLs, HTTP and HTTPS are the only kind\n\t    currently supported.\n\n\t    For simple names like 'foo', when the normal search fails to find\n\t    a matching page, a search with the \"perl\" prefix is tried as well.\n\t    So \"perldoc intro\" is enough to find/render \"perlintro.pod\".\n\n       -n some-formatter\n\t    Specify replacement for groff\n\n       -r   Recursive search.\n\n       -i   Ignore case.\n\n       -V   Displays the version of perldoc you're running.\n\nSECURITY\n       Because perldoc does not run properly tainted, and is known to have\n       security issues, when run as the superuser it will attempt to drop\n       privileges by setting the effective and real IDs to nobody's or\n       nouser's account, or -2 if unavailable.\tIf it cannot relinquish its\n       privileges, it will not run.\n\n       See the \"-U\" option if you do not want this behavior but beware that\n       there are significant security risks if you choose to use \"-U\".\n\n       Since 3.26, using \"-F\" as the superuser also implies \"-U\" as opening\n       most files and traversing directories requires privileges that are\n       above the nobody/nogroup level.\n\nENVIRONMENT\n       Any switches in the \"PERLDOC\" environment variable will be used before\n       the command line arguments.\n\n       Useful values for \"PERLDOC\" include \"-oterm\", \"-otext\", \"-ortf\",\n       \"-oxml\", and so on, depending on what modules you have on hand; or the\n       formatter class may be specified exactly with \"-MPod::Perldoc::ToTerm\"\n       or the like.\n\n       \"perldoc\" also searches directories specified by the \"PERL5LIB\" (or\n       \"PERLLIB\" if \"PERL5LIB\" is not defined) and \"PATH\" environment\n       variables.  (The latter is so that embedded pods for executables, such\n       as \"perldoc\" itself, are available.)\n\n       In directories where either \"Makefile.PL\" or \"Build.PL\" exist,\n       \"perldoc\" will add \".\" and \"lib\" first to its search path, and as long\n       as you're not the superuser will add \"blib\" too.  This is really\n       helpful if you're working inside of a build directory and want to read\n       through the docs even if you have a version of a module previously\n       installed.\n\n       \"perldoc\" will use, in order of preference, the pager defined in\n       \"PERLDOC_PAGER\", \"MANPAGER\", or \"PAGER\" before trying to find a pager\n       on its own. (\"MANPAGER\" is not used if \"perldoc\" was told to display\n       plain text or unformatted pod.)\n\n       When using perldoc in it's \"-m\" mode (display module source code),\n       \"perldoc\" will attempt to use the pager set in \"PERLDOC_SRC_PAGER\".  A\n       useful setting for this command is your favorite editor as in\n       \"/usr/bin/nano\". (Don't judge me.)\n\n       One useful value for \"PERLDOC_PAGER\" is \"less -+C -E\".\n\n       Having PERLDOCDEBUG set to a positive integer will make perldoc emit\n       even more descriptive output than the \"-D\" switch does; the higher the\n       number, the more it emits.\n\nCHANGES\n       Up to 3.14_05, the switch -v was used to produce verbose messages of\n       perldoc operation, which is now enabled by -D.\n\nSEE ALSO\n       perlpod, Pod::Perldoc\n\nAUTHOR\n       Current maintainer: Mark Allen \"<mallen@cpan.org>\"\n\n       Past contributors are: brian d foy \"<bdfoy@cpan.org>\" Adriano R.\n       Ferreira \"<ferreira@cpan.org>\", Sean M. Burke \"<sburke@cpan.org>\",\n       Kenneth Albanowski \"<kjahds@kjahds.com>\", Andy Dougherty\n       \"<doughera@lafcol.lafayette.edu>\", and many others.\n\nperl v5.34.1\t\t\t  2022-02-19\t\t\t    PERLDOC(1)"
  manpageQuestion1: What is the primary purpose of the perldoc command?
  manpageQuestion2: How can you use perldoc to retrieve the documentation for a specific Perl built-in function, such as 'sprintf'?
  manpageQuestion3: Can you provide an example of using perldoc to search for questions in the Perl FAQ that match a regular expression like 'shuffle'?

