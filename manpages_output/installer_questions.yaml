- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `installer`.\n\n\n\nManpage text:\n\nINSTALLER(8)\t\t    System Manager's Manual\t\t  INSTALLER(8)\n\nNAME\n     installer – system software and package installer tool.\n\nSYNOPSIS\n     installer [-dominfo] [-volinfo] [-pkginfo] [-showChoicesXML]\n\t       [-showChoicesAfterApplyingChangesXML <pathToXMLFile>]\n\t       [-applyChoiceChangesXML <pathToXMLFile>] [-query <flag>]\n\t       [-allow] [-dumplog] [-help] [-verbose | -verboseR] [-vers]\n\t       [-config] [-plist] [-file <pathToFile>]\n\t       [-lang <ISOLanguageCode>] [-listiso] -pkg <pathToPackage>\n\t       -target device\n\nDESCRIPTION\n     The installer command is used to install macOS installer packages to a\n     specified domain or volume.  The installer command installs a single\n     package per invocation, which is specified with the -package parameter (\n     -pkg is accepted as a synonym).  It may be either a single package or a\n     metapackage.  In the case of the metapackage, the packages which are part\n     of the default install will be installed unless disqualified by a\n     package's check tool(s)."
  manpageQuestion1: What is the primary purpose of the installer command?
  manpageQuestion2: How can you use the installer command to install a macOS package to a specific device?
  manpageQuestion3: What are the common flags used with the installer command to display information about a package?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `installer`.\n\n\n\nManpage text:\n\nThe target volume is specified with the -target parameter ( -tgt is\n     accepted as a synonym).  It must already be mounted when the installer\n     command is invoked.\n\n     The installer command requires root privileges to run.  If a package\n     requires authentication (set in a package's .info file) the installer\n     must be either run as root or with the sudo(8) command (but see further\n     discussion under the -store option).\n\n     The installer is not responsible for rebooting the machine after\n     installing.  Use reboot(8) or shutdown(8) -r now to reboot the system.\n\n     The installer displays two forms of output.  The default terse output is\n     intended for parsing by scripting languages for automating (or scripting)\n     installs and verbose output providing additional information and\n     descriptive error messages.\n\n     A list of flags and their descriptions:\n\n     -dominfo\n\t     Displays a list of domains into which the software package can be\n\t     installed.  For example: LocalSystem or CurrentUserHomeDirectory.\n\t     The domains listed are those which are available and enabled when\n\t     the command is run."
  manpageQuestion1: What is the primary purpose of the installer command in macOS?
  manpageQuestion2: How can you use the installer command to check the available installation domains for a package?
  manpageQuestion3: What is the correct way to run the installer command with root privileges when a package requires authentication?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `installer`.\n\n\n\nManpage text:\n\n-volinfo\n\t     Displays a list of volumes onto which the software package can be\n\t     installed.  The volumes listed are the mounted volumes available\n\t     when the command is run.\n\n     -pkginfo\n\t     Displays a list of packages that can be installed onto the target\n\t     volume.  If a metapackage is given as the package source, all of\n\t     its subpackages are listed.\n\n     -query flag\n\t     Queries a package for information about the metadata.  See -help\n\t     for supported flags.\n\n     -allowUntrusted\n\t     Allow install of a package signed by an untrusted (or expired)\n\t     certificate.\n\n     -dumplog\n\t     Detailed log information is always sent to syslog using the\n\t     LOG_INSTALL facility (and will wind up in /var/log/install.log).\n\t     -dumplog additionally writes this log to standard error output.\n\n     -help   Displays the help screen describing the list of parameters.\n\n     -verbose\n\t     Displays more descriptive information than the default output.\n\t     Use this parameter in conjunction with -pkginfo and -volinfo\n\t     information requests to see more readable output.\tThe default\n\t     output is formatted for scripting."
  manpageQuestion1: What is the primary purpose of the installer command in macOS?
  manpageQuestion2: How can you use the installer command to display information about packages that can be installed on a target volume?
  manpageQuestion3: What command would you use to allow the installation of a package signed by an untrusted certificate using the installer tool?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `installer`.\n\n\n\nManpage text:\n\n-verboseR\n\t     Displays same information as -verbose except the output is\n\t     formatted for easy parsing.\n\n     -vers   Displays the version of this command.\n\n     -config\n\t     Formats the command line installation arguments for later use.\n\t     The output is sent to stdout, but can be redirected to a file to\n\t     create a configuration file.  When specifying this option, an\n\t     installation is not actually performed.  This configuration file\n\t     can be supplied as the argument to the -file parameter instead of\n\t     typing a long series of installation arguments.  The config file\n\t     can be used to perform multiple identical installs.  You can\n\t     create a config file as follows:\n\n\t     installer -pkg ~/Documents/Foo.pkg -target / -config >\n\t     /tmp/configfile.plist\n\n     -plist  Formats the installer output into an XML file, which is sent by\n\t     default to stdout.  Use this parameter for -dominfo, -volinfo,\n\t     and -pkginfo\n\n     -file pathToFile\n\t     Specifies the path to the XML file containing parameter\n\t     information in the key/value dictionary.  This file can be used\n\t     instead of the command line parameters, and supersedes any\n\t     parameters on the command line.  When you type this parameter,\n\t     you type the path to the XML file.  Use with config file\n\t     generated by -config For example:"
  manpageQuestion1: What is the primary purpose of the installer command?
  manpageQuestion2: How can you generate a configuration file for the installer command to reuse installation parameters?
  manpageQuestion3: What is the function of the -plist parameter when used with the installer command?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `installer`.\n\n\n\nManpage text:\n\ninstaller -file /tmp/configfile.plist\n\n     -lang ISOLanguageCode\n\t     Default language of installed system (ISO format).  This is only\n\t     necessary when performing a system (OS) install, otherwise is it\n\t     ignored.  There is no verification done to make sure that the\n\t     language being set actually exists on the machine, however the\n\t     ISO language code is verified to ensure that it is valid.\n\n     -listiso\n\t     Display the list of valid ISO language codes the installer\n\t     recognizes.\n\n     -showChoiceChangesXML\n\t     Prints to stdout the install choices for the package (specified\n\t     with -pkg) in an XML format. This allows choice attributes to be\n\t     modified and applied at install-time using\n\t     -applyChoiceChangesXML.  See CHOICE CHANGES FILE for details of\n\t     this XML format.\n\n     -applyChoiceChangesXML pathToXMLFile\n\t     Applies the install choice changes specified in pathToXMLFile to\n\t     the default choices in the package before installation. This\n\t     allows the command-line installer to customize choice what gets\n\t     installed. See CHOICE CHANGES FILE for details of this XML\n\t     format. Any problems encountered while applying the choice\n\t     changes will be reported to the LOG_INSTALL facility (i.e. to\n\t     /var/log/install.log), and also to stdout if -dumplog is used."
  manpageQuestion1: What is the primary purpose of the installer tool?
  manpageQuestion2: How can you use the installer to display a list of valid ISO language codes?
  manpageQuestion3: Can you provide an example of using the installer to apply custom choice changes from an XML file before installing a package?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `installer`.\n\n\n\nManpage text:\n\n-showChoicesAfterApplyingChangesXML pathToXMLFile\n\t     Applies the install choice changes specified in pathToXMLFile to\n\t     the default choices in the package, and then dumps the resulting\n\t     choice state to stdout.  The input and output XML format is as\n\t     described in CHOICE CHANGES FILE.\tSince changing one choice in a\n\t     package can implicitly change other choices, this option allows\n\t     you to confirm that a particular choiceChanges file will have the\n\t     intended effect. You must specify a -target when using this\n\t     option, since the evaluated choices can also change with the\n\t     state of the target disk.\n\n     -showChoicesXML\n\t     Prints to stdout the install choices for the package (specified\n\t     with -pkg) in a hierarchical XML format. This is not the same\n\t     format as used with -applyChoiceChangesXML.  This option is\n\t     provided for System Image Utility only.\n\n     -store  Install the product archive specified by -package, in the same\n\t     way that it would be installed through the Mac App Store. In this\n\t     mode, no other options are supported. (You can specify -target,\n\t     but the only allowable value is the root volume mount point, /).\n\t     For best Mac App Store fidelity, run installer as an admin user\n\t     (not using sudo); you will prompted for your admin user's\n\t     password before the install begins."
  manpageQuestion1: What is the primary purpose of the installer tool?
  manpageQuestion2: How would you use the -showChoicesAfterApplyingChangesXML option to apply changes from an XML file and verify the resulting choice state?
  manpageQuestion3: Can you provide an example of using the -store option to install a product archive as if it were from the Mac App Store?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `installer`.\n\n\n\nManpage text:\n\nThis mode is provided for testing a product archive before\n\t     submission to the Mac App Store. See productbuild(1) for how to\n\t     create a product archive.\n\nDEVICES\n     A device parameter for the target is any one of the following:\n\n     1) Any of the values returned by -dominfo\n     2) The device node entry.\tAny entry of the form of /dev/disk*.  ex:\n     /dev/disk2\n     3) The disk identifier.  Any entry of the form of disk*.  ex: disk1s9\n     4) The volume mount point.  Any entry of the form of /Volumes/Mountpoint.\n     ex: /Volumes/Untitled\n     5) The volume UUID.  ex: 376C4046-083E-334F-AF08-62FAFBC4E352\n\nCHOICE CHANGES FILE\n     A “choiceChanges” file allows individual installer choices to be selected\n     or deselected. A template choiceChanges file for a given package can be\n     generated with the -showChoiceChangesXML option, and is interpreted as\n     follows.\n\n     The choiceChanges file is a property list containing an array of\n     dictionaries. Each dictionary has the following three keys:"
  manpageQuestion1: What is the primary purpose of the installer tool in macOS?
  manpageQuestion2: How can you use the installer tool to test a product archive before submitting it to the Mac App Store?
  manpageQuestion3: What are the different ways to specify a target device when using the installer tool?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `installer`.\n\n\n\nManpage text:\n\nKey\t\t     Description\n     choiceIdentifier\t     Identifier for the choice to be modified (string)\n     choiceAttribute\t     One of the attribute names described below (string)\n     attributeSetting\t     A setting that depends on the choiceAttribute, described below\n\t\t\t     (number or string)\n\n     The choiceAttribute and attributeSetting values are as follows:\n\n     choiceAttribute\t     attributeSetting Description\n     selected\t\t     (number) 1 to select the choice, 0 to deselect it\n     enabled\t\t     (number) 1 to enable the choice, 0 to disable it\n     visible\t\t     (number) 1 to show the choice, 0 to hide it\n     customLocation\t     (string) path at which to install the choice (see below)\n\n     Note that there can be multiple dictionaries for the same\n     choiceIdentifier, since there can be multiple attributes set for a single\n     choice.\n\n     The customLocation attribute can be set for a choice only if that choice\n     explicitly allows a user-defined path. That is, if the choice would have\n     a Location popup when viewed in the Customize pane of the Installer\n     application, it can be set via customLocation.  (Otherwise, installation\n     paths cannot be arbitrarily modified, since the package author must\n     account for custom install locations for the installation to work\n     properly.)"
  manpageQuestion1: What is the primary purpose of the installer resource in macOS?
  manpageQuestion2: How can you modify a choice's visibility using the installer resource?
  manpageQuestion3: What is the process for setting a custom installation location for a choice in the installer resource?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `installer`.\n\n\n\nManpage text:\n\nEXAMPLES\n     installer -dominfo -pkg InstallMe.pkg\n\n     installer -volinfo -pkg InstallMe.pkg\n\n     installer -pkginfo -pkg DeveloperTools.mpkg\n\n     installer -pkg OSInstall.mpkg -target LocalSystem\n\n     installer -pkg OSInstall.mpkg -target / -lang en\n\n     installer -pkg DeveloperTools.mpkg -target /\n\n     installer -pkg InstallMe.pkg -target \"/Volumes/Macintosh HD2\"\n\n     installer -pkg InstallMe.pkg -file /tmp/InstallConfigFile\n\n     installer -pkg InstallMe.pkg -target /dev/disk0s5\n\nENVIRONMENT\n     COMMAND_LINE_INSTALL  Set when performing an installation using the\n\t\t\t   installer command.\n\nFILES\n     /usr/sbin/installer  Software package installer tool\n\nSEE ALSO\n     syslog.conf(5) reboot(8) shutdown(8) softwareupdate(8) sudo(8)\n     systemsetup(8)\n\nHISTORY\n     The command line installer tool first appeared in the 10.2 release of Mac\n     OS X.\n\nmacOS\t\t\t\tApril 19, 2007\t\t\t\t macOS"
  manpageQuestion1: What is the primary purpose of the installer tool on macOS?
  manpageQuestion2: How can you use the installer command to install a package to a specific disk partition?
  manpageQuestion3: What is the function of the -file flag when using the installer command?

