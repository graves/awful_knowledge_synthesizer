- prompt: |-
    You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.



    Manpage text:

    PERLGLOSSARY(1)        Perl Programmers Reference Guide        PERLGLOSSARY(1)
  manpageQuestion1: What is the primary purpose of the perlglossary tool?
  manpageQuestion2: How would you use perlglossary to look up the definition of a specific Perl term?
  manpageQuestion3: Can you provide an example of using perlglossary to find information about a particular Perl function or module?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nNAME\n       perlglossary - Perl Glossary\n\nVERSION\n       version 5.20210411\n\nDESCRIPTION\n       A glossary of terms (technical and otherwise) used in the Perl\n       documentation, derived from the Glossary of Programming Perl, Fourth\n       Edition.  Words or phrases in bold are defined elsewhere in this\n       glossary.\n\n       Other useful sources include the Unicode Glossary\n       <http://unicode.org/glossary/>, the Free On-Line Dictionary of\n       Computing <http://foldoc.org/>, the Jargon File\n       <http://catb.org/~esr/jargon/>, and Wikipedia\n       <http://www.wikipedia.org/>.\n\n   A\n       accessor methods\n\t   A method used to indirectly inspect or update an objectXs state\n\t   (its instance variables).\n\n       actual arguments\n\t   The scalar values that you supply to a function or subroutine when\n\t   you call it. For instance, when you call \"power(\"puff\")\", the\n\t   string \"puff\" is the actual argument. See also argument and formal\n\t   arguments.\n\n       address operator\n\t   Some languages work directly with the memory addresses of values,\n\t   but this can be like playing with fire. Perl provides a set of\n\t   asbestos gloves for handling all memory management. The closest to\n\t   an address operator in Perl is the backslash operator, but it gives\n\t   you a hard reference, which is much safer than a memory address."
  manpageQuestion1: What is the primary purpose of the perlglossary tool?
  manpageQuestion2: How would you use perlglossary to look up the definition of 'accessor methods'?
  manpageQuestion3: Can you provide an example of using perlglossary to find the definition of 'actual arguments'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nalgorithm\n\t   A well-defined sequence of steps, explained clearly enough that\n\t   even a computer could do them.\n\n       alias\n\t   A nickname for something, which behaves in all ways as though youXd\n\t   used the original name instead of the nickname. Temporary aliases\n\t   are implicitly created in the loop variable for \"foreach\" loops, in\n\t   the $_ variable for \"map\" or \"grep\" operators, in $a and $b during\n\t   \"sort\"Xs comparison function, and in each element of @_ for the\n\t   actual arguments of a subroutine call. Permanent aliases are\n\t   explicitly created in packages by importing symbols or by\n\t   assignment to typeglobs. Lexically scoped aliases for package\n\t   variables are explicitly created by the \"our\" declaration.\n\n       alphabetic\n\t   The sort of characters we put into words. In Unicode, this is all\n\t   letters including all ideographs and certain diacritics, letter\n\t   numbers like Roman numerals, and various combining marks.\n\n       alternatives\n\t   A list of possible choices from which you may select only one, as\n\t   in, XWould you like door A, B, or C?X Alternatives in regular\n\t   expressions are separated with a single vertical bar: \"|\".\n\t   Alternatives in normal Perl expressions are separated with a double\n\t   vertical bar: \"||\". Logical alternatives in Boolean expressions are\n\t   separated with either \"||\" or \"or\"."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the 'alternatives' entry in perlglossary to specify multiple choices in a regular expression?
  manpageQuestion3: Can you explain the concept of 'alias' as described in the perlglossary resource and provide an example of its usage in a Perl script?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nanonymous\n\t   Used to describe a referent that is not directly accessible through\n\t   a named variable. Such a referent must be indirectly accessible\n\t   through at least one hard reference. When the last hard reference\n\t   goes away, the anonymous referent is destroyed without pity.\n\n       application\n\t   A bigger, fancier sort of program with a fancier name so people\n\t   donXt realize they are using a program.\n\n       architecture\n\t   The kind of computer youXre working on, where one Xkind of\n\t   computerX means all those computers sharing a compatible machine\n\t   language.  Since Perl programs are (typically) simple text files,\n\t   not executable images, a Perl program is much less sensitive to the\n\t   architecture itXs running on than programs in other languages, such\n\t   as C, that are compiled into machine code. See also platform and\n\t   operating system.\n\n       argument\n\t   A piece of data supplied to a program, subroutine, function, or\n\t   method to tell it what itXs supposed to do. Also called a\n\t   XparameterX."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use the perlglossary tool to find the definition of the term 'anonymous'?
  manpageQuestion3: Can you provide an example of using perlglossary to look up the meaning of 'architecture'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nARGV\n\t   The name of the array containing the argument vector from the\n\t   command line. If you use the empty \"<>\" operator, \"ARGV\" is the\n\t   name of both the filehandle used to traverse the arguments and the\n\t   scalar containing the name of the current input file.\n\n       arithmetical operator\n\t   A symbol such as \"+\" or \"/\" that tells Perl to do the arithmetic\n\t   you were supposed to learn in grade school.\n\n       array\n\t   An ordered sequence of values, stored such that you can easily\n\t   access any of the values using an integer subscript that specifies\n\t   the valueXs offset in the sequence.\n\n       array context\n\t   An archaic expression for what is more correctly referred to as\n\t   list context.\n\n       Artistic License\n\t   The open source license that Larry Wall created for Perl,\n\t   maximizing PerlXs usefulness, availability, and modifiability. The\n\t   current version is 2.\n\t   (<http://www.opensource.org/licenses/artistic-license.php>).\n\n       ASCII\n\t   The American Standard Code for Information Interchange (a 7-bit\n\t   character set adequate only for poorly representing English text).\n\t   Often used loosely to describe the lowest 128 values of the various\n\t   ISO-8859-X character sets, a bunch of mutually incompatible 8-bit\n\t   codes best described as half ASCII. See also Unicode."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use the perlglossary to find information about Perl's 'array' data structure?
  manpageQuestion3: Can you explain how the 'ARGV' variable is used in Perl scripting?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nassertion\n\t   A component of a regular expression that must be true for the\n\t   pattern to match but does not necessarily match any characters\n\t   itself. Often used specifically to mean a zero-width assertion.\n\n       assignment\n\t   An operator whose assigned mission in life is to change the value\n\t   of a variable.\n\n       assignment operator\n\t   Either a regular assignment or a compound operator composed of an\n\t   ordinary assignment and some other operator, that changes the value\n\t   of a variable in place; that is, relative to its old value. For\n\t   example, \"$a += 2\" adds 2 to $a.\n\n       associative array\n\t   See hash. Please. The term associative array is the old Perl 4 term\n\t   for a hash. Some languages call it a dictionary.\n\n       associativity\n\t   Determines whether you do the left operator first or the right\n\t   operator first when you have XA operator B operator CX, and the two\n\t   operators are of the same precedence. Operators like \"+\" are left\n\t   associative, while operators like \"**\" are right associative. See\n\t   Camel chapter 3, XUnary and Binary OperatorsX for a list of\n\t   operators and their associativity."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use the perlglossary to find the definition of the term 'associative array'?
  manpageQuestion3: Can you explain the difference between an assignment operator and a compound assignment operator in Perl using an example from the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nasynchronous\n\t   Said of events or activities whose relative temporal ordering is\n\t   indeterminate because too many things are going on at once. Hence,\n\t   an asynchronous event is one you didnXt know when to expect.\n\n       atom\n\t   A regular expression component potentially matching a substring\n\t   containing one or more characters and treated as an indivisible\n\t   syntactic unit by any following quantifier. (Contrast with an\n\t   assertion that matches something of zero width and may not be\n\t   quantified.)\n\n       atomic operation\n\t   When Democritus gave the word XatomX to the indivisible bits of\n\t   matter, he meant literally something that could not be cut: X-\n\t   (not) + -XXXXX (cuttable). An atomic operation is an action that\n\t   canXt be interrupted, not one forbidden in a nuclear-free zone.\n\n       attribute\n\t   A new feature that allows the declaration of variables and\n\t   subroutines with modifiers, as in \"sub foo : locked method\". Also\n\t   another name for an instance variable of an object."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use the perlglossary to find the definition of the term 'atomic operation'?
  manpageQuestion3: Can you explain how the term 'attribute' is defined in the perlglossary and provide an example of its usage?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nautogeneration\n\t   A feature of operator overloading of objects, whereby the behavior\n\t   of certain operators can be reasonably deduced using more\n\t   fundamental operators. This assumes that the overloaded operators\n\t   will often have the same relationships as the regular operators.\n\t   See Camel chapter 13, XOverloadingX.\n\n       autoincrement\n\t   To add one to something automatically, hence the name of the \"++\"\n\t   operator. To instead subtract one from something automatically is\n\t   known as an XautodecrementX.\n\n       autoload\n\t   To load on demand. (Also called XlazyX loading.)  Specifically, to\n\t   call an \"AUTOLOAD\" subroutine on behalf of an undefined subroutine.\n\n       autosplit\n\t   To split a string automatically, as the Xa switch does when running\n\t   under Xp or Xn in order to emulate awk. (See also the \"AutoSplit\"\n\t   module, which has nothing to do with the \"Xa\" switch but a lot to\n\t   do with autoloading.)\n\n       autovivification\n\t   A Graeco-Roman word meaning Xto bring oneself to lifeX.  In Perl,\n\t   storage locations (lvalues) spontaneously generate themselves as\n\t   needed, including the creation of any hard reference values to\n\t   point to the next level of storage. The assignment\n\t   \"$a[5][5][5][5][5] = \"quintet\"\" potentially creates five scalar\n\t   storage locations, plus four references (in the first four scalar\n\t   locations) pointing to four new anonymous arrays (to hold the last\n\t   four scalar locations). But the point of autovivification is that\n\t   you donXt have to worry about it."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How does Perl's autovivification feature work, and what is its significance in programming?
  manpageQuestion3: What is the difference between 'autoload' and 'autoincrement' in Perl, as described in the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nAV  Short for Xarray valueX, which refers to one of PerlXs internal\n\t   data types that holds an array. The \"AV\" type is a subclass of SV.\n\n       awk Descriptive editing termXshort for XawkwardX. Also coincidentally\n\t   refers to a venerable text-processing language from which Perl\n\t   derived some of its high-level ideas.\n\n   B\n       backreference\n\t   A substring captured by a subpattern within unadorned parentheses\n\t   in a regex. Backslashed decimal numbers (\"\\1\", \"\\2\", etc.) later in\n\t   the same pattern refer back to the corresponding subpattern in the\n\t   current match. Outside the pattern, the numbered variables ($1, $2,\n\t   etc.) continue to refer to these same values, as long as the\n\t   pattern was the last successful match of the current dynamic scope.\n\n       backtracking\n\t   The practice of saying, XIf I had to do it all over, IXd do it\n\t   differently,X and then actually going back and doing it all over\n\t   differently. Mathematically speaking, itXs returning from an\n\t   unsuccessful recursion on a tree of possibilities. Perl backtracks\n\t   when it attempts to match patterns with a regular expression, and\n\t   its earlier attempts donXt pan out. See the section XThe Little\n\t   Engine That /Couldn(nXt)X in Camel chapter 5, XPattern MatchingX."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use the perlglossary to find information about Perl's 'backreference' concept?
  manpageQuestion3: Can you explain how the term 'backtracking' is used in Perl's pattern matching process according to the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nbackward compatibility\n\t   Means you can still run your old program because we didnXt break\n\t   any of the features or bugs it was relying on.\n\n       bareword\n\t   A word sufficiently ambiguous to be deemed illegal under \"use\n\t   strict 'subs'\". In the absence of that stricture, a bareword is\n\t   treated as if quotes were around it.\n\n       base class\n\t   A generic object type; that is, a class from which other, more\n\t   specific classes are derived genetically by inheritance. Also\n\t   called a XsuperclassX by people who respect their ancestors.\n\n       big-endian\n\t   From Swift: someone who eats eggs big end first. Also used of\n\t   computers that store the most significant byte of a word at a lower\n\t   byte address than the least significant byte. Often considered\n\t   superior to little-endian machines. See also little-endian.\n\n       binary\n\t   Having to do with numbers represented in base 2. That means thereXs\n\t   basically two numbers: 0 and 1. Also used to describe a file of\n\t   XnontextX, presumably because such a file makes full use of all the\n\t   binary bits in its bytes. With the advent of Unicode, this\n\t   distinction, already suspect, loses even more of its meaning."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you ensure backward compatibility when using Perl modules in your programs?
  manpageQuestion3: What does the term 'big-endian' refer to in the context of computer systems?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nbinary operator\n\t   An operator that takes two operands.\n\n       bind\n\t   To assign a specific network address to a socket.\n\n       bit An integer in the range from 0 to 1, inclusive. The smallest\n\t   possible unit of information storage. An eighth of a byte or of a\n\t   dollar.  (The term XPieces of EightX comes from being able to split\n\t   the old Spanish dollar into 8 bits, each of which still counted for\n\t   money. ThatXs why a 25- cent piece today is still Xtwo bitsX.)\n\n       bit shift\n\t   The movement of bits left or right in a computer word, which has\n\t   the effect of multiplying or dividing by a power of 2.\n\n       bit string\n\t   A sequence of bits that is actually being thought of as a sequence\n\t   of bits, for once.\n\n       bless\n\t   In corporate life, to grant official approval to a thing, as in,\n\t   XThe VP of Engineering has blessed our WebCruncher project.X\n\t   Similarly, in Perl, to grant official approval to a referent so\n\t   that it can function as an object, such as a WebCruncher object.\n\t   See the \"bless\" function in Camel chapter 27, XFunctionsX."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How does the term 'bit shift' relate to computer operations according to the perlglossary?
  manpageQuestion3: What is the meaning of the Perl term 'bless' in the context of object-oriented programming?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nblock\n\t   What a process does when it has to wait for something: XMy process\n\t   blocked waiting for the disk.X As an unrelated noun, it refers to a\n\t   large chunk of data, of a size that the operating system likes to\n\t   deal with (normally a power of 2 such as 512 or 8192). Typically\n\t   refers to a chunk of data thatXs coming from or going to a disk\n\t   file.\n\n       BLOCK\n\t   A syntactic construct consisting of a sequence of Perl statements\n\t   that is delimited by braces.  The \"if\" and \"while\" statements are\n\t   defined in terms of \"BLOCK\"s, for instance. Sometimes we also say\n\t   XblockX to mean a lexical scope; that is, a sequence of statements\n\t   that acts like a \"BLOCK\", such as within an \"eval\" or a file, even\n\t   though the statements arenXt delimited by braces.\n\n       block buffering\n\t   A method of making input and output efficient by passing one block\n\t   at a time. By default, Perl does block buffering to disk files. See\n\t   buffer and command buffering.\n\n       Boolean\n\t   A value that is either true or false."
  manpageQuestion1: What is the primary purpose of the `perlglossary` resource?
  manpageQuestion2: How would you use the `perlglossary` to find the definition of the term 'block buffering'?
  manpageQuestion3: Can you explain what a 'BLOCK' refers to in the context of Perl programming?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nBoolean context\n\t   A special kind of scalar context used in conditionals to decide\n\t   whether the scalar value returned by an expression is true or\n\t   false. Does not evaluate as either a string or a number. See\n\t   context.\n\n       breakpoint\n\t   A spot in your program where youXve told the debugger to stop\n\t   execution so you can poke around and see whether anything is wrong\n\t   yet.\n\n       broadcast\n\t   To send a datagram to multiple destinations simultaneously.\n\n       BSD A psychoactive drug, popular in the X80s, probably developed at UC\n\t   Berkeley or thereabouts. Similar in many ways to the prescription-\n\t   only medication called XSystem VX, but infinitely more useful. (Or,\n\t   at least, more fun.) The full chemical name is XBerkeley Standard\n\t   DistributionX.\n\n       bucket\n\t   A location in a hash table containing (potentially) multiple\n\t   entries whose keys XhashX to the same hash value according to its\n\t   hash function. (As internal policy, you donXt have to worry about\n\t   it unless youXre into internals, or policy.)"
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the 'breakpoint' feature in Perl to debug a program?
  manpageQuestion3: What does the term 'broadcast' mean in the context of Perl programming?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nbuffer\n\t   A temporary holding location for data. Data that are Block\n\t   buffering means that the data is passed on to its destination\n\t   whenever the buffer is full. Line buffering means that itXs passed\n\t   on whenever a complete line is received. Command buffering means\n\t   that itXs passed every time you do a \"print\" command (or\n\t   equivalent). If your output is unbuffered, the system processes it\n\t   one byte at a time without the use of a holding area. This can be\n\t   rather inefficient.\n\n       built-in\n\t   A function that is predefined in the language. Even when hidden by\n\t   overriding, you can always get at a built- in function by\n\t   qualifying its name with the \"CORE::\" pseudopackage.\n\n       bundle\n\t   A group of related modules on CPAN. (Also sometimes refers to a\n\t   group of command-line switches grouped into one switch cluster.)\n\n       byte\n\t   A piece of data worth eight bits in most places.\n\n       bytecode\n\t   A pidgin-like lingo spoken among Xdroids when they donXt wish to\n\t   reveal their orientation (see endian). Named after some similar\n\t   languages spoken (for similar reasons) between compilers and\n\t   interpreters in the late 20XX century. These languages are\n\t   characterized by representing everything as a nonarchitecture-\n\t   dependent sequence of bytes."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use the perlglossary to understand the concept of 'buffer' in Perl?
  manpageQuestion3: Can you explain how the term 'byte' is defined in the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nC\n       C   A language beloved by many for its inside-out type definitions,\n\t   inscrutable precedence rules, and heavy overloading of the\n\t   function-call mechanism. (Well, actually, people first switched to\n\t   C because they found lowercase identifiers easier to read than\n\t   upper.) Perl is written in C, so itXs not surprising that Perl\n\t   borrowed a few ideas from it.\n\n       cache\n\t   A data repository. Instead of computing expensive answers several\n\t   times, compute it once and save the result.\n\n       callback\n\t   A handler that you register with some other part of your program in\n\t   the hope that the other part of your program will trigger your\n\t   handler when some event of interest transpires.\n\n       call by reference\n\t   An argument-passing mechanism in which the formal arguments refer\n\t   directly to the actual arguments, and the subroutine can change the\n\t   actual arguments by changing the formal arguments. That is, the\n\t   formal argument is an alias for the actual argument. See also call\n\t   by value."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: 'How would you use perlglossary to find the definition of the term ''callback''? '
  manpageQuestion3: Can you provide an example of how to use perlglossary to look up the meaning of 'call by reference'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\ncall by value\n\t   An argument-passing mechanism in which the formal arguments refer\n\t   to a copy of the actual arguments, and the subroutine cannot change\n\t   the actual arguments by changing the formal arguments. See also\n\t   call by reference.\n\n       canonical\n\t   Reduced to a standard form to facilitate comparison.\n\n       capture variables\n\t   The variablesXsuch as $1 and $2, and \"%+\" and %X Xthat hold the\n\t   text remembered in a pattern match. See Camel chapter 5, XPattern\n\t   MatchingX.\n\n       capturing\n\t   The use of parentheses around a subpattern in a regular expression\n\t   to store the matched substring as a backreference. (Captured\n\t   strings are also returned as a list in list context.) See Camel\n\t   chapter 5, XPattern MatchingX.\n\n       cargo cult\n\t   Copying and pasting code without understanding it, while\n\t   superstitiously believing in its value. This term originated from\n\t   preindustrial cultures dealing with the detritus of explorers and\n\t   colonizers of technologically advanced cultures. See The Gods Must\n\t   Be Crazy."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can capturing be used in regular expressions according to the perlglossary?
  manpageQuestion3: What does the term 'cargo cult' refer to in the context of Perl programming?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\ncase\n\t   A property of certain characters. Originally, typesetter stored\n\t   capital letters in the upper of two cases and small letters in the\n\t   lower one. Unicode recognizes three cases: lowercase (character\n\t   property \"\\p{lower}\"), titlecase (\"\\p{title}\"), and uppercase\n\t   (\"\\p{upper}\"). A fourth casemapping called foldcase is not itself a\n\t   distinct case, but it is used internally to implement casefolding.\n\t   Not all letters have case, and some nonletters have case.\n\n       casefolding\n\t   Comparing or matching a string case-insensitively. In Perl, it is\n\t   implemented with the \"/i\" pattern modifier, the \"fc\" function, and\n\t   the \"\\F\" double-quote translation escape.\n\n       casemapping\n\t   The process of converting a string to one of the four Unicode\n\t   casemaps; in Perl, it is implemented with the \"fc\", \"lc\",\n\t   \"ucfirst\", and \"uc\" functions.\n\n       character\n\t   The smallest individual element of a string. Computers store\n\t   characters as integers, but Perl lets you operate on them as text.\n\t   The integer used to represent a particular character is called that\n\t   characterXs codepoint."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How does Perl implement casefolding for strings?
  manpageQuestion3: What are the functions in Perl used for casemapping a string?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\ncharacter class\n\t   A square-bracketed list of characters used in a regular expression\n\t   to indicate that any character of the set may occur at a given\n\t   point. Loosely, any predefined set of characters so used.\n\n       character property\n\t   A predefined character class matchable by the \"\\p\" or \"\\P\"\n\t   metasymbol. Unicode defines hundreds of standard properties for\n\t   every possible codepoint, and Perl defines a few of its own, too.\n\n       circumfix operator\n\t   An operator that surrounds its operand, like the angle operator, or\n\t   parentheses, or a hug.\n\n       class\n\t   A user-defined type, implemented in Perl via a package that\n\t   provides (either directly or by inheritance) methods (that is,\n\t   subroutines) to handle instances of the class (its objects). See\n\t   also inheritance.\n\n       class method\n\t   A method whose invocant is a package name, not an object reference.\n\t   A method associated with the class as a whole. Also see instance\n\t   method.\n\n       client\n\t   In networking, a process that initiates contact with a server\n\t   process in order to exchange data and perhaps receive a service."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How does the perlglossary define a 'character class' in regular expressions?
  manpageQuestion3: Can you explain the difference between a 'class method' and an 'instance method' in Perl according to the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nclosure\n\t   An anonymous subroutine that, when a reference to it is generated\n\t   at runtime, keeps track of the identities of externally visible\n\t   lexical variables, even after those lexical variables have\n\t   supposedly gone out of scope. TheyXre called XclosuresX because\n\t   this sort of behavior gives mathematicians a sense of closure.\n\n       cluster\n\t   A parenthesized subpattern used to group parts of a regular\n\t   expression into a single atom.\n\n       CODE\n\t   The word returned by the \"ref\" function when you apply it to a\n\t   reference to a subroutine. See also CV.\n\n       code generator\n\t   A system that writes code for you in a low-level language, such as\n\t   code to implement the backend of a compiler. See program generator.\n\n       codepoint\n\t   The integer a computer uses to represent a given character. ASCII\n\t   codepoints are in the range 0 to 127; Unicode codepoints are in the\n\t   range 0 to 0x1F_FFFF; and Perl codepoints are in the range 0 to\n\t   2XXX1 or 0 to 2XXX1, depending on your native integer size. In Perl\n\t   Culture, sometimes called ordinals."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary to understand the concept of a 'closure' in Perl?
  manpageQuestion3: What is the significance of the term 'codepoint' in Perl, and how is it used in character representation?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\ncode subpattern\n\t   A regular expression subpattern whose real purpose is to execute\n\t   some Perl codeXfor example, the \"(?{...})\" and \"(??{...})\"\n\t   subpatterns.\n\n       collating sequence\n\t   The order into which characters sort. This is used by string\n\t   comparison routines to decide, for example, where in this glossary\n\t   to put Xcollating sequenceX.\n\n       co-maintainer\n\t   A person with permissions to index a namespace in PAUSE. Anyone can\n\t   upload any namespace, but only primary and co-maintainers get their\n\t   contributions indexed.\n\n       combining character\n\t   Any character with the General Category of Combining Mark\n\t   (\"\\p{GC=M}\"), which may be spacing or nonspacing. Some are even\n\t   invisible. A sequence of combining characters following a grapheme\n\t   base character together make up a single user-visible character\n\t   called a grapheme. Most but not all diacritics are combining\n\t   characters, and vice versa.\n\n       command\n\t   In shell programming, the syntactic combination of a program name\n\t   and its arguments. More loosely, anything you type to a shell (a\n\t   command interpreter) that starts it doing something. Even more\n\t   loosely, a Perl statement, which might start with a label and\n\t   typically ends with a semicolon."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary to find information about Perl's collating sequence?
  manpageQuestion3: What is the definition of a combining character according to the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\ncommand buffering\n\t   A mechanism in Perl that lets you store up the output of each Perl\n\t   command and then flush it out as a single request to the operating\n\t   system. ItXs enabled by setting the $| ($AUTOFLUSH) variable to a\n\t   true value. ItXs used when you donXt want data sitting around, not\n\t   going where itXs supposed to, which may happen because the default\n\t   on a file or pipe is to use block buffering.\n\n       command-line arguments\n\t   The values you supply along with a program name when you tell a\n\t   shell to execute a command.\tThese values are passed to a Perl\n\t   program through @ARGV.\n\n       command name\n\t   The name of the program currently executing, as typed on the\n\t   command line. In C, the command name is passed to the program as\n\t   the first command-line argument. In Perl, it comes in separately as\n\t   $0.\n\n       comment\n\t   A remark that doesnXt affect the meaning of the program.  In Perl,\n\t   a comment is introduced by a \"#\" character and continues to the end\n\t   of the line."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you enable command buffering in Perl to ensure that output is flushed immediately?
  manpageQuestion3: What is the difference between the command name and command-line arguments in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\ncompilation unit\n\t   The file (or string, in the case of \"eval\") that is currently being\n\t   compiled.\n\n       compile\n\t   The process of turning source code into a machine-usable form. See\n\t   compile phase.\n\n       compile phase\n\t   Any time before Perl starts running your main program. See also run\n\t   phase. Compile phase is mostly spent in compile time, but may also\n\t   be spent in runtime when \"BEGIN\" blocks, \"use\" or \"no\"\n\t   declarations, or constant subexpressions are being evaluated. The\n\t   startup and import code of any \"use\" declaration is also run during\n\t   compile phase.\n\n       compiler\n\t   Strictly speaking, a program that munches up another program and\n\t   spits out yet another file containing the program in a Xmore\n\t   executableX form, typically containing native machine instructions.\n\t   The perl program is not a compiler by this definition, but it does\n\t   contain a kind of compiler that takes a program and turns it into a\n\t   more executable form (syntax trees) within the perl process itself,\n\t   which the interpreter then interprets. There are, however,\n\t   extension modules to get Perl to act more like a XrealX compiler.\n\t   See Camel chapter 16, XCompilingX."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How does the compile phase in Perl differ from the run phase?
  manpageQuestion3: What is the role of the compiler in Perl, and how does it relate to the interpreter?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\ncompile time\n\t   The time when Perl is trying to make sense of your code, as opposed\n\t   to when it thinks it knows what your code means and is merely\n\t   trying to do what it thinks your code says to do, which is runtime.\n\n       composer\n\t   A XconstructorX for a referent that isnXt really an object, like an\n\t   anonymous array or a hash (or a sonata, for that matter).  For\n\t   example, a pair of braces acts as a composer for a hash, and a pair\n\t   of brackets acts as a composer for an array. See the section\n\t   XCreating ReferencesX in Camel chapter 8, XReferencesX.\n\n       concatenation\n\t   The process of gluing one catXs nose to another catXs tail. Also a\n\t   similar operation on two strings.\n\n       conditional\n\t   Something XiffyX. See Boolean context.\n\n       connection\n\t   In telephony, the temporary electrical circuit between the callerXs\n\t   and the calleeXs phone. In networking, the same kind of temporary\n\t   circuit between a client and a server.\n\n       construct\n\t   As a noun, a piece of syntax made up of smaller pieces. As a\n\t   transitive verb, to create an object using a constructor."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How does the term 'composer' in perlglossary relate to Perl programming?
  manpageQuestion3: What is the definition of 'concatenation' in the context of Perl programming according to the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nconstructor\n\t   Any class method, instance, or subroutine that composes,\n\t   initializes, blesses, and returns an object. Sometimes we use the\n\t   term loosely to mean a composer.\n\n       context\n\t   The surroundings or environment. The context given by the\n\t   surrounding code determines what kind of data a particular\n\t   expression is expected to return. The three primary contexts are\n\t   list context, scalar, and void context. Scalar context is sometimes\n\t   subdivided into Boolean context, numeric context, string context,\n\t   and void context. ThereXs also a XdonXt careX context (which is\n\t   dealt with in Camel chapter 2, XBits and PiecesX, if you care).\n\n       continuation\n\t   The treatment of more than one physical line as a single logical\n\t   line. Makefile lines are continued by putting a backslash before\n\t   the newline. Mail headers, as defined by RFC 822, are continued by\n\t   putting a space or tab after the newline. In general, lines in Perl\n\t   do not need any form of continuation mark, because whitespace\n\t   (including newlines) is gleefully ignored. Usually."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you determine the context in which a Perl expression is evaluated?
  manpageQuestion3: What does the term 'continuation' refer to in Perl programming?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\ncore dump\n\t   The corpse of a process, in the form of a file left in the working\n\t   directory of the process, usually as a result of certain kinds of\n\t   fatal errors.\n\n       CPAN\n\t   The Comprehensive Perl Archive Network. (See the Camel Preface and\n\t   Camel chapter 19, XCPANX for details.)\n\n       C preprocessor\n\t   The typical C compilerXs first pass, which processes lines\n\t   beginning with \"#\" for conditional compilation and macro\n\t   definition, and does various manipulations of the program text\n\t   based on the current definitions. Also known as cpp(1).\n\n       cracker\n\t   Someone who breaks security on computer systems. A cracker may be a\n\t   true hacker or only a script kiddie.\n\n       currently selected output channel\n\t   The last filehandle that was designated with \"select(FILEHANDLE)\";\n\t   \"STDOUT\", if no filehandle has been selected.\n\n       current package\n\t   The package in which the current statement is compiled. Scan\n\t   backward in the text of your program through the current lexical\n\t   scope or any enclosing lexical scopes until you find a package\n\t   declaration. ThatXs your current package name."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you determine the currently selected output channel in Perl using perlglossary?
  manpageQuestion3: What is the definition of a 'cracker' according to the perlglossary text?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\ncurrent working directory\n\t   See working directory.\n\n       CV  In academia, a curriculum vitae, a fancy kind of resume. In Perl,\n\t   an internal Xcode valueX typedef holding a subroutine. The \"CV\"\n\t   type is a subclass of SV.\n\n   D\n       dangling statement\n\t   A bare, single statement, without any braces, hanging off an \"if\"\n\t   or \"while\" conditional. C allows them. Perl doesnXt.\n\n       datagram\n\t   A packet of data, such as a UDP message, that (from the viewpoint\n\t   of the programs involved) can be sent independently over the\n\t   network. (In fact, all packets are sent independently at the IP\n\t   level, but stream protocols such as TCP hide this from your\n\t   program.)\n\n       data structure\n\t   How your various pieces of data relate to each other and what shape\n\t   they make when you put them all together, as in a rectangular table\n\t   or a triangular tree.\n\n       data type\n\t   A set of possible values, together with all the operations that\n\t   know how to deal with those values. For example, a numeric data\n\t   type has a certain set of numbers that you can work with, as well\n\t   as various mathematical operations that you can do on the numbers,\n\t   but would make little sense on, say, a string such as \"Kilroy\".\n\t   Strings have their own operations, such as concatenation. Compound\n\t   types made of a number of smaller pieces generally have operations\n\t   to compose and decompose them, and perhaps to rearrange them.\n\t   Objects that model things in the real world often have operations\n\t   that correspond to real activities. For instance, if you model an\n\t   elevator, your elevator object might have an \"open_door\" method."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use perlglossary to find the definition of 'CV' in Perl?
  manpageQuestion3: Can you explain how to look up the term 'data structure' in perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nDBM Stands for XDatabase ManagementX routines, a set of routines that\n\t   emulate an associative array using disk files. The routines use a\n\t   dynamic hashing scheme to locate any entry with only two disk\n\t   accesses. DBM files allow a Perl program to keep a persistent hash\n\t   across multiple invocations. You can \"tie\" your hash variables to\n\t   various DBM implementations.\n\n       declaration\n\t   An assertion that states something exists and perhaps describes\n\t   what itXs like, without giving any commitment as to how or where\n\t   youXll use it. A declaration is like the part of your recipe that\n\t   says, Xtwo cups flour, one large egg, four or five tadpolesXX See\n\t   statement for its opposite. Note that some declarations also\n\t   function as statements. Subroutine declarations also act as\n\t   definitions if a body is supplied.\n\n       declarator\n\t   Something that tells your program what sort of variable youXd like.\n\t   Perl doesnXt require you to declare variables, but you can use\n\t   \"my\", \"our\", or \"state\" to denote that you want something other\n\t   than the default."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use Perl's declaration feature to define a scalar variable with the value 'hello'?
  manpageQuestion3: Can you explain the difference between a declaration and a statement in Perl, using examples from the perlglossary documentation?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\ndecrement\n\t   To subtract a value from a variable, as in Xdecrement $xX (meaning\n\t   to remove 1 from its value) or Xdecrement $x by 3X.\n\n       default\n\t   A value chosen for you if you donXt supply a value of your own.\n\n       defined\n\t   Having a meaning. Perl thinks that some of the things people try to\n\t   do are devoid of meaning; in particular, making use of variables\n\t   that have never been given a value and performing certain\n\t   operations on data that isnXt there. For example, if you try to\n\t   read data past the end of a file, Perl will hand you back an\n\t   undefined value. See also false and the \"defined\" entry in Camel\n\t   chapter 27, XFunctionsX.\n\n       delimiter\n\t   A character or string that sets bounds to an arbitrarily sized\n\t   textual object, not to be confused with a separator or terminator.\n\t   XTo delimitX really just means Xto surroundX or Xto encloseX (like\n\t   these parentheses are doing).\n\n       dereference\n\t   A fancy computer science term meaning Xto follow a reference to\n\t   what it points toX. The XdeX part of it refers to the fact that\n\t   youXre taking away one level of indirection."
  manpageQuestion1: What is the primary purpose of the perlglossary tool?
  manpageQuestion2: How would you use the 'decrement' term in Perl to subtract 3 from a variable $x?
  manpageQuestion3: Can you explain how the 'delimiter' concept is used in Perl to enclose a textual object?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nderived class\n\t   A class that defines some of its methods in terms of a more generic\n\t   class, called a base class. Note that classes arenXt classified\n\t   exclusively into base classes or derived classes: a class can\n\t   function as both a derived class and a base class simultaneously,\n\t   which is kind of classy.\n\n       descriptor\n\t   See file descriptor.\n\n       destroy\n\t   To deallocate the memory of a referent (first triggering its\n\t   \"DESTROY\" method, if it has one).\n\n       destructor\n\t   A special method that is called when an object is thinking about\n\t   destroying itself. A Perl programXs \"DESTROY\" method doesnXt do the\n\t   actual destruction; Perl just triggers the method in case the class\n\t   wants to do any associated cleanup.\n\n       device\n\t   A whiz-bang hardware gizmo (like a disk or tape drive or a modem or\n\t   a joystick or a mouse) attached to your computer, which the\n\t   operating system tries to make look like a file (or a bunch of\n\t   files).  Under Unix, these fake files tend to live in the /dev\n\t   directory."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the 'derived class' concept in Perl to create a hierarchy of classes?
  manpageQuestion3: What is the difference between a 'destructor' and 'destroy' in Perl, and how are they used in object lifecycle management?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\ndirective\n\t   A pod directive. See Camel chapter 23, XPlain Old DocumentationX.\n\n       directory\n\t   A special file that contains other files. Some operating systems\n\t   call these XfoldersX, XdrawersX, XcataloguesX, or XcatalogsX.\n\n       directory handle\n\t   A name that represents a particular instance of opening a directory\n\t   to read it, until you close it. See the \"opendir\" function.\n\n       discipline\n\t   Some people need this and some people avoid it.  For Perl, itXs an\n\t   old way to say I/O layer.\n\n       dispatch\n\t   To send something to its correct destination. Often used\n\t   metaphorically to indicate a transfer of programmatic control to a\n\t   destination selected algorithmically, often by lookup in a table of\n\t   function references or, in the case of object methods, by\n\t   traversing the inheritance tree looking for the most specific\n\t   definition for the method.\n\n       distribution\n\t   A standard, bundled release of a system of software. The default\n\t   usage implies source code is included. If that is not the case, it\n\t   will be called a Xbinary-onlyX distribution."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can the term 'directory handle' be used in Perl programming?
  manpageQuestion3: What is the significance of the term 'dispatch' in Perl programming?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\ndual-lived\n\t   Some modules live both in the Standard Library and on CPAN. These\n\t   modules might be developed on two tracks as people modify either\n\t   version. The trend currently is to untangle these situations.\n\n       dweomer\n\t   An enchantment, illusion, phantasm, or jugglery. Said when PerlXs\n\t   magical dwimmer effects donXt do what you expect, but rather seem\n\t   to be the product of arcane dweomercraft, sorcery, or wonder\n\t   working. [From Middle English.]\n\n       dwimmer\n\t   DWIM is an acronym for XDo What I MeanX, the principle that\n\t   something should just do what you want it to do without an undue\n\t   amount of fuss. A bit of code that does XdwimmingX is a XdwimmerX.\n\t   Dwimming can require a great deal of behind-the-scenes magic, which\n\t   (if it doesnXt stay properly behind the scenes) is called a dweomer\n\t   instead.\n\n       dynamic scoping\n\t   Dynamic scoping works over a dynamic scope, making variables\n\t   visible throughout the rest of the block in which they are first\n\t   used and in any subroutines that are called by the rest of the\n\t   block. Dynamically scoped variables can have their values\n\t   temporarily changed (and implicitly restored later) by a \"local\"\n\t   operator.  (Compare lexical scoping.) Used more loosely to mean how\n\t   a subroutine that is in the middle of calling another subroutine\n\t   XcontainsX that subroutine at runtime."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use the term 'dwimmer' in a Perl script context?
  manpageQuestion3: Can you explain the concept of dynamic scoping in Perl and provide an example?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nE\n       eclectic\n\t   Derived from many sources. Some would say too many.\n\n       element\n\t   A basic building block. When youXre talking about an array, itXs\n\t   one of the items that make up the array.\n\n       embedding\n\t   When something is contained in something else, particularly when\n\t   that might be considered surprising: XIXve embedded a complete Perl\n\t   interpreter in my editor!X\n\n       empty subclass test\n\t   The notion that an empty derived class should behave exactly like\n\t   its base class.\n\n       encapsulation\n\t   The veil of abstraction separating the interface from the\n\t   implementation (whether enforced or not), which mandates that all\n\t   access to an objectXs state be through methods alone.\n\n       endian\n\t   See little-endian and big-endian.\n\n       en passant\n\t   When you change a value as it is being copied. [From French Xin\n\t   passingX, as in the exotic pawn-capturing maneuver in chess.]\n\n       environment\n\t   The collective set of environment variables your process inherits\n\t   from its parent. Accessed via %ENV."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can the term 'embedding' be used in the context of Perl programming according to the perlglossary?
  manpageQuestion3: Can you explain what 'encapsulation' means in Perl, as described in the perlglossary entry?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nenvironment variable\n\t   A mechanism by which some high-level agent such as a user can pass\n\t   its preferences down to its future offspring (child processes,\n\t   grandchild processes, great-grandchild processes, and so on). Each\n\t   environment variable is a key/value pair, like one entry in a hash.\n\n       EOF End of File. Sometimes used metaphorically as the terminating\n\t   string of a here document.\n\n       errno\n\t   The error number returned by a syscall when it fails. Perl refers\n\t   to the error by the name $! (or $OS_ERROR if you use the English\n\t   module).\n\n       error\n\t   See exception or fatal error.\n\n       escape sequence\n\t   See metasymbol.\n\n       exception\n\t   A fancy term for an error. See fatal error.\n\n       exception handling\n\t   The way a program responds to an error. The exception-handling\n\t   mechanism in Perl is the \"eval\" operator.\n\n       exec\n\t   To throw away the current processXs program and replace it with\n\t   another, without exiting the process or relinquishing any resources\n\t   held (apart from the old memory image)."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary resource to look up the definition of 'EOF' in Perl?
  manpageQuestion3: What is the significance of the 'errno' variable in Perl, and how is it accessed?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nexecutable file\n\t   A file that is specially marked to tell the operating system that\n\t   itXs okay to run this file as a program.  Usually shortened to\n\t   XexecutableX.\n\n       execute\n\t   To run a program or subroutine. (Has nothing to do with the \"kill\"\n\t   built-in, unless youXre trying to run a signal handler.)\n\n       execute bit\n\t   The special mark that tells the operating system it can run this\n\t   program. There are actually three execute bits under Unix, and\n\t   which bit gets used depends on whether you own the file singularly,\n\t   collectively, or not at all.\n\n       exit status\n\t   See status.\n\n       exploit\n\t   Used as a noun in this case, this refers to a known way to\n\t   compromise a program to get it to do something the author didnXt\n\t   intend.  Your task is to write unexploitable programs.\n\n       export\n\t   To make symbols from a module available for import by other\n\t   modules.\n\n       expression\n\t   Anything you can legally say in a spot where a value is required.\n\t   Typically composed of literals, variables, operators, functions,\n\t   and subroutine calls, not necessarily in that order."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary tool to find information about Perl's 'execute' keyword?
  manpageQuestion3: Can you provide an example of using the perlglossary resource to look up the definition of 'expression' in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nextension\n\t   A Perl module that also pulls in compiled C or C++ code. More\n\t   generally, any experimental option that can be compiled into Perl,\n\t   such as multithreading.\n\n   F\n       false\n\t   In Perl, any value that would look like \"\" or \"0\" if evaluated in a\n\t   string context. Since undefined values evaluate to \"\", all\n\t   undefined values are false, but not all false values are undefined.\n\n       FAQ Frequently Asked Question (although not necessarily frequently\n\t   answered, especially if the answer appears in the Perl FAQ shipped\n\t   standard with Perl).\n\n       fatal error\n\t   An uncaught exception, which causes termination of the process\n\t   after printing a message on your standard error stream. Errors that\n\t   happen inside an \"eval\" are not fatal. Instead, the \"eval\"\n\t   terminates after placing the exception message in the $@\n\t   ($EVAL_ERROR) variable.  You can try to provoke a fatal error with\n\t   the \"die\" operator (known as throwing or raising an exception), but\n\t   this may be caught by a dynamically enclosing \"eval\". If not\n\t   caught, the \"die\" becomes a fatal error."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you determine if a value in Perl is considered false?
  manpageQuestion3: What is the difference between a fatal error and an error that occurs within an 'eval' block in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nfeeping creaturism\n\t   A spoonerism of Xcreeping featurismX, noting the biological urge to\n\t   add just one more feature to a program.\n\n       field\n\t   A single piece of numeric or string data that is part of a longer\n\t   string, record, or line. Variable-width fields are usually split up\n\t   by separators (so use \"split\" to extract the fields), while fixed-\n\t   width fields are usually at fixed positions (so use \"unpack\").\n\t   Instance variables are also known as XfieldsX.\n\n       FIFO\n\t   First In, First Out. See also LIFO. Also a nickname for a named\n\t   pipe.\n\n       file\n\t   A named collection of data, usually stored on disk in a directory\n\t   in a filesystem. Roughly like a document, if youXre into office\n\t   metaphors. In modern filesystems, you can actually give a file more\n\t   than one name. Some files have special properties, like directories\n\t   and devices.\n\n       file descriptor\n\t   The little number the operating system uses to keep track of which\n\t   opened file youXre talking about.  Perl hides the file descriptor\n\t   inside a standard I/O stream and then attaches the stream to a\n\t   filehandle."
  manpageQuestion1: What is the primary purpose of the perlglossary tool?
  manpageQuestion2: How would you use perlglossary to find the definition of the term 'file descriptor'?
  manpageQuestion3: Can you provide an example of using perlglossary to look up the definition of 'FIFO'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nfileglob\n\t   A XwildcardX match on filenames. See the \"glob\" function.\n\n       filehandle\n\t   An identifier (not necessarily related to the real name of a file)\n\t   that represents a particular instance of opening a file, until you\n\t   close it. If youXre going to open and close several different files\n\t   in succession, itXs fine to open each of them with the same\n\t   filehandle, so you donXt have to write out separate code to process\n\t   each file.\n\n       filename\n\t   One name for a file. This name is listed in a directory. You can\n\t   use it in an \"open\" to tell the operating system exactly which file\n\t   you want to open, and associate the file with a filehandle, which\n\t   will carry the subsequent identity of that file in your program,\n\t   until you close it.\n\n       filesystem\n\t   A set of directories and files residing on a partition of the disk.\n\t   Sometimes known as a XpartitionX. You can change the fileXs name or\n\t   even move a file around from directory to directory within a\n\t   filesystem without actually moving the file itself, at least under\n\t   Unix."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use the fileglob feature in Perl to match filenames matching a specific pattern?
  manpageQuestion3: Can you explain how filehandles and filenames are used together in Perl to process multiple files?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nfile test operator\n\t   A built-in unary operator that you use to determine whether\n\t   something is true about a file, such as \"Xo $filename\" to test\n\t   whether youXre the owner of the file.\n\n       filter\n\t   A program designed to take a stream of input and transform it into\n\t   a stream of output.\n\n       first-come\n\t   The first PAUSE author to upload a namespace automatically becomes\n\t   the primary maintainer for that namespace. The Xfirst comeX\n\t   permissions distinguish a primary maintainer who was assigned that\n\t   role from one who received it automatically.\n\n       flag\n\t   We tend to avoid this term because it means so many things.\tIt may\n\t   mean a command-line switch that takes no argument itself (such as\n\t   PerlXs \"Xn\" and \"Xp\" flags) or, less frequently, a single-bit\n\t   indicator (such as the \"O_CREAT\" and \"O_EXCL\" flags used in\n\t   \"sysopen\"). Sometimes informally used to refer to certain regex\n\t   modifiers.\n\n       floating point\n\t   A method of storing numbers in Xscientific notationX, such that the\n\t   precision of the number is independent of its magnitude (the\n\t   decimal point XfloatsX). Perl does its numeric work with floating-\n\t   point numbers (sometimes called XfloatsX) when it canXt get away\n\t   with using integers. Floating-point numbers are mere approximations\n\t   of real numbers."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the 'file test operator' in Perl to check if a file is owned by the current user?
  manpageQuestion3: What does the term 'flag' mean in the context of Perl's perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nflush\n\t   The act of emptying a buffer, often before itXs full.\n\n       FMTEYEWTK\n\t   Far More Than Everything You Ever Wanted To Know. An exhaustive\n\t   treatise on one narrow topic, something of a super-FAQ. See Tom for\n\t   far more.\n\n       foldcase\n\t   The casemap used in Unicode when comparing or matching without\n\t   regard to case. Comparing lower-, title-, or uppercase are all\n\t   unreliable due to UnicodeXs complex, one-to-many case mappings.\n\t   Foldcase is a lowercase variant (using a partially decomposed\n\t   normalization form for certain codepoints) created specifically to\n\t   resolve this.\n\n       fork\n\t   To create a child process identical to the parent process at its\n\t   moment of conception, at least until it gets ideas of its own. A\n\t   thread with protected memory.\n\n       formal arguments\n\t   The generic names by which a subroutine knows its arguments. In\n\t   many languages, formal arguments are always given individual names;\n\t   in Perl, the formal arguments are just the elements of an array.\n\t   The formal arguments to a Perl program are $ARGV[0], $ARGV[1], and\n\t   so on. Similarly, the formal arguments to a Perl subroutine are\n\t   $_[0], $_[1], and so on. You may give the arguments individual\n\t   names by assigning the values to a \"my\" list. See also actual\n\t   arguments."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can the 'foldcase' entry in perlglossary be used in Perl programming?
  manpageQuestion3: What does the 'fork' entry in perlglossary describe and how is it commonly used in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nformat\n\t   A specification of how many spaces and digits and things to put\n\t   somewhere so that whatever youXre printing comes out nice and\n\t   pretty.\n\n       freely available\n\t   Means you donXt have to pay money to get it, but the copyright on\n\t   it may still belong to someone else (like Larry).\n\n       freely redistributable\n\t   Means youXre not in legal trouble if you give a bootleg copy of it\n\t   to your friends and we find out about it. In fact, weXd rather you\n\t   gave a copy to all your friends.\n\n       freeware\n\t   Historically, any software that you give away, particularly if you\n\t   make the source code available as well. Now often called open\n\t   source software. Recently there has been a trend to use the term in\n\t   contradistinction to open source software, to refer only to free\n\t   software released under the Free Software FoundationXs GPL (General\n\t   Public License), but this is difficult to justify etymologically.\n\n       function\n\t   Mathematically, a mapping of each of a set of input values to a\n\t   particular output value. In computers, refers to a subroutine or\n\t   operator that returns a value. It may or may not have input values\n\t   (called arguments)."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary to understand the meaning of the term 'freely redistributable'?
  manpageQuestion3: Can you explain how the term 'function' is defined in the context of perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nfunny character\n\t   Someone like Larry, or one of his peculiar friends. Also refers to\n\t   the strange prefixes that Perl requires as noun markers on its\n\t   variables.\n\n   G\n       garbage collection\n\t   A misnamed featureXit should be called, Xexpecting your mother to\n\t   pick up after youX. Strictly speaking, Perl doesnXt do this, but it\n\t   relies on a reference-counting mechanism to keep things tidy.\n\t   However, we rarely speak strictly and will often refer to the\n\t   reference-counting scheme as a form of garbage collection. (If itXs\n\t   any comfort, when your interpreter exits, a XrealX garbage\n\t   collector runs to make sure everything is cleaned up if youXve been\n\t   messy with circular references and such.)\n\n       GID Group IDXin Unix, the numeric group ID that the operating system\n\t   uses to identify you and members of your group.\n\n       glob\n\t   Strictly, the shellXs \"*\" character, which will match a XglobX of\n\t   characters when youXre trying to generate a list of filenames.\n\t   Loosely, the act of using globs and similar symbols to do pattern\n\t   matching.  See also fileglob and typeglob."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the term 'glob' in Perl programming according to the manpage?
  manpageQuestion3: What is the significance of GID in Unix systems as described in the perlglossary manpage?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nglobal\n\t   Something you can see from anywhere, usually used of variables and\n\t   subroutines that are visible everywhere in your program.  In Perl,\n\t   only certain special variables are truly globalXmost variables (and\n\t   all subroutines) exist only in the current package.\tGlobal\n\t   variables can be declared with \"our\". See XGlobal DeclarationsX in\n\t   Camel chapter 4, XStatements and DeclarationsX.\n\n       global destruction\n\t   The garbage collection of globals (and the running of any\n\t   associated object destructors) that takes place when a Perl\n\t   interpreter is being shut down. Global destruction should not be\n\t   confused with the Apocalypse, except perhaps when it should.\n\n       glue language\n\t   A language such as Perl that is good at hooking things together\n\t   that werenXt intended to be hooked together.\n\n       granularity\n\t   The size of the pieces youXre dealing with, mentally speaking.\n\n       grapheme\n\t   A graphene is an allotrope of carbon arranged in a hexagonal\n\t   crystal lattice one atom thick. A grapheme, or more fully, a\n\t   grapheme cluster string is a single user-visible character, which\n\t   may in turn be several characters (codepoints) long. For example, a\n\t   carriage return plus a line feed is a single grapheme but two\n\t   characters, while a XXX is a single grapheme but one, two, or even\n\t   three characters, depending on normalization."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you declare a global variable in Perl using the 'our' keyword?
  manpageQuestion3: What is the definition of a grapheme in the context of Perl's handling of Unicode characters?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\ngreedy\n\t   A subpattern whose quantifier wants to match as many things as\n\t   possible.\n\n       grep\n\t   Originally from the old Unix editor command for XGlobally search\n\t   for a Regular Expression and Print itX, now used in the general\n\t   sense of any kind of search, especially text searches. Perl has a\n\t   built-in \"grep\" function that searches a list for elements matching\n\t   any given criterion, whereas the grep(1) program searches for lines\n\t   matching a regular expression in one or more files.\n\n       group\n\t   A set of users of which you are a member. In some operating systems\n\t   (like Unix), you can give certain file access permissions to other\n\t   members of your group.\n\n       GV  An internal Xglob valueX typedef, holding a typeglob. The \"GV\" type\n\t   is a subclass of SV.\n\n   H\n       hacker\n\t   Someone who is brilliantly persistent in solving technical\n\t   problems, whether these involve golfing, fighting orcs, or\n\t   programming.  Hacker is a neutral term, morally speaking. Good\n\t   hackers are not to be confused with evil crackers or clueless\n\t   script kiddies. If you confuse them, we will presume that you are\n\t   either evil or clueless."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the 'grep' function in Perl to find elements in a list that match a specific criterion?
  manpageQuestion3: What is the significance of the 'group' term in the context of operating systems like Unix?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nhandler\n\t   A subroutine or method that Perl calls when your program needs to\n\t   respond to some internal event, such as a signal, or an encounter\n\t   with an operator subject to operator overloading. See also\n\t   callback.\n\n       hard reference\n\t   A scalar value containing the actual address of a referent, such\n\t   that the referentXs reference count accounts for it. (Some hard\n\t   references are held internally, such as the implicit reference from\n\t   one of a typeglobXs variable slots to its corresponding referent.)\n\t   A hard reference is different from a symbolic reference.\n\n       hash\n\t   An unordered association of key/value pairs, stored such that you\n\t   can easily use a string key to look up its associated data value.\n\t   This glossary is like a hash, where the word to be defined is the\n\t   key and the definition is the value. A hash is also sometimes\n\t   septisyllabically called an Xassociative arrayX, which is a pretty\n\t   good reason for simply calling it a XhashX instead."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary resource to look up information about Perl's 'handler' concept?
  manpageQuestion3: Can you provide an example of how to use the perlglossary resource to find out what a 'hard reference' is in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nhash table\n\t   A data structure used internally by Perl for implementing\n\t   associative arrays (hashes) efficiently. See also bucket.\n\n       header file\n\t   A file containing certain required definitions that you must\n\t   include XaheadX of the rest of your program to do certain obscure\n\t   operations. A C header file has a .h extension. Perl doesnXt really\n\t   have header files, though historically Perl has sometimes used\n\t   translated .h files with a .ph extension. See \"require\" in Camel\n\t   chapter 27, XFunctionsX. (Header files have been superseded by the\n\t   module mechanism.)\n\n       here document\n\t   So called because of a similar construct in shells that pretends\n\t   that the lines following the command are a separate file to be fed\n\t   to the command, up to some terminating string. In Perl, however,\n\t   itXs just a fancy form of quoting.\n\n       hexadecimal\n\t   A number in base 16, XhexX for short. The digits for 10 through 15\n\t   are customarily represented by the letters \"a\" through \"f\".\n\t   Hexadecimal constants in Perl start with \"0x\". See also the \"hex\"\n\t   function in Camel chapter 27, XFunctionsX."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use Perl to convert a hexadecimal value to its decimal equivalent?
  manpageQuestion3: What is the difference between a 'here document' and a regular input in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nhome directory\n\t   The directory you are put into when you log in. On a Unix system,\n\t   the name is often placed into $ENV{HOME} or $ENV{LOGDIR} by login,\n\t   but you can also find it with \"(get\"\"pwuid($<))[7]\". (Some\n\t   platforms do not have a concept of a home directory.)\n\n       host\n\t   The computer on which a program or other data resides.\n\n       hubris\n\t   Excessive pride, the sort of thing for which Zeus zaps you.\tAlso\n\t   the quality that makes you write (and maintain) programs that other\n\t   people wonXt want to say bad things about. Hence, the third great\n\t   virtue of a programmer. See also laziness and impatience.\n\n       HV  Short for a Xhash valueX typedef, which holds PerlXs internal\n\t   representation of a hash. The \"HV\" type is a subclass of SV.\n\n   I\n       identifier\n\t   A legally formed name for most anything in which a computer program\n\t   might be interested. Many languages (including Perl) allow\n\t   identifiers to start with an alphabetic character, and then contain\n\t   alphabetics and digits. Perl also allows connector punctuation like\n\t   the underscore character wherever it allows alphabetics. (Perl also\n\t   has more complicated names, like qualified names.)"
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use the perlglossary to find the definition of the term 'HV'?
  manpageQuestion3: Can you explain what is meant by an 'identifier' in the context of Perl programming according to the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nimpatience\n\t   The anger you feel when the computer is being lazy.\tThis makes you\n\t   write programs that donXt just react to your needs, but actually\n\t   anticipate them. Or at least that pretend to. Hence, the second\n\t   great virtue of a programmer. See also laziness and hubris.\n\n       implementation\n\t   How a piece of code actually goes about doing its job. Users of the\n\t   code should not count on implementation details staying the same\n\t   unless they are part of the published interface.\n\n       import\n\t   To gain access to symbols that are exported from another module.\n\t   See \"use\" in Camel chapter 27, XFunctionsX.\n\n       increment\n\t   To increase the value of something by 1 (or by some other number,\n\t   if so specified).\n\n       indexing\n\t   In olden days, the act of looking up a key in an actual index (such\n\t   as a phone book). But now it's merely the act of using any kind of\n\t   key or position to find the corresponding value, even if no index\n\t   is involved. Things have degenerated to the point that PerlXs\n\t   \"index\" function merely locates the position (index) of one string\n\t   in another."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the 'import' term in Perl programming according to the perlglossary manpage?
  manpageQuestion3: What does the 'increment' term mean in the context of Perl programming as described in the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nindirect filehandle\n\t   An expression that evaluates to something that can be used as a\n\t   filehandle: a string (filehandle name), a typeglob, a typeglob\n\t   reference, or a low-level IO object.\n\n       indirection\n\t   If something in a program isnXt the value youXre looking for but\n\t   indicates where the value is, thatXs indirection. This can be done\n\t   with either symbolic references or hard.\n\n       indirect object\n\t   In English grammar, a short noun phrase between a verb and its\n\t   direct object indicating the beneficiary or recipient of the\n\t   action. In Perl, \"print STDOUT \"$foo\\n\";\" can be understood as\n\t   Xverb indirect-object objectX, where \"STDOUT\" is the recipient of\n\t   the \"print\" action, and \"$foo\" is the object being printed.\n\t   Similarly, when invoking a method, you might place the invocant in\n\t   the dative slot between the method and its arguments:\n\n\t       $gollum = new Pathetic::Creature \"Smeagol\";\n\t       give $gollum \"Fisssssh!\";\n\t       give $gollum \"Precious!\";"
  manpageQuestion1: What is the primary purpose of the 'indirect filehandle' concept in Perl?
  manpageQuestion2: How can you use indirect object notation in Perl to call a method on an object?
  manpageQuestion3: What are the different types of expressions that can serve as an indirect filehandle in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nindirect object slot\n\t   The syntactic position falling between a method call and its\n\t   arguments when using the indirect object invocation syntax. (The\n\t   slot is distinguished by the absence of a comma between it and the\n\t   next argument.) \"STDERR\" is in the indirect object slot here:\n\n\t       print STDERR \"Awake! Awake! Fear, Fire, Foes! Awake!\\n\";\n\n       infix\n\t   An operator that comes in between its operands, such as\n\t   multiplication in \"24 * 7\".\n\n       inheritance\n\t   What you get from your ancestors, genetically or otherwise. If you\n\t   happen to be a class, your ancestors are called base classes and\n\t   your descendants are called derived classes. See single inheritance\n\t   and multiple inheritance.\n\n       instance\n\t   Short for Xan instance of a classX, meaning an object of that\n\t   class.\n\n       instance data\n\t   See instance variable.\n\n       instance method\n\t   A method of an object, as opposed to a class method.\n\n\t   A method whose invocant is an object, not a package name. Every\n\t   object of a class shares all the methods of that class, so an\n\t   instance method applies to all instances of the class, rather than\n\t   applying to a particular instance. Also see class method."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you describe the concept of an 'infix' operator in Perl?
  manpageQuestion3: Can you explain the difference between an 'instance method' and a 'class method' in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\ninstance variable\n\t   An attribute of an object; data stored with the particular object\n\t   rather than with the class as a whole.\n\n       integer\n\t   A number with no fractional (decimal) part. A counting number, like\n\t   1, 2, 3, and so on, but including 0 and the negatives.\n\n       interface\n\t   The services a piece of code promises to provide forever, in\n\t   contrast to its implementation, which it should feel free to change\n\t   whenever it likes.\n\n       interpolation\n\t   The insertion of a scalar or list value somewhere in the middle of\n\t   another value, such that it appears to have been there all along.\n\t   In Perl, variable interpolation happens in double-quoted strings\n\t   and patterns, and list interpolation occurs when constructing the\n\t   list of values to pass to a list operator or other such construct\n\t   that takes a \"LIST\".\n\n       interpreter\n\t   Strictly speaking, a program that reads a second program and does\n\t   what the second program says directly without turning the program\n\t   into a different form first, which is what compilers do. Perl is\n\t   not an interpreter by this definition, because it contains a kind\n\t   of compiler that takes a program and turns it into a more\n\t   executable form (syntax trees) within the perl process itself,\n\t   which the Perl runtime system then interprets."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How does Perl handle variable interpolation in double-quoted strings?
  manpageQuestion3: What is the difference between an interpreter and a compiler according to the perlglossary definition?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\ninvocant\n\t   The agent on whose behalf a method is invoked. In a class method,\n\t   the invocant is a package name. In an instance method, the invocant\n\t   is an object reference.\n\n       invocation\n\t   The act of calling up a deity, daemon, program, method, subroutine,\n\t   or function to get it to do what you think itXs supposed to do.  We\n\t   usually XcallX subroutines but XinvokeX methods, since it sounds\n\t   cooler.\n\n       I/O Input from, or output to, a file or device.\n\n       IO  An internal I/O object. Can also mean indirect object.\n\n       I/O layer\n\t   One of the filters between the data and what you get as input or\n\t   what you end up with as output.\n\n       IPA India Pale Ale. Also the International Phonetic Alphabet, the\n\t   standard alphabet used for phonetic notation worldwide. Draws\n\t   heavily on Unicode, including many combining characters.\n\n       IP  Internet Protocol, or Intellectual Property.\n\n       IPC Interprocess Communication.\n\n       is-a\n\t   A relationship between two objects in which one object is\n\t   considered to be a more specific version of the other, generic\n\t   object: XA camel is a mammal.X Since the generic object really only\n\t   exists in a Platonic sense, we usually add a little abstraction to\n\t   the notion of objects and think of the relationship as being\n\t   between a generic base class and a specific derived class. Oddly\n\t   enough, Platonic classes donXt always have Platonic\n\t   relationshipsXsee inheritance."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you describe the difference between 'invocation' and 'call' in the context of Perl programming?
  manpageQuestion3: What is the meaning of 'I/O layer' in Perl's I/O system?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\niteration\n\t   Doing something repeatedly.\n\n       iterator\n\t   A special programming gizmo that keeps track of where you are in\n\t   something that youXre trying to iterate over. The \"foreach\" loop in\n\t   Perl contains an iterator; so does a hash, allowing you to \"each\"\n\t   through it.\n\n       IV  The integer four, not to be confused with six, TomXs favorite\n\t   editor. IV also means an internal Integer Value of the type a\n\t   scalar can hold, not to be confused with an NV.\n\n   J\n       JAPH\n\t   XJust Another Perl HackerX, a clever but cryptic bit of Perl code\n\t   that, when executed, evaluates to that string. Often used to\n\t   illustrate a particular Perl feature, and something of an ongoing\n\t   Obfuscated Perl Contest seen in USENET signatures.\n\n   K\n       key The string index to a hash, used to look up the value associated\n\t   with that key.\n\n       keyword\n\t   See reserved words.\n\n   L\n       label\n\t   A name you give to a statement so that you can talk about that\n\t   statement elsewhere in the program."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary to understand the concept of an 'iterator' in Perl?
  manpageQuestion3: What is the definition of a 'key' in the context of Perl hashes according to the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nlaziness\n\t   The quality that makes you go to great effort to reduce overall\n\t   energy expenditure. It makes you write labor-saving programs that\n\t   other people will find useful, and then document what you wrote so\n\t   you donXt have to answer so many questions about it. Hence, the\n\t   first great virtue of a programmer. Also hence, this book. See also\n\t   impatience and hubris.\n\n       leftmost longest\n\t   The preference of the regular expression engine to match the\n\t   leftmost occurrence of a pattern, then given a position at which a\n\t   match will occur, the preference for the longest match (presuming\n\t   the use of a greedy quantifier). See Camel chapter 5, XPattern\n\t   MatchingX for much more on this subject.\n\n       left shift\n\t   A bit shift that multiplies the number by some power of 2.\n\n       lexeme\n\t   Fancy term for a token.\n\n       lexer\n\t   Fancy term for a tokener.\n\n       lexical analysis\n\t   Fancy term for tokenizing.\n\n       lexical scoping\n\t   Looking at your Oxford English Dictionary through a microscope.\n\t   (Also known as static scoping, because dictionaries donXt change\n\t   very fast.) Similarly, looking at variables stored in a private\n\t   dictionary (namespace) for each scope, which are visible only from\n\t   their point of declaration down to the end of the lexical scope in\n\t   which they are declared. XSyn.  static scoping. XAnt. dynamic\n\t   scoping."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How does the 'leftmost longest' matching preference function in regular expressions according to the perlglossary?
  manpageQuestion3: Can you explain the concept of 'lexical scoping' as described in the perlglossary and provide an example of its application in Perl programming?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nlexical variable\n\t   A variable subject to lexical scoping, declared by \"my\". Often just\n\t   called a XlexicalX. (The \"our\" declaration declares a lexically\n\t   scoped name for a global variable, which is not itself a lexical\n\t   variable.)\n\n       library\n\t   Generally, a collection of procedures. In ancient days, referred to\n\t   a collection of subroutines in a .pl file. In modern times, refers\n\t   more often to the entire collection of Perl modules on your system.\n\n       LIFO\n\t   Last In, First Out. See also FIFO. A LIFO is usually called a\n\t   stack.\n\n       line\n\t   In Unix, a sequence of zero or more nonnewline characters\n\t   terminated with a newline character. On non-Unix machines, this is\n\t   emulated by the C library even if the underlying operating system\n\t   has different ideas.\n\n       linebreak\n\t   A grapheme consisting of either a carriage return followed by a\n\t   line feed or any character with the Unicode Vertical Space\n\t   character property.\n\n       line buffering\n\t   Used by a standard I/O output stream that flushes its buffer after\n\t   every newline. Many standard I/O libraries automatically set up\n\t   line buffering on output that is going to the terminal."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you determine the meaning of the term 'library' in the context of Perl programming according to the perlglossary documentation?
  manpageQuestion3: What is the definition of 'linebreak' as provided by the perlglossary resource?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nline number\n\t   The number of lines read previous to this one, plus 1. Perl keeps a\n\t   separate line number for each source or input file it opens. The\n\t   current source fileXs line number is represented by \"__LINE__\". The\n\t   current input line number (for the file that was most recently read\n\t   via \"<FH>\") is represented by the $. ($INPUT_LINE_NUMBER) variable.\n\t   Many error messages report both values, if available.\n\n       link\n\t   Used as a noun, a name in a directory that represents a file. A\n\t   given file can have multiple links to it. ItXs like having the same\n\t   phone number listed in the phone directory under different names.\n\t   As a verb, to resolve a partially compiled fileXs unresolved\n\t   symbols into a (nearly) executable image. Linking can generally be\n\t   static or dynamic, which has nothing to do with static or dynamic\n\t   scoping.\n\n       LIST\n\t   A syntactic construct representing a comma- separated list of\n\t   expressions, evaluated to produce a list value.  Each expression in\n\t   a \"LIST\" is evaluated in list context and interpolated into the\n\t   list value."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How does Perl represent the current line number in a source file and an input file?
  manpageQuestion3: What is the difference between using a 'LINK' as a noun and as a verb in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nlist\n\t   An ordered set of scalar values.\n\n       list context\n\t   The situation in which an expression is expected by its\n\t   surroundings (the code calling it) to return a list of values\n\t   rather than a single value. Functions that want a \"LIST\" of\n\t   arguments tell those arguments that they should produce a list\n\t   value. See also context.\n\n       list operator\n\t   An operator that does something with a list of values, such as\n\t   \"join\" or \"grep\". Usually used for named built-in operators (such\n\t   as \"print\", \"unlink\", and \"system\") that do not require parentheses\n\t   around their argument list.\n\n       list value\n\t   An unnamed list of temporary scalar values that may be passed\n\t   around within a program from any list-generating function to any\n\t   function or construct that provides a list context.\n\n       literal\n\t   A token in a programming language, such as a number or string, that\n\t   gives you an actual value instead of merely representing possible\n\t   values as a variable does."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use the list operator in Perl to combine several strings into a single string?
  manpageQuestion3: Can you explain the difference between list context and scalar context in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nlittle-endian\n\t   From Swift: someone who eats eggs little end first. Also used of\n\t   computers that store the least significant byte of a word at a\n\t   lower byte address than the most significant byte. Often considered\n\t   superior to big-endian machines. See also big-endian.\n\n       local\n\t   Not meaning the same thing everywhere. A global variable in Perl\n\t   can be localized inside a dynamic scope via the \"local\" operator.\n\n       logical operator\n\t   Symbols representing the concepts XandX, XorX, XxorX, and XnotX.\n\n       lookahead\n\t   An assertion that peeks at the string to the right of the current\n\t   match location.\n\n       lookbehind\n\t   An assertion that peeks at the string to the left of the current\n\t   match location.\n\n       loop\n\t   A construct that performs something repeatedly, like a roller\n\t   coaster.\n\n       loop control statement\n\t   Any statement within the body of a loop that can make a loop\n\t   prematurely stop looping or skip an iteration. Generally, you\n\t   shouldnXt try this on roller coasters."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the 'local' operator in Perl to localize a global variable within a dynamic scope?
  manpageQuestion3: What is the definition of a 'lookahead' in the context of Perl regular expressions?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nloop label\n\t   A kind of key or name attached to a loop (or roller coaster) so\n\t   that loop control statements can talk about which loop they want to\n\t   control.\n\n       lowercase\n\t   In Unicode, not just characters with the General Category of\n\t   Lowercase Letter, but any character with the Lowercase property,\n\t   including Modifier Letters, Letter Numbers, some Other Symbols, and\n\t   one Combining Mark.\n\n       lvaluable\n\t   Able to serve as an lvalue.\n\n       lvalue\n\t   Term used by language lawyers for a storage location you can assign\n\t   a new value to, such as a variable or an element of an array. The\n\t   XlX is short for XleftX, as in the left side of an assignment, a\n\t   typical place for lvalues. An lvaluable function or expression is\n\t   one to which a value may be assigned, as in \"pos($x) = 10\".\n\n       lvalue modifier\n\t   An adjectival pseudofunction that warps the meaning of an lvalue in\n\t   some declarative fashion. Currently there are three lvalue\n\t   modifiers: \"my\", \"our\", and \"local\"."
  manpageQuestion1: What is the primary purpose of the perlglossary tool?
  manpageQuestion2: How can you use the lvalue modifier in Perl to declare a variable with lexical scope?
  manpageQuestion3: What does the term 'lvalue' mean in the context of Perl programming?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nM\n       magic\n\t   Technically speaking, any extra semantics attached to a variable\n\t   such as $!, $0, %ENV, or %SIG, or to any tied variable.  Magical\n\t   things happen when you diddle those variables.\n\n       magical increment\n\t   An increment operator that knows how to bump up ASCII alphabetics\n\t   as well as numbers.\n\n       magical variables\n\t   Special variables that have side effects when you access them or\n\t   assign to them. For example, in Perl, changing elements of the %ENV\n\t   array also changes the corresponding environment variables that\n\t   subprocesses will use. Reading the $! variable gives you the\n\t   current system error number or message.\n\n       Makefile\n\t   A file that controls the compilation of a program. Perl programs\n\t   donXt usually need a Makefile because the Perl compiler has plenty\n\t   of self-control.\n\n       man The Unix program that displays online documentation (manual pages)\n\t   for you.\n\n       manpage\n\t   A XpageX from the manuals, typically accessed via the man(1)\n\t   command. A manpage contains a SYNOPSIS, a DESCRIPTION, a list of\n\t   BUGS, and so on, and is typically longer than a page. There are\n\t   manpages documenting commands, syscalls, library functions,\n\t   devices, protocols, files, and such. In this book, we call any\n\t   piece of standard Perl documentation (like perlop or perldelta) a\n\t   manpage, no matter what format itXs installed in on your system."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the man command to view the perlglossary documentation?
  manpageQuestion3: What is a magical variable in Perl, and can you provide an example of one?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nmatching\n\t   See pattern matching.\n\n       member data\n\t   See instance variable.\n\n       memory\n\t   This always means your main memory, not your disk.  Clouding the\n\t   issue is the fact that your machine may implement virtual memory;\n\t   that is, it will pretend that it has more memory than it really\n\t   does, and itXll use disk space to hold inactive bits. This can make\n\t   it seem like you have a little more memory than you really do, but\n\t   itXs not a substitute for real memory. The best thing that can be\n\t   said about virtual memory is that it lets your performance degrade\n\t   gradually rather than suddenly when you run out of real memory. But\n\t   your program can die when you run out of virtual memory, tooXif you\n\t   havenXt thrashed your disk to death first.\n\n       metacharacter\n\t   A character that is not supposed to be treated normally. Which\n\t   characters are to be treated specially as metacharacters varies\n\t   greatly from context to context. Your shell will have certain\n\t   metacharacters, double-quoted Perl strings have other\n\t   metacharacters, and regular expression patterns have all the\n\t   double-quote metacharacters plus some extra ones of their own."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary to find information about 'metacharacter' in Perl?
  manpageQuestion3: What does the term 'virtual memory' mean according to the perlglossary manpage?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nmetasymbol\n\t   Something weXd call a metacharacter except that itXs a sequence of\n\t   more than one character.  Generally, the first character in the\n\t   sequence must be a true metacharacter to get the other characters\n\t   in the metasymbol to misbehave along with it.\n\n       method\n\t   A kind of action that an object can take if you tell it to. See\n\t   Camel chapter 12, XObjectsX.\n\n       method resolution order\n\t   The path Perl takes through @INC. By default, this is a double\n\t   depth first search, once looking for defined methods and once for\n\t   \"AUTOLOAD\". However, Perl lets you configure this with \"mro\".\n\n       minicpan\n\t   A CPAN mirror that includes just the latest versions for each\n\t   distribution, probably created with \"CPAN::Mini\". See Camel chapter\n\t   19, XCPANX.\n\n       minimalism\n\t   The belief that Xsmall is beautifulX. Paradoxically, if you say\n\t   something in a small language, it turns out big, and if you say it\n\t   in a big language, it turns out small. Go figure."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary to understand the concept of 'method resolution order' in Perl?
  manpageQuestion3: What does the term 'minimalism' mean in the context of Perl programming according to the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nmode\n\t   In the context of the stat(2) syscall, refers to the field holding\n\t   the permission bits and the type of the file.\n\n       modifier\n\t   See statement modifier, regular expression, and lvalue, not\n\t   necessarily in that order.\n\n       module\n\t   A file that defines a package of (almost) the same name, which can\n\t   either export symbols or function as an object class.  (A moduleXs\n\t   main .pm file may also load in other files in support of the\n\t   module.) See the \"use\" built-in.\n\n       modulus\n\t   An integer divisor when youXre interested in the remainder instead\n\t   of the quotient.\n\n       mojibake\n\t   When you speak one language and the computer thinks youXre speaking\n\t   another. YouXll see odd translations when you send UTFX8, for\n\t   instance, but the computer thinks you sent Latin-1, showing all\n\t   sorts of weird characters instead. The term is written XXXXXXin\n\t   Japanese and means Xcharacter rotX, an apt description. Pronounced\n\t   [\"modXibake\"] in standard IPA phonetics, or approximately Xmoh-jee-\n\t   bah-kehX."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the 'mode' term in the context of the stat(2) syscall?
  manpageQuestion3: What does the term 'mojibake' refer to in the perlglossary resource?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nmonger\n\t   Short for one member of Perl mongers, a purveyor of Perl.\n\n       mortal\n\t   A temporary value scheduled to die when the current statement\n\t   finishes.\n\n       mro See method resolution order.\n\n       multidimensional array\n\t   An array with multiple subscripts for finding a single element.\n\t   Perl implements these using referencesXsee Camel chapter 9, XData\n\t   StructuresX.\n\n       multiple inheritance\n\t   The features you got from your mother and father, mixed together\n\t   unpredictably. (See also inheritance and single inheritance.) In\n\t   computer languages (including Perl), it is the notion that a given\n\t   class may have multiple direct ancestors or base classes.\n\n   N\n       named pipe\n\t   A pipe with a name embedded in the filesystem so that it can be\n\t   accessed by two unrelated processes.\n\n       namespace\n\t   A domain of names. You neednXt worry about whether the names in one\n\t   such domain have been used in another. See package.\n\n       NaN Not a number. The value Perl uses for certain invalid or\n\t   inexpressible floating-point operations."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary tool to find the definition of 'mro' in Perl?
  manpageQuestion3: Can you provide an example of using perlglossary to look up the meaning of 'multidimensional array' in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nnetwork address\n\t   The most important attribute of a socket, like your telephoneXs\n\t   telephone number. Typically an IP address. See also port.\n\n       newline\n\t   A single character that represents the end of a line, with the\n\t   ASCII value of 012 octal under Unix (but 015 on a Mac), and\n\t   represented by \"\\n\" in Perl strings. For Windows machines writing\n\t   text files, and for certain physical devices like terminals, the\n\t   single newline gets automatically translated by your C library into\n\t   a line feed and a carriage return, but normally, no translation is\n\t   done.\n\n       NFS Network File System, which allows you to mount a remote filesystem\n\t   as if it were local.\n\n       normalization\n\t   Converting a text string into an alternate but equivalent canonical\n\t   (or compatible) representation that can then be compared for\n\t   equivalence. Unicode recognizes four different normalization forms:\n\t   NFD, NFC, NFKD, and NFKC.\n\n       null character\n\t   A character with the numeric value of zero. ItXs used by C to\n\t   terminate strings, but Perl allows strings to contain a null."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How does Perl handle newline characters on different operating systems?
  manpageQuestion3: What is normalization in the context of Perl and Unicode handling?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nnull list\n\t   A list value with zero elements, represented in Perl by \"()\".\n\n       null string\n\t   A string containing no characters, not to be confused with a string\n\t   containing a null character, which has a positive length and is\n\t   true.\n\n       numeric context\n\t   The situation in which an expression is expected by its\n\t   surroundings (the code calling it) to return a number.  See also\n\t   context and string context.\n\n       numification\n\t   (Sometimes spelled nummification and nummify.) Perl lingo for\n\t   implicit conversion into a number; the related verb is numify.\n\t   Numification is intended to rhyme with mummification, and numify\n\t   with mummify. It is unrelated to English numen, numina, numinous.\n\t   We originally forgot the extra m a long time ago, and some people\n\t   got used to our funny spelling, and so just as with\n\t   \"HTTP_REFERER\"Xs own missing letter, our weird spelling has stuck\n\t   around.\n\n       NV  Short for Nevada, no part of which will ever be confused with\n\t   civilization. NV also means an internal floating- point Numeric\n\t   Value of the type a scalar can hold, not to be confused with an IV."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you determine if an expression in Perl is in a numeric context?
  manpageQuestion3: What does the term 'numification' mean in Perl, and how is it different from explicit numeric conversion?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nnybble\n\t   Half a byte, equivalent to one hexadecimal digit, and worth four\n\t   bits.\n\n   O\n       object\n\t   An instance of a class. Something that XknowsX what user-defined\n\t   type (class) it is, and what it can do because of what class it is.\n\t   Your program can request an object to do things, but the object\n\t   gets to decide whether it wants to do them or not. Some objects are\n\t   more accommodating than others.\n\n       octal\n\t   A number in base 8. Only the digits 0 through 7 are allowed. Octal\n\t   constants in Perl start with 0, as in 013. See also the \"oct\"\n\t   function.\n\n       offset\n\t   How many things you have to skip over when moving from the\n\t   beginning of a string or array to a specific position within it.\n\t   Thus, the minimum offset is zero, not one, because you donXt skip\n\t   anything to get to the first item.\n\n       one-liner\n\t   An entire computer program crammed into one line of text.\n\n       open source software\n\t   Programs for which the source code is freely available and freely\n\t   redistributable, with no commercial strings attached.  For a more\n\t   detailed definition, see <http://www.opensource.org/osd.html>."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use the perlglossary tool to find the definition of 'nybble'?
  manpageQuestion3: Can you provide an example of using the perlglossary resource to look up the meaning of 'offset'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\noperand\n\t   An expression that yields a value that an operator operates on. See\n\t   also precedence.\n\n       operating system\n\t   A special program that runs on the bare machine and hides the gory\n\t   details of managing processes and devices.  Usually used in a\n\t   looser sense to indicate a particular culture of programming. The\n\t   loose sense can be used at varying levels of specificity.  At one\n\t   extreme, you might say that all versions of Unix and Unix-\n\t   lookalikes are the same operating system (upsetting many people,\n\t   especially lawyers and other advocates). At the other extreme, you\n\t   could say this particular version of this particular vendorXs\n\t   operating system is different from any other version of this or any\n\t   other vendorXs operating system. Perl is much more portable across\n\t   operating systems than many other languages. See also architecture\n\t   and platform.\n\n       operator\n\t   A gizmo that transforms some number of input values to some number\n\t   of output values, often built into a language with a special syntax\n\t   or symbol. A given operator may have specific expectations about\n\t   what types of data you give as its arguments (operands) and what\n\t   type of data you want back from it."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use the perlglossary to find the definition of the term 'operand'?
  manpageQuestion3: Can you provide an example of using perlglossary to look up the definition of 'operator'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\noperator overloading\n\t   A kind of overloading that you can do on built-in operators to make\n\t   them work on objects as if the objects were ordinary scalar values,\n\t   but with the actual semantics supplied by the object class. This is\n\t   set up with the overload pragmaXsee Camel chapter 13,\n\t   XOverloadingX.\n\n       options\n\t   See either switches or regular expression modifiers.\n\n       ordinal\n\t   An abstract characterXs integer value. Same thing as codepoint.\n\n       overloading\n\t   Giving additional meanings to a symbol or construct.  Actually, all\n\t   languages do overloading to one extent or another, since people are\n\t   good at figuring out things from context.\n\n       overriding\n\t   Hiding or invalidating some other definition of the same name. (Not\n\t   to be confused with overloading, which adds definitions that must\n\t   be disambiguated some other way.) To confuse the issue further, we\n\t   use the word with two overloaded definitions: to describe how you\n\t   can define your own subroutine to hide a built-in function of the\n\t   same name (see the section XOverriding Built-in FunctionsX in Camel\n\t   chapter 11, XModulesX), and to describe how you can define a\n\t   replacement method in a derived class to hide a base classXs method\n\t   of the same name (see Camel chapter 12, XObjectsX)."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary tool to find information about the concept of 'overloading' in Perl?
  manpageQuestion3: Can you explain how the perlglossary resource defines the difference between 'overloading' and 'overriding' in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nowner\n\t   The one user (apart from the superuser) who has absolute control\n\t   over a file. A file may also have a group of users who may exercise\n\t   joint ownership if the real owner permits it. See permission bits.\n\n   P\n       package\n\t   A namespace for global variables, subroutines, and the like, such\n\t   that they can be kept separate from like-named symbols in other\n\t   namespaces. In a sense, only the package is global, since the\n\t   symbols in the packageXs symbol table are only accessible from code\n\t   compiled outside the package by naming the package. But in another\n\t   sense, all package symbols are also globalsXtheyXre just well-\n\t   organized globals.\n\n       pad Short for scratchpad.\n\n       parameter\n\t   See argument.\n\n       parent class\n\t   See base class.\n\n       parse tree\n\t   See syntax tree.\n\n       parsing\n\t   The subtle but sometimes brutal art of attempting to turn your\n\t   possibly malformed program into a valid syntax tree.\n\n       patch\n\t   To fix by applying one, as it were. In the realm of hackerdom, a\n\t   listing of the differences between two versions of a program as\n\t   might be applied by the patch(1) program when you want to fix a bug\n\t   or upgrade your old version."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary resource to understand the concept of 'package' in Perl?
  manpageQuestion3: What does the term 'pad' refer to in the context of Perl as described in the perlglossary resource?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nPATH\n\t   The list of directories the system searches to find a program you\n\t   want to execute.  The list is stored as one of your environment\n\t   variables, accessible in Perl as $ENV{PATH}.\n\n       pathname\n\t   A fully qualified filename such as /usr/bin/perl. Sometimes\n\t   confused with \"PATH\".\n\n       pattern\n\t   A template used in pattern matching.\n\n       pattern matching\n\t   Taking a pattern, usually a regular expression, and trying the\n\t   pattern various ways on a string to see whether thereXs any way to\n\t   make it fit. Often used to pick interesting tidbits out of a file.\n\n       PAUSE\n\t   The Perl Authors Upload SErver (<http://pause.perl.org>), the\n\t   gateway for modules on their way to CPAN.\n\n       Perl mongers\n\t   A Perl user group, taking the form of its name from the New York\n\t   Perl mongers, the first Perl user group. Find one near you at\n\t   <http://www.pm.org>.\n\n       permission bits\n\t   Bits that the owner of a file sets or unsets to allow or disallow\n\t   access to other people. These flag bits are part of the mode word\n\t   returned by the \"stat\" built-in when you ask about a file. On Unix\n\t   systems, you can check the ls(1) manpage for more information."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you retrieve the list of directories in the PATH environment variable using Perl?
  manpageQuestion3: What is the difference between a 'pathname' and a 'PATH' in the context of Perl programming?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nPern\n\t   What you get when you do \"Perl++\" twice. Doing it only once will\n\t   curl your hair. You have to increment it eight times to shampoo\n\t   your hair. Lather, rinse, iterate.\n\n       pipe\n\t   A direct connection that carries the output of one process to the\n\t   input of another without an intermediate temporary file.  Once the\n\t   pipe is set up, the two processes in question can read and write as\n\t   if they were talking to a normal file, with some caveats.\n\n       pipeline\n\t   A series of processes all in a row, linked by pipes, where each\n\t   passes its output stream to the next.\n\n       platform\n\t   The entire hardware and software context in which a program runs. A\n\t   program written in a platform-dependent language might break if you\n\t   change any of the following: machine, operating system, libraries,\n\t   compiler, or system configuration. The perl interpreter has to be\n\t   compiled differently for each platform because it is implemented in\n\t   C, but programs written in the Perl language are largely platform\n\t   independent."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use pipes in a pipeline to pass the output of one command to another?
  manpageQuestion3: What does the term 'platform' mean in the context of Perl programming?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\npod The markup used to embed documentation into your Perl code. Pod\n\t   stands for XPlain old documentationX. See Camel chapter 23, XPlain\n\t   Old DocumentationX.\n\n       pod command\n\t   A sequence, such as \"=head1\", that denotes the start of a pod\n\t   section.\n\n       pointer\n\t   A variable in a language like C that contains the exact memory\n\t   location of some other item. Perl handles pointers internally so\n\t   you donXt have to worry about them. Instead, you just use symbolic\n\t   pointers in the form of keys and variable names, or hard\n\t   references, which arenXt pointers (but act like pointers and do in\n\t   fact contain pointers).\n\n       polymorphism\n\t   The notion that you can tell an object to do something generic, and\n\t   the object will interpret the command in different ways depending\n\t   on its type. [< Greek XXXX- + XXXXX, many forms.]\n\n       port\n\t   The part of the address of a TCP or UDP socket that directs packets\n\t   to the correct process after finding the right machine, something\n\t   like the phone extension you give when you reach the company\n\t   operator. Also the result of converting code to run on a different\n\t   platform than originally intended, or the verb denoting this\n\t   conversion."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use perlglossary to find information about the term 'polymorphism' in Perl?
  manpageQuestion3: Can you explain how the 'pod' markup is used in Perl code to embed documentation?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nportable\n\t   Once upon a time, C code compilable under both BSD and SysV. In\n\t   general, code that can be easily converted to run on another\n\t   platform, where XeasilyX can be defined however you like, and\n\t   usually is.\tAnything may be considered portable if you try hard\n\t   enough, such as a mobile home or London Bridge.\n\n       porter\n\t   Someone who XcarriesX software from one platform to another.\n\t   Porting programs written in platform-dependent languages such as C\n\t   can be difficult work, but porting programs like Perl is very much\n\t   worth the agony.\n\n       possessive\n\t   Said of quantifiers and groups in patterns that refuse to give up\n\t   anything once theyXve gotten their mitts on it. Catchier and easier\n\t   to say than the even more formal nonbacktrackable.\n\n       POSIX\n\t   The Portable Operating System Interface specification.\n\n       postfix\n\t   An operator that follows its operand, as in \"$x++\".\n\n       pp  An internal shorthand for a Xpush- popX code; that is, C code\n\t   implementing PerlXs stack machine."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use the perlglossary to find the definition of a specific term, such as 'portable'?
  manpageQuestion3: Can you provide an example of a term from perlglossary and explain its meaning in the context of Perl programming?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\npragma\n\t   A standard module whose practical hints and suggestions are\n\t   received (and possibly ignored) at compile time. Pragmas are named\n\t   in all lowercase.\n\n       precedence\n\t   The rules of conduct that, in the absence of other guidance,\n\t   determine what should happen first.\tFor example, in the absence of\n\t   parentheses, you always do multiplication before addition.\n\n       prefix\n\t   An operator that precedes its operand, as in \"++$x\".\n\n       preprocessing\n\t   What some helper process did to transform the incoming data into a\n\t   form more suitable for the current process. Often done with an\n\t   incoming pipe. See also C preprocessor.\n\n       primary maintainer\n\t   The author that PAUSE allows to assign co-maintainer permissions to\n\t   a namespace. A primary maintainer can give up this distinction by\n\t   assigning it to another PAUSE author. See Camel chapter 19, XCPANX.\n\n       procedure\n\t   A subroutine.\n\n       process\n\t   An instance of a running program. Under multitasking systems like\n\t   Unix, two or more separate processes could be running the same\n\t   program independently at the same timeXin fact, the \"fork\" function\n\t   is designed to bring about this happy state of affairs. Under other\n\t   operating systems, processes are sometimes called XthreadsX,\n\t   XtasksX, or XjobsX, often with slight nuances in meaning."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the 'precedence' concept in Perl to control the order of operations in an expression?
  manpageQuestion3: What is the difference between a 'process' and a 'thread' in Perl, according to the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nprogram\n\t   See script.\n\n       program generator\n\t   A system that algorithmically writes code for you in a high-level\n\t   language. See also code generator.\n\n       progressive matching\n\t   Pattern matching  matching>that picks up where it left off before.\n\n       property\n\t   See either instance variable or character property.\n\n       protocol\n\t   In networking, an agreed-upon way of sending messages back and\n\t   forth so that neither correspondent will get too confused.\n\n       prototype\n\t   An optional part of a subroutine declaration telling the Perl\n\t   compiler how many and what flavor of arguments may be passed as\n\t   actual arguments, so you can write subroutine calls that parse much\n\t   like built-in functions. (Or donXt parse, as the case may be.)\n\n       pseudofunction\n\t   A construct that sometimes looks like a function but really isnXt.\n\t   Usually reserved for lvalue modifiers like \"my\", for context\n\t   modifiers like \"scalar\", and for the pick-your-own-quotes\n\t   constructs, \"q//\", \"qq//\", \"qx//\", \"qw//\", \"qr//\", \"m//\", \"s///\",\n\t   \"y///\", and \"tr///\"."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can a programmer use the perlglossary to understand the concept of a 'prototype' in Perl?
  manpageQuestion3: Can you explain how the term 'pseudofunction' is used in Perl according to the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\npseudohash\n\t   Formerly, a reference to an array whose initial element happens to\n\t   hold a reference to a hash. You used to be able to treat a\n\t   pseudohash reference as either an array reference or a hash\n\t   reference. Pseudohashes are no longer supported.\n\n       pseudoliteral\n\t   An operator X\"that looks something like a literal, such as the\n\t   output-grabbing operator, <literal moreinfo=\"none\"\"`>\"command\"\"`\".\n\n       public domain\n\t   Something not owned by anybody. Perl is copyrighted and is thus not\n\t   in the public domainXitXs just freely available and freely\n\t   redistributable.\n\n       pumpkin\n\t   A notional XbatonX handed around the Perl community indicating who\n\t   is the lead integrator in some arena of development.\n\n       pumpking\n\t   A pumpkin holder, the person in charge of pumping the pump, or at\n\t   least priming it. Must be willing to play the part of the Great\n\t   Pumpkin now and then.\n\n       PV  A Xpointer valueX, which is Perl Internals Talk for a \"char*\".\n\n   Q\n       qualified\n\t   Possessing a complete name. The symbol $Ent::moot is qualified;\n\t   $moot is unqualified. A fully qualified filename is specified from\n\t   the top-level directory."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you identify a pseudohash in Perl, and why is it no longer supported?
  manpageQuestion3: What does the term 'PV' mean in the context of Perl internals?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nquantifier\n\t   A component of a regular expression specifying how many times the\n\t   foregoing atom may occur.\n\n   R\n       race condition\n\t   A race condition exists when the result of several interrelated\n\t   events depends on the ordering of those events, but that order\n\t   cannot be guaranteed due to nondeterministic timing effects. If two\n\t   or more programs, or parts of the same program, try to go through\n\t   the same series of events, one might interrupt the work of the\n\t   other. This is a good way to find an exploit.\n\n       readable\n\t   With respect to files, one that has the proper permission bit set\n\t   to let you access the file. With respect to computer programs, one\n\t   thatXs written well enough that someone has a chance of figuring\n\t   out what itXs trying to do.\n\n       reaping\n\t   The last rites performed by a parent process on behalf of a\n\t   deceased child process so that it doesnXt remain a zombie.  See the\n\t   \"wait\" and \"waitpid\" function calls.\n\n       record\n\t   A set of related data values in a file or stream, often associated\n\t   with a unique key field. In Unix, often commensurate with a line,\n\t   or a blank-lineXterminated set of lines (a XparagraphX).  Each line\n\t   of the /etc/passwd file is a record, keyed on login name,\n\t   containing information about that user."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use the perlglossary to understand the concept of a 'race condition' in regular expressions?
  manpageQuestion3: Can you explain how the term 'reaping' is defined in the perlglossary and provide an example of its usage in a Unix environment?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nrecursion\n\t   The art of defining something (at least partly) in terms of itself,\n\t   which is a naughty no-no in dictionaries but often works out okay\n\t   in computer programs if youXre careful not to recurse forever\n\t   (which is like an infinite loop with more spectacular failure\n\t   modes).\n\n       reference\n\t   Where you look to find a pointer to information somewhere else.\n\t   (See indirection.) References come in two flavors: symbolic\n\t   references and hard references.\n\n       referent\n\t   Whatever a reference refers to, which may or may not have a name.\n\t   Common types of referents include scalars, arrays, hashes, and\n\t   subroutines.\n\n       regex\n\t   See regular expression.\n\n       regular expression\n\t   A single entity with various interpretations, like an elephant. To\n\t   a computer scientist, itXs a grammar for a little language in which\n\t   some strings are legal and others arenXt. To normal people, itXs a\n\t   pattern you can use to find what youXre looking for when it varies\n\t   from case to case. PerlXs regular expressions are far from regular\n\t   in the theoretical sense, but in regular use they work quite well.\n\t   HereXs a regular expression: \"/Oh s.*t./\". This will match strings\n\t   like X\"Oh say can you see by the dawn's early light\"X and X\"Oh\n\t   sit!\"X. See Camel chapter 5, XPattern MatchingX."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary to understand the concept of 'regex' in Perl?
  manpageQuestion3: Can you explain how the term 'reference' is used in Perl according to the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nregular expression modifier\n\t   An option on a pattern or substitution, such as \"/i\" to render the\n\t   pattern case- insensitive.\n\n       regular file\n\t   A file thatXs not a directory, a device, a named pipe or socket, or\n\t   a symbolic link. Perl uses the \"Xf\" file test operator to identify\n\t   regular files. Sometimes called a XplainX file.\n\n       relational operator\n\t   An operator that says whether a particular ordering relationship is\n\t   true about a pair of operands. Perl has both numeric and string\n\t   relational operators. See collating sequence.\n\n       reserved words\n\t   A word with a specific, built-in meaning to a compiler, such as\n\t   \"if\" or \"delete\". In many languages (not Perl), itXs illegal to use\n\t   reserved words to name anything else. (Which is why theyXre\n\t   reserved, after all.) In Perl, you just canXt use them to name\n\t   labels or filehandles. Also called XkeywordsX.\n\n       return value\n\t   The value produced by a subroutine or expression when evaluated. In\n\t   Perl, a return value may be either a list or a scalar."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use regular expressions in Perl with case-insensitive matching?
  manpageQuestion3: What is the definition of a 'reserved word' in Perl and how does it differ from other programming languages?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nRFC Request For Comment, which despite the timid connotations is the\n\t   name of a series of important standards documents.\n\n       right shift\n\t   A bit shift that divides a number by some power of 2.\n\n       role\n\t   A name for a concrete set of behaviors. A role is a way to add\n\t   behavior to a class without inheritance.\n\n       root\n\t   The superuser (\"UID\" == 0). Also the top-level directory of the\n\t   filesystem.\n\n       RTFM\n\t   What you are told when someone thinks you should Read The Fine\n\t   Manual.\n\n       run phase\n\t   Any time after Perl starts running your main program.  See also\n\t   compile phase. Run phase is mostly spent in runtime but may also be\n\t   spent in compile time when \"require\", \"do\" \"FILE\", or \"eval\"\n\t   \"STRING\" operators are executed, or when a substitution uses the\n\t   \"/ee\" modifier.\n\n       runtime\n\t   The time when Perl is actually doing what your code says to do, as\n\t   opposed to the earlier period of time when it was trying to figure\n\t   out whether what you said made any sense whatsoever, which is\n\t   compile time."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary to find the definition of the term 'run phase'?
  manpageQuestion3: What is the difference between compile time and runtime according to the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nruntime pattern\n\t   A pattern that contains one or more variables to be interpolated\n\t   before parsing the pattern as a regular expression, and that\n\t   therefore cannot be analyzed at compile time, but must be\n\t   reanalyzed each time the pattern match operator is evaluated.\n\t   Runtime patterns are useful but expensive.\n\n       RV  A recreational vehicle, not to be confused with vehicular\n\t   recreation. RV also means an internal Reference Value of the type a\n\t   scalar can hold. See also IV and NV if youXre not confused yet.\n\n       rvalue\n\t   A value that you might find on the right side of an assignment. See\n\t   also lvalue.\n\n   S\n       sandbox\n\t   A walled off area thatXs not supposed to affect beyond its walls.\n\t   You let kids play in the sandbox instead of running in the road.\n\t   See Camel chapter 20, XSecurityX.\n\n       scalar\n\t   A simple, singular value; a number, string, or reference.\n\n       scalar context\n\t   The situation in which an expression is expected by its\n\t   surroundings (the code calling it) to return a single value rather\n\t   than a list of values. See also context and list context. A scalar\n\t   context sometimes imposes additional constraints on the return\n\t   valueXsee string context and numeric context. Sometimes we talk\n\t   about a Boolean context inside conditionals, but this imposes no\n\t   additional constraints, since any scalar value, whether numeric or\n\t   string, is already true or false."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use the perlglossary tool to find information about runtime patterns in Perl?
  manpageQuestion3: Can you provide an example of using the perlglossary resource to look up the definition of a scalar in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nscalar literal\n\t   A number or quoted stringXan actual value in the text of your\n\t   program, as opposed to a variable.\n\n       scalar value\n\t   A value that happens to be a scalar as opposed to a list.\n\n       scalar variable\n\t   A variable prefixed with \"$\" that holds a single value.\n\n       scope\n\t   From how far away you can see a variable, looking through one. Perl\n\t   has two visibility mechanisms. It does dynamic scoping of \"local\"\n\t   variables, meaning that the rest of the block, and any subroutines\n\t   that are called by the rest of the block, can see the variables\n\t   that are local to the block. Perl does lexical scoping of \"my\"\n\t   variables, meaning that the rest of the block can see the variable,\n\t   but other subroutines called by the block cannot see the variable.\n\n       scratchpad\n\t   The area in which a particular invocation of a particular file or\n\t   subroutine keeps some of its temporary values, including any\n\t   lexically scoped variables.\n\n       script\n\t   A text file that is a program intended to be executed directly\n\t   rather than compiled to another form of file before execution."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you describe the difference between a scalar literal and a scalar value in Perl?
  manpageQuestion3: Can you explain the concept of lexical scoping in Perl as described in the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nAlso, in the context of Unicode, a writing system for a particular\n\t   language or group of languages, such as Greek, Bengali, or Tengwar.\n\n       script kiddie\n\t   A cracker who is not a hacker but knows just enough to run canned\n\t   scripts. A cargo-cult programmer.\n\n       sed A venerable Stream EDitor from which Perl derives some of its\n\t   ideas.\n\n       semaphore\n\t   A fancy kind of interlock that prevents multiple threads or\n\t   processes from using up the same resources simultaneously.\n\n       separator\n\t   A character or string that keeps two surrounding strings from being\n\t   confused with each other. The \"split\" function works on separators.\n\t   Not to be confused with delimiters or terminators. The XorX in the\n\t   previous sentence separated the two alternatives.\n\n       serialization\n\t   Putting a fancy data structure into linear order so that it can be\n\t   stored as a string in a disk file or database, or sent through a\n\t   pipe. Also called marshalling.\n\n       server\n\t   In networking, a process that either advertises a service or just\n\t   hangs around at a known location and waits for clients who need\n\t   service to get in touch with it."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use perlglossary to find the definition of the term 'serialization'?
  manpageQuestion3: What is the difference between a 'separator' and a 'delimiter' according to the perlglossary resource?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nservice\n\t   Something you do for someone else to make them happy, like giving\n\t   them the time of day (or of their life). On some machines, well-\n\t   known services are listed by the \"getservent\" function.\n\n       setgid\n\t   Same as setuid, only having to do with giving away group\n\t   privileges.\n\n       setuid\n\t   Said of a program that runs with the privileges of its owner rather\n\t   than (as is usually the case) the privileges of whoever is running\n\t   it. Also describes the bit in the mode word (permission bits) that\n\t   controls the feature. This bit must be explicitly set by the owner\n\t   to enable this feature, and the program must be carefully written\n\t   not to give away more privileges than it ought to.\n\n       shared memory\n\t   A piece of memory accessible by two different processes who\n\t   otherwise would not see each otherXs memory.\n\n       shebang\n\t   Irish for the whole McGillicuddy. In Perl culture, a portmanteau of\n\t   XsharpX and XbangX, meaning the \"#!\" sequence that tells the system\n\t   where to find the interpreter."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary to understand the concept of 'setuid'?
  manpageQuestion3: Can you explain the meaning and usage of the 'shebang' line in a Perl script?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nshell\n\t   A command-line interpreter. The program that interactively gives\n\t   you a prompt, accepts one or more lines of input, and executes the\n\t   programs you mentioned, feeding each of them their proper arguments\n\t   and input data. Shells can also execute scripts containing such\n\t   commands. Under Unix, typical shells include the Bourne shell\n\t   (/bin/sh), the C shell (/bin/csh), and the Korn shell (/bin/ksh).\n\t   Perl is not strictly a shell because itXs not interactive (although\n\t   Perl programs can be interactive).\n\n       side effects\n\t   Something extra that happens when you evaluate an expression.\n\t   Nowadays it can refer to almost anything. For example, evaluating a\n\t   simple assignment statement typically has the Xside effectX of\n\t   assigning a value to a variable. (And you thought assigning the\n\t   value was your primary intent in the first place!) Likewise,\n\t   assigning a value to the special variable $| ($AUTOFLUSH) has the\n\t   side effect of forcing a flush after every \"write\" or \"print\" on\n\t   the currently selected filehandle."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use the perlglossary tool to find information about 'side effects' in Perl?
  manpageQuestion3: Can you provide an example of using perlglossary to look up the meaning of a specific Perl term, such as 'side effects'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nsigil\n\t   A glyph used in magic. Or, for Perl, the symbol in front of a\n\t   variable name, such as \"$\", \"@\", and \"%\".\n\n       signal\n\t   A bolt out of the blue; that is, an event triggered by the\n\t   operating system, probably when youXre least expecting it.\n\n       signal handler\n\t   A subroutine that, instead of being content to be called in the\n\t   normal fashion, sits around waiting for a bolt out of the blue\n\t   before it will deign to execute. Under Perl, bolts out of the blue\n\t   are called signals, and you send them with the \"kill\" built-in. See\n\t   the %SIG hash in Camel chapter 25, XSpecial NamesX and the section\n\t   XSignalsX in Camel chapter 15, XInterprocess CommunicationX.\n\n       single inheritance\n\t   The features you got from your mother, if she told you that you\n\t   donXt have a father. (See also inheritance and multiple\n\t   inheritance.) In computer languages, the idea that classes\n\t   reproduce asexually so that a given class can only have one direct\n\t   ancestor or base class. Perl supplies no such restriction, though\n\t   you may certainly program Perl that way if you like."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How does Perl handle signals, and what is the role of a signal handler?
  manpageQuestion3: What is the concept of single inheritance in Perl, and how does it differ from multiple inheritance?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nslice\n\t   A selection of any number of elements from a list, array, or hash.\n\n       slurp\n\t   To read an entire file into a string in one operation.\n\n       socket\n\t   An endpoint for network communication among multiple processes that\n\t   works much like a telephone or a post office box. The most\n\t   important thing about a socket is its network address (like a phone\n\t   number). Different kinds of sockets have different kinds of\n\t   addressesXsome look like filenames, and some donXt.\n\n       soft reference\n\t   See symbolic reference.\n\n       source filter\n\t   A special kind of module that does preprocessing on your script\n\t   just before it gets to the tokener.\n\n       stack\n\t   A device you can put things on the top of, and later take them back\n\t   off in the opposite order in which you put them on. See LIFO.\n\n       standard\n\t   Included in the official Perl distribution, as in a standard\n\t   module, a standard tool, or a standard Perl manpage.\n\n       standard error\n\t   The default output stream for nasty remarks that donXt belong in\n\t   standard output. Represented within a Perl program by the output>\n\t   filehandle \"STDERR\". You can use this stream explicitly, but the\n\t   \"die\" and \"warn\" built-ins write to your standard error stream\n\t   automatically (unless trapped or otherwise intercepted)."
  manpageQuestion1: What is the primary purpose of the perlglossary tool?
  manpageQuestion2: How can you read an entire file into a string in Perl using the 'slurp' method?
  manpageQuestion3: What is a 'source filter' in Perl, and how does it function?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nstandard input\n\t   The default input stream for your program, which if possible\n\t   shouldnXt care where its data is coming from. Represented within a\n\t   Perl program by the filehandle \"STDIN\".\n\n       standard I/O\n\t   A standard C library for doing buffered input and output to the\n\t   operating system. (The XstandardX of standard I/O is at most\n\t   marginally related to the XstandardX of standard input and output.)\n\t   In general, Perl relies on whatever implementation of standard I/O\n\t   a given operating system supplies, so the buffering characteristics\n\t   of a Perl program on one machine may not exactly match those on\n\t   another machine.  Normally this only influences efficiency, not\n\t   semantics. If your standard I/O package is doing block buffering\n\t   and you want it to flush the buffer more often, just set the $|\n\t   variable to a true value.\n\n       Standard Library\n\t   Everything that comes with the official perl distribution. Some\n\t   vendor versions of perl change their distributions, leaving out\n\t   some parts or including extras. See also dual-lived."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you read input from standard input in a Perl program using the perlglossary resource?
  manpageQuestion3: What is the role of the Standard Library in the perlglossary resource?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nstandard output\n\t   The default output stream for your program, which if possible\n\t   shouldnXt care where its data is going. Represented within a Perl\n\t   program by the filehandle \"STDOUT\".\n\n       statement\n\t   A command to the computer about what to do next, like a step in a\n\t   recipe: XAdd marmalade to batter and mix until mixed.X A statement\n\t   is distinguished from a declaration, which doesnXt tell the\n\t   computer to do anything, but just to learn something.\n\n       statement modifier\n\t   A conditional or loop that you put after the statement instead of\n\t   before, if you know what we mean.\n\n       static\n\t   Varying slowly compared to something else. (Unfortunately,\n\t   everything is relatively stable compared to something else, except\n\t   for certain elementary particles, and weXre not so sure about\n\t   them.) In computers, where things are supposed to vary rapidly,\n\t   XstaticX has a derogatory connotation, indicating a slightly\n\t   dysfunctional variable, subroutine, or method. In Perl culture, the\n\t   word is politely avoided."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can a Perl programmer use statement modifiers to control the execution of a statement?
  manpageQuestion3: What does the term 'static' mean in the context of Perl programming according to the perlglossary manual?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nIf youXre a C or C++ programmer, you might be looking for PerlXs\n\t   \"state\" keyword.\n\n       static method\n\t   No such thing. See class method.\n\n       static scoping\n\t   No such thing. See lexical scoping.\n\n       static variable\n\t   No such thing. Just use a lexical variable in a scope larger than\n\t   your subroutine, or declare it with \"state\" instead of with \"my\".\n\n       stat structure\n\t   A special internal spot in which Perl keeps the information about\n\t   the last file on which you requested information.\n\n       status\n\t   The value returned to the parent process when one of its child\n\t   processes dies. This value is placed in the special variable $?.\n\t   Its upper eight bits are the exit status of the defunct process,\n\t   and its lower eight bits identify the signal (if any) that the\n\t   process died from. On Unix systems, this status value is the same\n\t   as the status word returned by wait(2). See \"system\" in Camel\n\t   chapter 27, XFunctionsX.\n\n       STDERR\n\t   See standard error."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use perlglossary to find information about Perl's 'state' keyword?
  manpageQuestion3: Can you provide an example of using perlglossary to look up the meaning of 'status' in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nSTDIN\n\t   See standard input.\n\n       STDIO\n\t   See standard I/O.\n\n       STDOUT\n\t   See standard output.\n\n       stream\n\t   A flow of data into or out of a process as a steady sequence of\n\t   bytes or characters, without the appearance of being broken up into\n\t   packets. This is a kind of interfaceXthe underlying implementation\n\t   may well break your data up into separate packets for delivery, but\n\t   this is hidden from you.\n\n       string\n\t   A sequence of characters such as XHe said !@#*&%@#*?!X.  A string\n\t   does not have to be entirely printable.\n\n       string context\n\t   The situation in which an expression is expected by its\n\t   surroundings (the code calling it) to return a string.  See also\n\t   context and numeric context.\n\n       stringification\n\t   The process of producing a string representation of an abstract\n\t   object.\n\n       struct\n\t   C keyword introducing a structure definition or name.\n\n       structure\n\t   See data structure.\n\n       subclass\n\t   See derived class."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary resource to understand the concept of 'string context' in Perl?
  manpageQuestion3: Can you explain how the 'struct' keyword is used in Perl, as described in the perlglossary resource?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nsubpattern\n\t   A component of a regular expression pattern.\n\n       subroutine\n\t   A named or otherwise accessible piece of program that can be\n\t   invoked from elsewhere in the program in order to accomplish some\n\t   subgoal of the program. A subroutine is often parameterized to\n\t   accomplish different but related things depending on its input\n\t   arguments. If the subroutine returns a meaningful value, it is also\n\t   called a function.\n\n       subscript\n\t   A value that indicates the position of a particular array element\n\t   in an array.\n\n       substitution\n\t   Changing parts of a string via the \"s///\" operator. (We avoid use\n\t   of this term to mean variable interpolation.)\n\n       substring\n\t   A portion of a string, starting at a certain character position\n\t   (offset) and proceeding for a certain number of characters.\n\n       superclass\n\t   See base class.\n\n       superuser\n\t   The person whom the operating system will let do almost anything.\n\t   Typically your system administrator or someone pretending to be\n\t   your system administrator. On Unix systems, the root user. On\n\t   Windows systems, usually the Administrator user."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How does Perl use the term 'subpattern' in regular expressions?
  manpageQuestion3: What is the difference between a 'substring' and a 'substitution' in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nSV  Short for Xscalar valueX. But within the Perl interpreter, every\n\t   referent is treated as a member of a class derived from SV, in an\n\t   object-oriented sort of way. Every value inside Perl is passed\n\t   around as a C language \"SV*\" pointer. The SV struct knows its own\n\t   Xreferent typeX, and the code is smart enough (we hope) not to try\n\t   to call a hash function on a subroutine.\n\n       switch\n\t   An option you give on a command line to influence the way your\n\t   program works, usually introduced with a minus sign.  The word is\n\t   also used as a nickname for a switch statement.\n\n       switch cluster\n\t   The combination of multiple command- line switches (e.g., \"Xa Xb\n\t   Xc\") into one switch (e.g., \"Xabc\").  Any switch with an additional\n\t   argument must be the last switch in a cluster.\n\n       switch statement\n\t   A program technique that lets you evaluate an expression and then,\n\t   based on the value of the expression, do a multiway branch to the\n\t   appropriate piece of code for that value. Also called a Xcase\n\t   structureX, named after the similar Pascal construct. Most switch\n\t   statements in Perl are spelled \"given\". See XThe \"given\" statementX\n\t   in Camel chapter 4, XStatements and DeclarationsX."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use command-line switches in Perl to modify the behavior of a program?
  manpageQuestion3: What is a 'switch cluster' in Perl, and how are multiple switches combined into a single switch?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nsymbol\n\t   Generally, any token or metasymbol. Often used more specifically to\n\t   mean the sort of name you might find in a symbol table.\n\n       symbolic debugger\n\t   A program that lets you step through the execution of your program,\n\t   stopping or printing things out here and there to see whether\n\t   anything has gone wrong, and, if so, what. The XsymbolicX part just\n\t   means that you can talk to the debugger using the same symbols with\n\t   which your program is written.\n\n       symbolic link\n\t   An alternate filename that points to the real filename, which in\n\t   turn points to the real file. Whenever the operating system is\n\t   trying to parse a pathname containing a symbolic link, it merely\n\t   substitutes the new name and continues parsing.\n\n       symbolic reference\n\t   A variable whose value is the name of another variable or\n\t   subroutine. By dereferencing the first variable, you can get at the\n\t   second one. Symbolic references are illegal under \"use strict\n\t   \"refs\"\"."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you use the perlglossary to find information about 'symbolic link'?
  manpageQuestion3: Can you explain the concept of 'symbolic reference' as described in the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nsymbol table\n\t   Where a compiler remembers symbols. A program like Perl must\n\t   somehow remember all the names of all the variables, filehandles,\n\t   and subroutines youXve used. It does this by placing the names in a\n\t   symbol table, which is implemented in Perl using a hash table.\n\t   There is a separate symbol table for each package to give each\n\t   package its own namespace.\n\n       synchronous\n\t   Programming in which the orderly sequence of events can be\n\t   determined; that is, when things happen one after the other, not at\n\t   the same time.\n\n       syntactic sugar\n\t   An alternative way of writing something more easily; a shortcut.\n\n       syntax\n\t   From Greek XXXXXXXX, Xwith-arrangementX. How things (particularly\n\t   symbols) are put together with each other.\n\n       syntax tree\n\t   An internal representation of your program wherein lower-level\n\t   constructs dangle off the higher-level constructs enclosing them.\n\n       syscall\n\t   A function call directly to the operating system. Many of the\n\t   important subroutines and functions you use arenXt direct system\n\t   calls, but are built up in one or more layers above the system call\n\t   level. In general, Perl programmers donXt need to worry about the\n\t   distinction. However, if you do happen to know which Perl functions\n\t   are really syscalls, you can predict which of these will set the $!\n\t   ($ERRNO) variable on failure. Unfortunately, beginning programmers\n\t   often confusingly employ the term Xsystem callX to mean what\n\t   happens when you call the Perl \"system\" function, which actually\n\t   involves many syscalls. To avoid any confusion, we nearly always\n\t   say XsyscallX for something you could call indirectly via PerlXs\n\t   \"syscall\" function, and never for something you would call with\n\t   PerlXs \"system\" function."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How would you describe the concept of 'syntactic sugar' in Perl programming according to the perlglossary?
  manpageQuestion3: Can you explain what a 'syntax tree' is in the context of Perl programming as described in the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nT\n       taint checks\n\t   The special bookkeeping Perl does to track the flow of external\n\t   data through your program and disallow their use in system\n\t   commands.\n\n       tainted\n\t   Said of data derived from the grubby hands of a user, and thus\n\t   unsafe for a secure program to rely on. Perl does taint checks if\n\t   you run a setuid (or setgid) program, or if you use the \"XT\"\n\t   switch.\n\n       taint mode\n\t   Running under the \"XT\" switch, marking all external data as suspect\n\t   and refusing to use it with system commands. See Camel chapter 20,\n\t   XSecurityX.\n\n       TCP Short for Transmission Control Protocol. A protocol wrapped around\n\t   the Internet Protocol to make an unreliable packet transmission\n\t   mechanism appear to the application program to be a reliable stream\n\t   of bytes.  (Usually.)\n\n       term\n\t   Short for a XterminalXXthat is, a leaf node of a syntax tree. A\n\t   thing that functions grammatically as an operand for the operators\n\t   in an expression.\n\n       terminator\n\t   A character or string that marks the end of another string. The $/\n\t   variable contains the string that terminates a \"readline\"\n\t   operation, which \"chomp\" deletes from the end. Not to be confused\n\t   with delimiters or separators. The period at the end of this\n\t   sentence is a terminator."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary tool to find information about Perl's 'taint checks'?
  manpageQuestion3: Can you provide an example of how the 'taint mode' in Perl is activated and its implications for security?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nternary\n\t   An operator taking three operands. Sometimes pronounced trinary.\n\n       text\n\t   A string or file containing primarily printable characters.\n\n       thread\n\t   Like a forked process, but without forkXs inherent memory\n\t   protection. A thread is lighter weight than a full process, in that\n\t   a process could have multiple threads running around in it, all\n\t   fighting over the same processXs memory space unless steps are\n\t   taken to protect threads from one another.\n\n       tie The bond between a magical variable and its implementation class.\n\t   See the \"tie\" function in Camel chapter 27, XFunctionsX and Camel\n\t   chapter 14, XTied VariablesX.\n\n       titlecase\n\t   The case used for capitals that are followed by lowercase\n\t   characters instead of by more capitals.  Sometimes called sentence\n\t   case or headline case. English doesnXt use Unicode titlecase, but\n\t   casing rules for English titles are more complicated than simply\n\t   capitalizing each wordXs first character."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the 'text' term in perlglossary to describe a string or file?
  manpageQuestion3: Can you explain the difference between a thread and a forked process according to the perlglossary entry?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nTMTOWTDI\n\t   ThereXs More Than One Way To Do It, the Perl Motto. The notion that\n\t   there can be more than one valid path to solving a programming\n\t   problem in context. (This doesnXt mean that more ways are always\n\t   better or that all possible paths are equally desirableXjust that\n\t   there need not be One True Way.)\n\n       token\n\t   A morpheme in a programming language, the smallest unit of text\n\t   with semantic significance.\n\n       tokener\n\t   A module that breaks a program text into a sequence of tokens for\n\t   later analysis by a parser.\n\n       tokenizing\n\t   Splitting up a program text into tokens. Also known as XlexingX, in\n\t   which case you get XlexemesX instead of tokens.\n\n       toolbox approach\n\t   The notion that, with a complete set of simple tools that work well\n\t   together, you can build almost anything you want. Which is fine if\n\t   youXre assembling a tricycle, but if youXre building a\n\t   defranishizing comboflux regurgalator, you really want your own\n\t   machine shop in which to build special tools. Perl is sort of a\n\t   machine shop."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary to understand the concept of 'TMTOWTDI' in Perl?
  manpageQuestion3: Can you explain how the 'tokenizing' process works in Perl based on the perlglossary definitions?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\ntopic\n\t   The thing youXre working on. Structures like \"while(<>)\", \"for\",\n\t   \"foreach\", and \"given\" set the topic for you by assigning to $_,\n\t   the default (topic) variable.\n\n       transliterate\n\t   To turn one string representation into another by mapping each\n\t   character of the source string to its corresponding character in\n\t   the result string. Not to be confused with translation: for\n\t   example, Greek XXXXXXXXXX transliterates into polychromos but\n\t   translates into many-colored. See the \"tr///\" operator in Camel\n\t   chapter 5, XPattern MatchingX.\n\n       trigger\n\t   An event that causes a handler to be run.\n\n       trinary\n\t   Not a stellar system with three stars, but an operator taking three\n\t   operands. Sometimes pronounced ternary.\n\n       troff\n\t   A venerable typesetting language from which Perl derives the name\n\t   of its $% variable and which is secretly used in the production of\n\t   Camel books.\n\n       true\n\t   Any scalar value that doesnXt evaluate to 0 or \"\"."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use transliterate in Perl to convert a string from Greek to English?
  manpageQuestion3: What is the definition of a 'trigger' in Perl according to the perlglossary resource?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\ntruncating\n\t   Emptying a file of existing contents, either automatically when\n\t   opening a file for writing or explicitly via the \"truncate\"\n\t   function.\n\n       type\n\t   See data type and class.\n\n       type casting\n\t   Converting data from one type to another. C permits this.  Perl\n\t   does not need it. Nor want it.\n\n       typedef\n\t   A type definition in the C and C++ languages.\n\n       typed lexical\n\t   A lexical variable  lexical>that is declared with a class type: \"my\n\t   Pony $bill\".\n\n       typeglob\n\t   Use of a single identifier, prefixed with \"*\". For example, *name\n\t   stands for any or all of $name, @name, %name, &name, or just\n\t   \"name\". How you use it determines whether it is interpreted as all\n\t   or only one of them. See XTypeglobs and FilehandlesX in Camel\n\t   chapter 2, XBits and PiecesX.\n\n       typemap\n\t   A description of how C types may be transformed to and from Perl\n\t   types within an extension module written in XS.\n\n   U\n       UDP User Datagram Protocol, the typical way to send datagrams over the\n\t   Internet."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you truncate a file's contents in Perl using the 'truncate' function?
  manpageQuestion3: What is a typeglob in Perl and how is it used?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nUID A user ID. Often used in the context of file or process ownership.\n\n       umask\n\t   A mask of those permission bits that should be forced off when\n\t   creating files or directories, in order to establish a policy of\n\t   whom youXll ordinarily deny access to. See the \"umask\" function.\n\n       unary operator\n\t   An operator with only one operand, like \"!\" or \"chdir\". Unary\n\t   operators are usually prefix operators; that is, they precede their\n\t   operand. The \"++\" and \"XX\" operators can be either prefix or\n\t   postfix. (Their position does change their meanings.)\n\n       Unicode\n\t   A character set comprising all the major character sets of the\n\t   world, more or less. See <http://www.unicode.org>.\n\n       Unix\n\t   A very large and constantly evolving language with several\n\t   alternative and largely incompatible syntaxes, in which anyone can\n\t   define anything any way they choose, and usually do. Speakers of\n\t   this language think itXs easy to learn because itXs so easily\n\t   twisted to oneXs own ends, but dialectical differences make tribal\n\t   intercommunication nearly impossible, and travelers are often\n\t   reduced to a pidgin-like subset of the language. To be universally\n\t   understood, a Unix shell programmer must spend years of study in\n\t   the art. Many have abandoned this discipline and now communicate\n\t   via an Esperanto-like language called Perl."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How does the umask function work in Unix system calls?
  manpageQuestion3: What is the difference between unary prefix and postfix operators in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nIn ancient times, Unix was also used to refer to some code that a\n\t   couple of people at Bell Labs wrote to make use of a PDP-7 computer\n\t   that wasnXt doing much of anything else at the time.\n\n       uppercase\n\t   In Unicode, not just characters with the General Category of\n\t   Uppercase Letter, but any character with the Uppercase property,\n\t   including some Letter Numbers and Symbols. Not to be confused with\n\t   titlecase.\n\n   V\n       value\n\t   An actual piece of data, in contrast to all the variables,\n\t   references, keys, indices, operators, and whatnot that you need to\n\t   access the value.\n\n       variable\n\t   A named storage location that can hold any of various kinds of\n\t   value, as your program sees fit.\n\n       variable interpolation\n\t   The interpolation of a scalar or array variable into a string.\n\n       variadic\n\t   Said of a function that happily receives an indeterminate number of\n\t   actual arguments.\n\n       vector\n\t   Mathematical jargon for a list of scalar values."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary resource to understand the difference between 'uppercase' and 'titlecase' in Unicode?
  manpageQuestion3: Can you provide an example of how the 'variable interpolation' concept is demonstrated in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nvirtual\n\t   Providing the appearance of something without the reality, as in:\n\t   virtual memory is not real memory. (See also memory.) The opposite\n\t   of XvirtualX is XtransparentX, which means providing the reality of\n\t   something without the appearance, as in: Perl handles the variable-\n\t   length UTFX8 character encoding transparently.\n\n       void context\n\t   A form of scalar context in which an expression is not expected to\n\t   return any value at all and is evaluated for its side effects\n\t   alone.\n\n       v-string\n\t   A XversionX or XvectorX string specified with a \"v\" followed by a\n\t   series of decimal integers in dot notation, for instance,\n\t   \"v1.20.300.4000\". Each number turns into a character with the\n\t   specified ordinal value. (The \"v\" is optional when there are at\n\t   least three integers.)\n\n   W\n       warning\n\t   A message printed to the \"STDERR\" stream to the effect that\n\t   something might be wrong but isnXt worth blowing up over. See\n\t   \"warn\" in Camel chapter 27, XFunctionsX and the \"warnings\" pragma\n\t   in Camel chapter 28, XPragmantic ModulesX."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you create a v-string in Perl using the 'v' prefix and decimal integers?
  manpageQuestion3: What is a 'void context' in Perl, and how does it differ from other scalar contexts?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nwatch expression\n\t   An expression which, when its value changes, causes a breakpoint in\n\t   the Perl debugger.\n\n       weak reference\n\t   A reference that doesnXt get counted normally. When all the normal\n\t   references to data disappear, the data disappears. These are useful\n\t   for circular references that would never disappear otherwise.\n\n       whitespace\n\t   A character that moves your cursor but doesnXt otherwise put\n\t   anything on your screen. Typically refers to any of: space, tab,\n\t   line feed, carriage return, or form feed. In Unicode, matches many\n\t   other characters that Unicode considers whitespace, including the\n\t   X-XX .\n\n       word\n\t   In normal XcomputereseX, the piece of data of the size most\n\t   efficiently handled by your computer, typically 32 bits or so, give\n\t   or take a few powers of 2. In Perl culture, it more often refers to\n\t   an alphanumeric identifier (including underscores), or to a string\n\t   of nonwhitespace characters bounded by whitespace or string\n\t   boundaries."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you define a weak reference in Perl using the perlglossary documentation?
  manpageQuestion3: What does the term 'word' mean in the context of Perl as described in the perlglossary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nworking directory\n\t   Your current directory, from which relative pathnames are\n\t   interpreted by the operating system. The operating system knows\n\t   your current directory because you told it with a \"chdir\", or\n\t   because you started out in the place where your parent process was\n\t   when you were born.\n\n       wrapper\n\t   A program or subroutine that runs some other program or subroutine\n\t   for you, modifying some of its input or output to better suit your\n\t   purposes.\n\n       WYSIWYG\n\t   What You See Is What You Get. Usually used when something that\n\t   appears on the screen matches how it will eventually look, like\n\t   PerlXs \"format\" declarations. Also used to mean the opposite of\n\t   magic because everything works exactly as it appears, as in the\n\t   three- argument form of \"open\".\n\n   X\n       XS  An extraordinarily exported, expeditiously excellent, expressly\n\t   eXternal Subroutine, executed in existing C or C++ or in an\n\t   exciting extension language called (exasperatingly) XS."
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the perlglossary to understand the concept of a 'wrapper' in Perl programming?
  manpageQuestion3: Can you explain the significance of the 'XS' acronym in Perl and provide an example of its usage?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlglossary`.\n\n\n\nManpage text:\n\nXSUB\n\t   An external subroutine defined in XS.\n\n   Y\n       yacc\n\t   Yet Another Compiler Compiler. A parser generator without which\n\t   Perl probably would not have existed. See the file perly.y in the\n\t   Perl source distribution.\n\n   Z\n       zero width\n\t   A subpattern assertion matching the null string between characters.\n\n       zombie\n\t   A process that has died (exited) but whose parent has not yet\n\t   received proper notification of its demise by virtue of having\n\t   called \"wait\" or \"waitpid\". If you \"fork\", you must clean up after\n\t   your child processes when they exit; otherwise, the process table\n\t   will fill up and your system administrator will Not Be Happy with\n\t   you.\n\nAUTHOR AND COPYRIGHT\n       Based on the Glossary of Programming Perl, Fourth Edition, by Tom\n       Christiansen, brian d foy, Larry Wall, & Jon Orwant.  Copyright (c)\n       2000, 1996, 1991, 2012 O'Reilly Media, Inc.  This document may be\n       distributed under the same terms as Perl itself.\n\nperl v5.34.1\t\t\t  2022-02-19\t\t       PERLGLOSSARY(1)"
  manpageQuestion1: What is the primary purpose of the perlglossary resource?
  manpageQuestion2: How can you use the 'yacc' tool mentioned in perlglossary to generate a parser for a custom language?
  manpageQuestion3: Can you explain the concept of 'zero width' in Perl regular expressions and provide an example of its usage?

