- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\nDIG(1)\t\t\t\t     BIND9\t\t\t\tDIG(1)\n\nNAME\n       dig - DNS lookup utility\n\nSYNOPSIS\n       dig [@server] [-b address] [-c class] [-f filename] [-k filename] [-m]\n\t   [-p port#] [-q name] [-t type] [-v] [-x addr] [-y [hmac:]name:key]\n\t   [-4] [-6] [name] [type] [class] [queryopt...]\n\n       dig [-h]\n\n       dig [global-queryopt...] [query...]\n\nDESCRIPTION\n       dig is a flexible tool for interrogating DNS name servers. It performs\n       DNS lookups and displays the answers that are returned from the name\n       server(s) that were queried. Most DNS administrators use dig to\n       troubleshoot DNS problems because of its flexibility, ease of use and\n       clarity of output. Other lookup tools tend to have less functionality\n       than dig.\n\n       Although dig is normally used with command-line arguments, it also has\n       a batch mode of operation for reading lookup requests from a file. A\n       brief summary of its command-line arguments and options is printed when\n       the -h option is given. Unlike earlier versions, the BIND 9\n       implementation of dig allows multiple lookups to be issued from the\n       command line."
  manpageQuestion1: What is the primary purpose of the dig command?
  manpageQuestion2: How would you use the dig command to perform a DNS lookup for the domain 'example.com' using the default DNS server?
  manpageQuestion3: Can you provide an example of using the dig command to query the A record for 'google.com' with a specified DNS server at IP address 8.8.8.8?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\nUnless it is told to query a specific name server, dig will try each of\n       the servers listed in /etc/resolv.conf. If no usable server addresses\n       are found, dig will send the query to the local host.\n\n       When no command line arguments or options are given, dig will perform\n       an NS query for \".\" (the root).\n\n       It is possible to set per-user defaults for dig via ${HOME}/.digrc.\n       This file is read and any options in it are applied before the command\n       line arguments.\n\n       The IN and CH class names overlap with the IN and CH top level domain\n       names. Either use the -t and -c options to specify the type and class,\n       use the -q the specify the domain name, or use \"IN.\" and \"CH.\" when\n       looking up these top level domains.\n\nSIMPLE USAGE\n       A typical invocation of dig looks like:\n\n\t    dig @server name type\n\n       where:\n\n       server\n\t   is the name or IP address of the name server to query. This can be\n\t   an IPv4 address in dotted-decimal notation or an IPv6 address in\n\t   colon-delimited notation. When the supplied server argument is a\n\t   hostname, dig resolves that name before querying that name server."
  manpageQuestion1: What is the primary purpose of the dig command?
  manpageQuestion2: How would you use dig to perform a DNS query for the A record of example.com using a specific name server?
  manpageQuestion3: Can you provide an example of using dig to query the NS (nameserver) records for a domain, such as google.com?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\nIf no server argument is provided, dig consults /etc/resolv.conf;\n\t   if an address is found there, it queries the name server at that\n\t   address. If either of the -4 or -6 options are in use, then only\n\t   addresses for the corresponding transport will be tried. If no\n\t   usable addresses are found, dig will send the query to the local\n\t   host. The reply from the name server that responds is displayed.\n\n       name\n\t   is the name of the resource record that is to be looked up.\n\n       type\n\t   indicates what type of query is required â€” ANY, A, MX, SIG, etc.\n\t   type can be any valid query type. If no type argument is supplied,\n\t   dig will perform a lookup for an A record.\n\nOPTIONS\n       -4\n\t   Use IPv4 only.\n\n       -6\n\t   Use IPv6 only.\n\n       -b address[#port]\n\t   Set the source IP address of the query. The address must be a valid\n\t   address on one of the host's network interfaces, or \"0.0.0.0\" or\n\t   \"::\". An optional port may be specified by appending \"#<port>\"\n\n       -c class\n\t   Set the query class. The default class is IN; other classes are HS\n\t   for Hesiod records or CH for Chaosnet records."
  manpageQuestion1: What is the primary purpose of the dig command?
  manpageQuestion2: How can you use dig to perform a DNS query for an IPv4 address of a domain name?
  manpageQuestion3: Can you provide an example of using dig with the -b option to specify a source IP address for a DNS query?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\n-f file\n\t   Batch mode: dig reads a list of lookup requests to process from the\n\t   given file. Each line in the file should be organized in the same\n\t   way they would be presented as queries to dig using the\n\t   command-line interface.\n\n       -i\n\t   Do reverse IPv6 lookups using the obsolete RFC1886 IP6.INT domain,\n\t   which is no longer in use. Obsolete bit string label queries\n\t   (RFC2874) are not attempted.\n\n       -k keyfile\n\t   Sign queries using TSIG using a key read from the given file. Key\n\t   files can be generated using tsig-keygen(8). When using TSIG\n\t   authentication with dig, the name server that is queried needs to\n\t   know the key and algorithm that is being used. In BIND, this is\n\t   done by providing appropriate key and server statements in\n\t   named.conf.\n\n       -m\n\t   Enable memory usage debugging.\n\n       -p port\n\t   Send the query to a non-standard port on the server, instead of the\n\t   defaut port 53. This option would be used to test a name server\n\t   that has been configured to listen for queries on a non-standard\n\t   port number."
  manpageQuestion1: What is the primary purpose of the dig command?
  manpageQuestion2: How can you use the -f option with dig to perform batch DNS lookups from a file?
  manpageQuestion3: What is the function of the -p flag in the dig command and how would you use it to query a DNS server on a non-standard port?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\n-q name\n\t   The domain name to query. This is useful to distinguish the name\n\t   from other arguments.\n\n       -t type\n\t   The resource record type to query. It can be any valid query type\n\t   which is supported in BIND 9. The default query type is \"A\", unless\n\t   the -x option is supplied to indicate a reverse lookup. A zone\n\t   transfer can be requested by specifying a type of AXFR. When an\n\t   incremental zone transfer (IXFR) is required, set the type to\n\t   ixfr=N. The incremental zone transfer will contain the changes made\n\t   to the zone since the serial number in the zone's SOA record was N.\n\n       -v\n\t   Print the version number and exit.\n\n       -x addr\n\t   Simplified reverse lookups, for mapping addresses to names. The\n\t   addr is an IPv4 address in dotted-decimal notation, or a\n\t   colon-delimited IPv6 address. When the -x is used, there is no need\n\t   to provide the name, class and type arguments.  dig automatically\n\t   performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets\n\t   the query type and class to PTR and IN respectively. IPv6 addresses\n\t   are looked up using nibble format under the IP6.ARPA domain (but\n\t   see also the -i option)."
  manpageQuestion1: What is the primary purpose of the dig command in macOS?
  manpageQuestion2: How would you use dig to perform a reverse lookup for the IPv4 address 192.0.2.1?
  manpageQuestion3: Can you provide an example of using dig to request an incremental zone transfer (IXFR) for a DNS zone with a serial number of 20231005?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\n-y [hmac:]keyname:secret\n\t   Sign queries using TSIG with the given authentication key.  keyname\n\t   is the name of the key, and secret is the base64 encoded shared\n\t   secret.  hmac is the name of the key algorithm; valid choices are\n\t   hmac-md5, hmac-sha1, hmac-sha224, hmac-sha256, hmac-sha384, or\n\t   hmac-sha512. If hmac is not specified, the default is hmac-md5 or\n\t   if MD5 was disabled hmac-sha256.\n\n\t   NOTE: You should use the -k option and avoid the -y option, because\n\t   with -y the shared secret is supplied as a command line argument in\n\t   clear text. This may be visible in the output from ps(1) or in a\n\t   history file maintained by the user's shell.\n\nmacOS NOTICE\n       The dig command does not use the host name and address resolution or\n       the DNS query routing mechanisms used by other processes running on\n       macOS.  The results of name or address queries printed by dig may\n       differ from those found by other processes that use the macOS native\n       name and address resolution mechanisms.\tThe results of DNS queries may\n       also differ from queries that use the macOS DNS routing library."
  manpageQuestion1: What is the primary purpose of the dig command?
  manpageQuestion2: How can you use the -y option with dig to authenticate a query using an HMAC key?
  manpageQuestion3: What is the default HMAC algorithm used by dig if not specified, and how does it differ from using -k?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\nQUERY OPTIONS\n       dig provides a number of query options which affect the way in which\n       lookups are made and the results displayed. Some of these set or reset\n       flag bits in the query header, some determine which sections of the\n       answer get printed, and others determine the timeout and retry\n       strategies.\n\n       Each query option is identified by a keyword preceded by a plus sign\n       (+). Some keywords set or reset an option. These may be preceded by the\n       string no to negate the meaning of that keyword. Other keywords assign\n       values to options like the timeout interval. They have the form\n       +keyword=value. Keywords may be abbreviated, provided the abbreviation\n       is unambiguous; for example, +cd is equivalent to +cdflag. The query\n       options are:\n\n       +[no]aaflag\n\t   A synonym for +[no]aaonly.\n\n       +[no]aaonly\n\t   Sets the \"aa\" flag in the query.\n\n       +[no]additional\n\t   Display [do not display] the additional section of a reply. The\n\t   default is to display it."
  manpageQuestion1: What is the primary purpose of the dig command?
  manpageQuestion2: How can you use dig to display only the additional section of an DNS response?
  manpageQuestion3: What command would you use to set the 'aa' flag in a dig query?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\n+[no]adflag\n\t   Set [do not set] the AD (authentic data) bit in the query. This\n\t   requests the server to return whether all of the answer and\n\t   authority sections have all been validated as secure according to\n\t   the security policy of the server. AD=1 indicates that all records\n\t   have been validated as secure and the answer is not from a OPT-OUT\n\t   range. AD=0 indicate that some part of the answer was insecure or\n\t   not validated. This bit is set by default.\n\n       +[no]all\n\t   Set or clear all display flags.\n\n       +[no]answer\n\t   Display [do not display] the answer section of a reply. The default\n\t   is to display it.\n\n       +[no]authority\n\t   Display [do not display] the authority section of a reply. The\n\t   default is to display it.\n\n       +[no]besteffort\n\t   Attempt to display the contents of messages which are malformed.\n\t   The default is to not display malformed answers.\n\n       +bufsize=B\n\t   Set the UDP message buffer size advertised using EDNS0 to B bytes.\n\t   The maximum and minimum sizes of this buffer are 65535 and 0\n\t   respectively. Values outside this range are rounded up or down\n\t   appropriately. Values other than zero will cause a EDNS query to be\n\t   sent."
  manpageQuestion1: What is the primary purpose of the dig command in the context of DNS queries?
  manpageQuestion2: How can you use the +noanswer flag with dig to suppress the display of the answer section in a DNS query response?
  manpageQuestion3: What is the effect of using the +bufsize=4096 option in the dig command?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\n+[no]cdflag\n\t   Set [do not set] the CD (checking disabled) bit in the query. This\n\t   requests the server to not perform DNSSEC validation of responses.\n\n       +[no]class\n\t   Display [do not display] the CLASS when printing the record.\n\n       +[no]cmd\n\t   Toggles the printing of the initial comment in the output\n\t   identifying the version of dig and the query options that have been\n\t   applied. This comment is printed by default.\n\n       +[no]comments\n\t   Toggle the display of comment lines in the output. The default is\n\t   to print comments.\n\n       +[no]cookie[=####]\n\t   Send an COOKIE EDNS option, containing an optional value. Replaying\n\t   a COOKIE from a previous response will allow the server to identify\n\t   a previous client. The default is +nocookie.\n\n\t   +cookie is automatically set when +trace is in use, to better\n\t   emulate the default queries from a nameserver.\n\n\t   This option was formerly called +[no]sit (Server Identity Token).\n\t   In BIND 9.10.0 through BIND 9.10.2, it sent the experimental option\n\t   code 65001. This was changed to option code 10 in BIND 9.10.3 when\n\t   the DNS COOKIE option was allocated."
  manpageQuestion1: What is the primary purpose of the dig command?
  manpageQuestion2: How can you configure dig to disable DNSSEC validation in a query?
  manpageQuestion3: What option should be used with dig to send an EDNS COOKIE and how is it specified?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\nThe +[no]sit is now deprecated, but has been retained as a synonym\n\t   for +[no]cookie for backward compatibility within the BIND 9.10\n\t   branch.\n\n       +[no]crypto\n\t   Toggle the display of cryptographic fields in DNSSEC records. The\n\t   contents of these field are unnecessary to debug most DNSSEC\n\t   validation failures and removing them makes it easier to see the\n\t   common failures. The default is to display the fields. When omitted\n\t   they are replaced by the string \"[omitted]\" or in the DNSKEY case\n\t   the key id is displayed as the replacement, e.g. \"[ key id = value\n\t   ]\".\n\n       +[no]defname\n\t   Deprecated, treated as a synonym for +[no]search\n\n       +[no]dnssec\n\t   Requests DNSSEC records be sent by setting the DNSSEC OK bit (DO)\n\t   in the OPT record in the additional section of the query.\n\n       +domain=somename\n\t   Set the search list to contain the single domain somename, as if\n\t   specified in a domain directive in /etc/resolv.conf, and enable\n\t   search list processing as if the +search option were given."
  manpageQuestion1: What is the primary purpose of the dig command?
  manpageQuestion2: How can you use dig to display cryptographic fields in DNSSEC records?
  manpageQuestion3: Can you provide an example of using dig to set a custom domain search list?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\n+[no]edns[=#]\n\t   Specify the EDNS version to query with. Valid values are 0 to 255.\n\t   Setting the EDNS version will cause a EDNS query to be sent.\n\t   +noedns clears the remembered EDNS version. EDNS is set to 0 by\n\t   default.\n\n       +[no]ednsflags[=#]\n\t   Set the must-be-zero EDNS flags bits (Z bits) to the specified\n\t   value. Decimal, hex and octal encodings are accepted. Setting a\n\t   named flag (e.g. DO) will silently be ignored. By default, no Z\n\t   bits are set.\n\n       +[no]ednsnegotiation\n\t   Enable / disable EDNS version negotiation. By default EDNS version\n\t   negotiation is enabled.\n\n       +[no]ednsopt[=code[:value]]\n\t   Specify EDNS option with code point code and optionally payload of\n\t   value as a hexadecimal string.  code can be either an EDNS option\n\t   name (for example, NSID or ECS), or an arbitrary numeric value.\n\t   +noednsopt clears the EDNS options to be sent.\n\n       +[no]expire\n\t   Send an EDNS Expire option.\n\n       +[no]fail\n\t   Do not try the next server if you receive a SERVFAIL. The default\n\t   is to not try the next server which is the reverse of normal stub\n\t   resolver behavior."
  manpageQuestion1: What is the primary purpose of the dig command in the context of DNS queries?
  manpageQuestion2: How can you configure dig to use EDNS version 0 with negotiation enabled and send an Expire option?
  manpageQuestion3: Can you provide an example of using dig to set the must-be-zero EDNS flags (Z bits) to hexadecimal value 0x03 and disable EDNS version negotiation?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\n+[no]identify\n\t   Show [or do not show] the IP address and port number that supplied\n\t   the answer when the +short option is enabled. If short form answers\n\t   are requested, the default is not to show the source address and\n\t   port number of the server that provided the answer.\n\n       +[no]idnout\n\t   Convert [do not convert] puny code on output. This requires IDN\n\t   SUPPORT to have been enabled at compile time. The default is to\n\t   convert output.\n\n       +[no]ignore\n\t   Ignore truncation in UDP responses instead of retrying with TCP. By\n\t   default, TCP retries are performed.\n\n       +[no]keepopen\n\t   Keep the TCP socket open between queries and reuse it rather than\n\t   creating a new TCP socket for each lookup. The default is\n\t   +nokeepopen.\n\n       +[no]multiline\n\t   Print records like the SOA records in a verbose multi-line format\n\t   with human-readable comments. The default is to print each record\n\t   on a single line, to facilitate machine parsing of the dig output.\n\n       +ndots=D\n\t   Set the number of dots that have to appear in name to D for it to\n\t   be considered absolute. The default value is that defined using the\n\t   ndots statement in /etc/resolv.conf, or 1 if no ndots statement is\n\t   present. Names with fewer dots are interpreted as relative names\n\t   and will be searched for in the domains listed in the search or\n\t   domain directive in /etc/resolv.conf if +search is set."
  manpageQuestion1: What is the primary purpose of the dig command?
  manpageQuestion2: How would you use dig to perform a DNS lookup for the domain 'example.com' and display the source IP address and port number of the responding server?
  manpageQuestion3: Can you provide an example of using dig to convert the output puny code to standard domain names?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\n+[no]nsid\n\t   Include an EDNS name server ID request when sending a query.\n\n       +[no]nssearch\n\t   When this option is set, dig attempts to find the authoritative\n\t   name servers for the zone containing the name being looked up and\n\t   display the SOA record that each name server has for the zone.\n\n       +[no]onesoa\n\t   Print only one (starting) SOA record when performing an AXFR. The\n\t   default is to print both the starting and ending SOA records.\n\n       +[no]opcode=value\n\t   Set [restore] the DNS message opcode to the specified value. The\n\t   default value is QUERY (0).\n\n       +[no]qr\n\t   Print [do not print] the query as it is sent. By default, the query\n\t   is not printed.\n\n       +[no]question\n\t   Print [do not print] the question section of a query when an answer\n\t   is returned. The default is to print the question section as a\n\t   comment.\n\n       +[no]rdflag\n\t   A synonym for +[no]recurse.\n\n       +[no]recurse\n\t   Toggle the setting of the RD (recursion desired) bit in the query.\n\t   This bit is set by default, which means dig normally sends\n\t   recursive queries. Recursion is automatically disabled when the\n\t   +nssearch or +trace query options are used."
  manpageQuestion1: What is the primary purpose of the dig command in the context of DNS troubleshooting and query analysis?
  manpageQuestion2: How would you use dig to perform a DNS query and display the raw query that is sent to the DNS server?
  manpageQuestion3: Can you provide an example of using dig with the +nssearch option to retrieve and display the SOA records of an authoritative name server for a given domain?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\n+retry=T\n\t   Sets the number of times to retry UDP queries to server to T\n\t   instead of the default, 2. Unlike +tries, this does not include the\n\t   initial query.\n\n       +[no]rrcomments\n\t   Toggle the display of per-record comments in the output (for\n\t   example, human-readable key information about DNSKEY records). The\n\t   default is not to print record comments unless multiline mode is\n\t   active.\n\n       +[no]search\n\t   Use [do not use] the search list defined by the searchlist or\n\t   domain directive in resolv.conf (if any). The search list is not\n\t   used by default.\n\n\t   'ndots' from resolv.conf (default 1) which may be overridden by\n\t   +ndots determines if the name will be treated as relative or not\n\t   and hence whether a search is eventually performed or not.\n\n       +[no]short\n\t   Provide a terse answer. The default is to print the answer in a\n\t   verbose form.\n\n       +[no]showsearch\n\t   Perform [do not perform] a search showing intermediate results.\n\n       +[no]sigchase\n\t   Chase DNSSEC signature chains. Requires dig be compiled with\n\t   -DDIG_SIGCHASE. This feature is deprecated. Use delv instead."
  manpageQuestion1: What is the primary purpose of the dig command in macOS?
  manpageQuestion2: How can you configure dig to retry UDP queries a specific number of times instead of the default?
  manpageQuestion3: What flag can be used with dig to control whether per-record comments are displayed in the output?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\n+[no]sit[=####]\n\t   This option is a synonym for +[no]cookie.\n\n\t   The +[no]sit is deprecated.\n\n       +split=W\n\t   Split long hex- or base64-formatted fields in resource records into\n\t   chunks of W characters (where W is rounded up to the nearest\n\t   multiple of 4).  +nosplit or +split=0 causes fields not to be split\n\t   at all. The default is 56 characters, or 44 characters when\n\t   multiline mode is active.\n\n       +[no]stats\n\t   This query option toggles the printing of statistics: when the\n\t   query was made, the size of the reply and so on. The default\n\t   behavior is to print the query statistics.\n\n       +[no]subnet=addr[/prefix-length]\n\t   Send (don't send) an EDNS Client Subnet option with the specified\n\t   IP address or network prefix.\n\n\t   dig +subnet=0.0.0.0/0, or simply dig +subnet=0 for short, sends an\n\t   EDNS CLIENT-SUBNET option with an empty address and a source\n\t   prefix-length of zero, which signals a resolver that the client's\n\t   address information must not be used when resolving this query."
  manpageQuestion1: What is the primary purpose of the dig command in the context of DNS resolution?
  manpageQuestion2: How can you use the +split option in dig to limit the maximum length of resource record fields when outputting DNS query results?
  manpageQuestion3: What is the effect of using the +subnet option in dig and how can it be applied in a practical scenario?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\n+[no]tcp\n\t   Use [do not use] TCP when querying name servers. The default\n\t   behavior is to use UDP unless an ixfr=N query is requested, in\n\t   which case the default is TCP. AXFR queries always use TCP.\n\n       +time=T\n\t   Sets the timeout for a query to T seconds. The default timeout is 5\n\t   seconds. An attempt to set T to less than 1 will result in a query\n\t   timeout of 1 second being applied.\n\n       +[no]topdown\n\t   When chasing DNSSEC signature chains perform a top-down validation.\n\t   Requires dig be compiled with -DDIG_SIGCHASE. This feature is\n\t   deprecated. Use delv instead.\n\n       +[no]trace\n\t   Toggle tracing of the delegation path from the root name servers\n\t   for the name being looked up. Tracing is disabled by default. When\n\t   tracing is enabled, dig makes iterative queries to resolve the name\n\t   being looked up. It will follow referrals from the root servers,\n\t   showing the answer from each server that was used to resolve the\n\t   lookup.\n\n\t   If @server is also specified, it affects only the initial query for\n\t   the root zone name servers."
  manpageQuestion1: What is the primary purpose of the dig command in DNS troubleshooting?
  manpageQuestion2: How can you configure dig to use TCP instead of UDP for name server queries?
  manpageQuestion3: Can you explain how to enable tracing of the delegation path when using dig?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\n+dnssec is also set when +trace is set to better emulate the\n\t   default queries from a nameserver.\n\n       +tries=T\n\t   Sets the number of times to try UDP queries to server to T instead\n\t   of the default, 3. If T is less than or equal to zero, the number\n\t   of tries is silently rounded up to 1.\n\n       +trusted-key=####\n\t   Specifies a file containing trusted keys to be used with +sigchase.\n\t   Each DNSKEY record must be on its own line.\n\n\t   If not specified, dig will look for /etc/trusted-key.key then\n\t   trusted-key.key in the current directory.\n\n\t   Requires dig be compiled with -DDIG_SIGCHASE. This feature is\n\t   deprecated. Use delv instead.\n\n       +[no]ttlid\n\t   Display [do not display] the TTL when printing the record.\n\n       +[no]vc\n\t   Use [do not use] TCP when querying name servers. This alternate\n\t   syntax to +[no]tcp is provided for backwards compatibility. The\n\t   \"vc\" stands for \"virtual circuit\".\n\nMULTIPLE QUERIES\n       The BIND 9 implementation of dig  supports specifying multiple queries\n       on the command line (in addition to supporting the -f batch file\n       option). Each of those queries can be supplied with its own set of\n       flags, options and query options."
  manpageQuestion1: What is the primary purpose of the dig command in the context of DNS queries?
  manpageQuestion2: How can you configure dig to use a specific number of UDP query retries when resolving a domain name?
  manpageQuestion3: What is the method to specify trusted keys for use with DNS signature chasing in dig?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\nIn this case, each query argument represent an individual query in the\n       command-line syntax described above. Each consists of any of the\n       standard options and flags, the name to be looked up, an optional query\n       type and class and any query options that should be applied to that\n       query.\n\n       A global set of query options, which should be applied to all queries,\n       can also be supplied. These global query options must precede the first\n       tuple of name, class, type, options, flags, and query options supplied\n       on the command line. Any global query options (except the +[no]cmd\n       option) can be overridden by a query-specific set of query options. For\n       example:\n\n\t   dig +qr www.isc.org any -x 127.0.0.1 isc.org ns +noqr\n\n       shows how dig could be used from the command line to make three\n       lookups: an ANY query for www.isc.org, a reverse lookup of 127.0.0.1\n       and a query for the NS records of isc.org. A global query option of +qr\n       is applied, so that dig shows the initial query it made for each\n       lookup. The final query has a local query option of +noqr which means\n       that dig will not print the initial query when it looks up the NS\n       records for isc.org."
  manpageQuestion1: What is the primary purpose of the dig command?
  manpageQuestion2: How would you use dig to perform a reverse DNS lookup for the IP address 192.0.2.1?
  manpageQuestion3: Can you provide an example of using dig to query for the NS (nameserver) records of a domain, including global and query-specific options?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dig`.\n\n\n\nManpage text:\n\nIDN SUPPORT\n       If dig has been built with IDN (internationalized domain name) support,\n       it can accept and display non-ASCII domain names.  dig appropriately\n       converts character encoding of domain name before sending a request to\n       DNS server or displaying a reply from the server. If you'd like to turn\n       off the IDN support for some reason, defines the IDN_DISABLE\n       environment variable. The IDN support is disabled if the variable is\n       set when dig runs.\n\nFILES\n       /etc/resolv.conf\n\n       ${HOME}/.digrc\n\nSEE ALSO\n       delv(1), host(1), named(8), dnssec-keygen(8), RFC1035.\n\nBUGS\n       There are probably too many query options.\n\nAUTHOR\n       Internet Systems Consortium, Inc.\n\nCOPYRIGHT\n       Copyright Â© 2004-2011, 2013-2017 Internet Systems Consortium, Inc.\n       (\"ISC\")\n       Copyright Â© 2000-2003 Internet Software Consortium.\n\nISC\t\t\t\t  2018-05-25\t\t\t\tDIG(1)"
  manpageQuestion1: What is the primary purpose of the dig command?
  manpageQuestion2: How can you disable IDN support in the dig command?
  manpageQuestion3: What is the role of the /etc/resolv.conf file in relation to the dig command?

