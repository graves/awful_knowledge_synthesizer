- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `special`.\n\n\n\nManpage text:\n\nmath::special(n)\t       Tcl Math Library \t      math::special(n)\n\n______________________________________________________________________________\n\nNAME\n       math::special - Special mathematical functions\n\nSYNOPSIS\n       package require Tcl  ?8.3?\n\n       package require math::special  ?0.2?\n\n       ::math::special::Beta x y\n\n       ::math::special::Gamma x y\n\n       ::math::special::erf x\n\n       ::math::special::erfc x\n\n       ::math::special::J0 x\n\n       ::math::special::J1 x\n\n       ::math::special::Jn n x\n\n       ::math::special::J1/2 x\n\n       ::math::special::J-1/2 x\n\n       ::math::special::I_n x\n\n       ::math::special::cn u k\n\n       ::math::special::dn u k\n\n       ::math::special::sn u k\n\n       ::math::special::elliptic_K k\n\n       ::math::special::elliptic_E k\n\n       ::math::special::exponential_Ei x\n\n       ::math::special::exponential_En n x\n\n       ::math::special::exponential_li x\n\n       ::math::special::exponential_Ci x\n\n       ::math::special::exponential_Si x\n\n       ::math::special::exponential_Chi x\n\n       ::math::special::exponential_Shi x\n\n       ::math::special::fresnel_C x\n\n       ::math::special::fresnel_S x\n\n       ::math::special::sinc x\n\n       ::math::special::legendre n\n\n       ::math::special::chebyshev n\n\n       ::math::special::laguerre alpha n\n\n       ::math::special::hermite n\n\n______________________________________________________________________________\n\nDESCRIPTION\n       This package implements several so-called special functions, like the\n       Gamma function, the Bessel functions and such.\n\n       Each function is implemented by a procedure that bears its name (well,\n       in close approximation):\n\n       •      J0 for the zeroth-order Bessel function of the first kind\n\n       •      J1 for the first-order Bessel function of the first kind\n\n       •      Jn for the nth-order Bessel function of the first kind\n\n       •      J1/2 for the half-order Bessel function of the first kind\n\n       •      J-1/2 for the minus-half-order Bessel function of the first kind\n\n       •      I_n for the modified Bessel function of the first kind of order\n\t      n\n\n       •      Gamma for the Gamma function, erf and erfc for the error\n\t      function and the complementary error function\n\n       •      fresnel_C and fresnel_S for the Fresnel integrals\n\n       •      elliptic_K and elliptic_E (complete elliptic integrals)\n\n       •      exponent_Ei and other functions related to the so-called\n\t      exponential integrals\n\n       •      legendre, hermite: some of the classical orthogonal polynomials.\n\nOVERVIEW\n       In the following table several characteristics of the functions in this\n       package are summarized: the domain for the argument, the values for the\n       parameters and error bounds.\n\n       Family\t    | Function\t  | Domain x\t| Parameter   | Error bound\n       -------------+-------------+-------------+-------------+--------------\n       Bessel\t    | J0, J1,\t  | all of R\t| n = integer |   < 1.0e-8\n\t\t    | Jn\t  |\t\t|\t      |  (|x|<20, n<20)\n       Bessel\t    | J1/2, J-1/2,|  x > 0\t| n = integer |   exact\n       Bessel\t    | I_n\t  | all of R\t| n = integer |   < 1.0e-6\n\t\t    |\t\t  |\t\t|\t      |\n       Elliptic     | cn\t  | 0 <= x <= 1 |     --      |   < 1.0e-10\n       functions    | dn\t  | 0 <= x <= 1 |     --      |   < 1.0e-10\n\t\t    | sn\t  | 0 <= x <= 1 |     --      |   < 1.0e-10\n       Elliptic     | K \t  | 0 <= x < 1\t|     --      |   < 1.0e-6\n       integrals    | E \t  | 0 <= x < 1\t|     --      |   < 1.0e-6\n\t\t    |\t\t  |\t\t|\t      |\n       Error\t    | erf\t  |\t\t|     --      |\n       functions    | erfc\t  |\t\t|\t      |\n\t\t    | ierfc_n\t  |\t\t|\t      |\n\t\t    |\t\t  |\t\t|\t      |\n       Exponential  | Ei\t  |  x != 0\t|     --      |   < 1.0e-10 (relative)\n       integrals    | En\t  |  x >  0\t|     --      |   as Ei\n\t\t    | li\t  |  x > 0\t|     --      |   as Ei\n\t\t    | Chi\t  |  x > 0\t|     --      |   < 1.0e-8\n\t\t    | Shi\t  |  x > 0\t|     --      |   < 1.0e-8\n\t\t    | Ci\t  |  x > 0\t|     --      |   < 2.0e-4\n\t\t    | Si\t  |  x > 0\t|     --      |   < 2.0e-4\n\t\t    |\t\t  |\t\t|\t      |\n       Fresnel\t    | C \t  |  all of R\t|     --      |   < 2.0e-3\n       integrals    | S \t  |  all of R\t|     --      |   < 2.0e-3\n\t\t    |\t\t  |\t\t|\t      |\n       general\t    | Beta\t  | (see Gamma) |     --      |   < 1.0e-9\n\t\t    | Gamma\t  |  x != 0,-1, |     --      |   < 1.0e-9\n\t\t    |\t\t  |  -2, ...\t|\t      |\n\t\t    | sinc\t  |  all of R\t|     --      |   exact\n\t\t    |\t\t  |\t\t|\t      |\n       orthogonal   | Legendre\t  |  all of R\t| n = 0,1,... |   exact\n       polynomials  | Chebyshev   |  all of R\t| n = 0,1,... |   exact\n\t\t    | Laguerre\t  |  all of R\t| n = 0,1,... |   exact\n\t\t    |\t\t  |\t\t| alpha el. R |\n\t\t    | Hermite\t  |  all of R\t| n = 0,1,... |   exact\n\n       Note: Some of the error bounds are estimated, as no \"formal\" bounds\n       were available with the implemented approximation method, others hold\n       for the auxiliary functions used for estimating the primary functions.\n\n       The following well-known functions are currently missing from the\n       package:\n\n       •      Bessel functions of the second kind (Y_n, K_n)\n\n       •      Bessel functions of arbitrary order (and hence the Airy\n\t      functions)\n\n       •      Chebyshev polynomials of the second kind (U_n)\n\n       •      The digamma function (psi)\n\n       •      The incomplete gamma and beta functions\n\nPROCEDURES\n       The package defines the following public procedures:\n\n       ::math::special::Beta x y\n\t      Compute the Beta function for arguments \"x\" and \"y\"\n\n\t      float x\n\t\t     First argument for the Beta function\n\n\t      float y\n\t\t     Second argument for the Beta function"
  manpageQuestion1: What is the primary purpose of the `math::special` package in Tcl?
  manpageQuestion2: How can you use the `math::special` package to calculate the zeroth-order Bessel function of the first kind for a given input value?
  manpageQuestion3: Can you demonstrate how to compute the exponential integral Ei using the `math::special` package?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `special`.\n\n\n\nManpage text:\n\n::math::special::Gamma x y\n\t      Compute the Gamma function for argument \"x\"\n\n\t      float x\n\t\t     Argument for the Gamma function\n\n\n       ::math::special::erf x\n\t      Compute the error function for argument \"x\"\n\n\t      float x\n\t\t     Argument for the error function\n\n\n       ::math::special::erfc x\n\t      Compute the complementary error function for argument \"x\"\n\n\t      float x\n\t\t     Argument for the complementary error function\n\n\n       ::math::special::J0 x\n\t      Compute the zeroth-order Bessel function of the first kind for\n\t      the argument \"x\"\n\n\t      float x\n\t\t     Argument for the Bessel function\n\n       ::math::special::J1 x\n\t      Compute the first-order Bessel function of the first kind for\n\t      the argument \"x\"\n\n\t      float x\n\t\t     Argument for the Bessel function\n\n       ::math::special::Jn n x\n\t      Compute the nth-order Bessel function of the first kind for the\n\t      argument \"x\"\n\n\t      integer n\n\t\t     Order of the Bessel function\n\n\t      float x\n\t\t     Argument for the Bessel function\n\n       ::math::special::J1/2 x\n\t      Compute the half-order Bessel function of the first kind for the\n\t      argument \"x\"\n\n\t      float x\n\t\t     Argument for the Bessel function\n\n       ::math::special::J-1/2 x\n\t      Compute the minus-half-order Bessel function of the first kind\n\t      for the argument \"x\"\n\n\t      float x\n\t\t     Argument for the Bessel function\n\n       ::math::special::I_n x\n\t      Compute the modified Bessel function of the first kind of order\n\t      n for the argument \"x\"\n\n\t      int x  Positive integer order of the function\n\n\t      float x\n\t\t     Argument for the function\n\n       ::math::special::cn u k\n\t      Compute the elliptic function cn for the argument \"u\" and\n\t      parameter \"k\".\n\n\t      float u\n\t\t     Argument for the function\n\n\t      float k\n\t\t     Parameter\n\n       ::math::special::dn u k\n\t      Compute the elliptic function dn for the argument \"u\" and\n\t      parameter \"k\".\n\n\t      float u\n\t\t     Argument for the function\n\n\t      float k\n\t\t     Parameter\n\n       ::math::special::sn u k\n\t      Compute the elliptic function sn for the argument \"u\" and\n\t      parameter \"k\".\n\n\t      float u\n\t\t     Argument for the function\n\n\t      float k\n\t\t     Parameter\n\n       ::math::special::elliptic_K k\n\t      Compute the complete elliptic integral of the first kind for the\n\t      argument \"k\"\n\n\t      float k\n\t\t     Argument for the function\n\n       ::math::special::elliptic_E k\n\t      Compute the complete elliptic integral of the second kind for\n\t      the argument \"k\"\n\n\t      float k\n\t\t     Argument for the function\n\n       ::math::special::exponential_Ei x\n\t      Compute the exponential integral of the second kind for the\n\t      argument \"x\"\n\n\t      float x\n\t\t     Argument for the function (x != 0)\n\n       ::math::special::exponential_En n x\n\t      Compute the exponential integral of the first kind for the\n\t      argument \"x\" and order n\n\n\t      int n  Order of the integral (n >= 0)\n\n\t      float x\n\t\t     Argument for the function (x >= 0)\n\n       ::math::special::exponential_li x\n\t      Compute the logarithmic integral for the argument \"x\"\n\n\t      float x\n\t\t     Argument for the function (x > 0)\n\n       ::math::special::exponential_Ci x\n\t      Compute the cosine integral for the argument \"x\"\n\n\t      float x\n\t\t     Argument for the function (x > 0)\n\n       ::math::special::exponential_Si x\n\t      Compute the sine integral for the argument \"x\"\n\n\t      float x\n\t\t     Argument for the function (x > 0)\n\n       ::math::special::exponential_Chi x\n\t      Compute the hyperbolic cosine integral for the argument \"x\"\n\n\t      float x\n\t\t     Argument for the function (x > 0)\n\n       ::math::special::exponential_Shi x\n\t      Compute the hyperbolic sine integral for the argument \"x\"\n\n\t      float x\n\t\t     Argument for the function (x > 0)\n\n       ::math::special::fresnel_C x\n\t      Compute the Fresnel cosine integral for real argument x\n\n\t      float x\n\t\t     Argument for the function\n\n       ::math::special::fresnel_S x\n\t      Compute the Fresnel sine integral for real argument x\n\n\t      float x\n\t\t     Argument for the function\n\n       ::math::special::sinc x\n\t      Compute the sinc function for real argument x\n\n\t      float x\n\t\t     Argument for the function\n\n       ::math::special::legendre n\n\t      Return the Legendre polynomial of degree n (see THE ORTHOGONAL\n\t      POLYNOMIALS)\n\n\t      int n  Degree of the polynomial"
  manpageQuestion1: What is the primary purpose of the `special` resource in macOS?
  manpageQuestion2: How would you use the `::math::special::erf` command to calculate the error function of a given value?
  manpageQuestion3: Can you provide an example of using the `::math::special::J0` command to compute the zeroth-order Bessel function for a specific input value?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `special`.\n\n\n\nManpage text:\n\n::math::special::chebyshev n\n\t      Return the Chebyshev polynomial of degree n (of the first kind)\n\n\t      int n  Degree of the polynomial\n\n\n       ::math::special::laguerre alpha n\n\t      Return the Laguerre polynomial of degree n with parameter alpha\n\n\t      float alpha\n\t\t     Parameter of the Laguerre polynomial\n\n\t      int n  Degree of the polynomial\n\n\n       ::math::special::hermite n\n\t      Return the Hermite polynomial of degree n\n\n\t      int n  Degree of the polynomial\n\n\nTHE ORTHOGONAL POLYNOMIALS\n       For dealing with the classical families of orthogonal polynomials, the\n       package relies on the math::polynomials package. To evaluate the\n       polynomial at some coordinate, use the evalPolyn command:\n\n\t  set leg2 [::math::special::legendre 2]\n\t  puts \"Value at x=$x: [::math::polynomials::evalPolyn $leg2 $x]\"\n\n\n       The return value from the legendre and other commands is actually the\n       definition of the corresponding polynomial as used in that package.\n\nREMARKS ON THE IMPLEMENTATION\n       It should be noted, that the actual implementation of J0 and J1 depends\n       on straightforward Gaussian quadrature formulas. The (absolute)\n       accuracy of the results is of the order 1.0e-4 or better. The main\n       reason to implement them like that was that it was fast to do (the\n       formulas are simple) and the computations are fast too.\n\n       The implementation of J1/2 does not suffer from this: this function can\n       be expressed exactly in terms of elementary functions.\n\n       The functions J0 and J1 are the ones you will encounter most frequently\n       in practice.\n\n       The computation of I_n is based on Miller's algorithm for computing the\n       minimal function from recurrence relations.\n\n       The computation of the Gamma and Beta functions relies on the\n       combinatorics package, whereas that of the error functions relies on\n       the statistics package.\n\n       The computation of the complete elliptic integrals uses the AGM\n       algorithm.\n\n       Much information about these functions can be found in:\n\n       Abramowitz and Stegun: Handbook of Mathematical Functions (Dover, ISBN\n       486-61272-4)\n\nBUGS, IDEAS, FEEDBACK\n       This document, and the package it describes, will undoubtedly contain\n       bugs and other problems.  Please report such in the category math ::\n       special of the Tcllib SF Trackers\n       [http://sourceforge.net/tracker/?group_id=12883].  Please also report\n       any ideas for enhancements you may have for either package and/or\n       documentation.\n\nKEYWORDS\n       Bessel functions, error function, math, special functions\n\nCATEGORY\n       Mathematics\n\nCOPYRIGHT\n       Copyright (c) 2004 Arjen Markus <arjenmarkus@users.sourceforge.net>"
  manpageQuestion1: What is the primary purpose of the `special` resource in macOS?
  manpageQuestion2: How can you use the `::math::special::chebyshev` command to calculate the Chebyshev polynomial of degree 3?
  manpageQuestion3: Can you demonstrate how to evaluate the Laguerre polynomial of degree 2 with parameter alpha=1.5 using the `::math::special::laguerre` command?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `special`.\n\n\n\nManpage text:\n\nmath\t\t\t\t      0.2\t\t      math::special(n)"
  manpageQuestion1: What is the primary purpose of the `math::special` resource?
  manpageQuestion2: How would you use `math::special` to calculate the factorial of 5?
  manpageQuestion3: Can you provide an example of using `math::special` to compute the square root of 25?

