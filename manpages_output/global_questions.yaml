- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `global`.\n\n\n\nManpage text:\n\nglobal(n)\t\t     Tcl Built-In Commands\t\t     global(n)\n\n______________________________________________________________________________\n\nNAME\n       global - Access global variables\n\nSYNOPSIS\n       global varname ?varname ...?\n______________________________________________________________________________\n\n\nDESCRIPTION\n       This command has no effect unless executed in the context of a proc\n       body.  If the global command is executed in the context of a proc body,\n       it creates local variables linked to the corresponding global variables\n       (though these linked variables, like those created by upvar, are not\n       included in the list returned by info locals).\n\n       If varname contains namespace qualifiers, the local variable's name is\n       the unqualified name of the global variable, as determined by the\n       namespace tail command.\n\n       varname is always treated as the name of a variable, not an array\n       element.  An error is returned if the name looks like an array element,\n       such as a(b).\n\nEXAMPLES\n       This procedure sets the namespace variable ::a::x\n\t      proc reset {} {\n\t\t  global a::x\n\t\t  set x 0\n\t      }\n\n       This procedure accumulates the strings passed to it in a global buffer,\n       separated by newlines.  It is useful for situations when you want to\n       build a message piece-by-piece (as if with puts) but send that full\n       message in a single piece (e.g. over a connection opened with socket or\n       as part of a counted HTTP response).\n\t      proc accum {string} {\n\t\t  global accumulator\n\t\t  append accumulator $string \\n\n\t      }"
  manpageQuestion1: What is the primary purpose of the global command in Tcl?
  manpageQuestion2: How would you use the global command to access a global variable named 'accumulator' within a procedure?
  manpageQuestion3: Can you provide an example of using the global command to link a local variable in a procedure to a global variable named 'a::x'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `global`.\n\n\n\nManpage text:\n\nSEE ALSO\n       namespace(n), upvar(n), variable(n)\n\n\nKEYWORDS\n       global, namespace, procedure, variable\n\nTcl\t\t\t\t\t\t\t\t     global(n)"
  manpageQuestion1: What is the primary purpose of the global command in Tcl?
  manpageQuestion2: How would you use the global command to access a variable defined in an outer scope within a procedure?
  manpageQuestion3: Can you provide an example of using the global command to modify a variable that is declared in the global scope from within a procedure?

