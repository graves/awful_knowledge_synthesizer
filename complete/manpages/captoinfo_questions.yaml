- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `captoinfo`.\n\n\n\nManpage text:\n\ncaptoinfo(1M)\t\t\t\t\t\t\t captoinfo(1M)\n\nNAME\n       captoinfo - convert a termcap description into a terminfo description\n\nSYNOPSIS\n       captoinfo [-vn width]  [-V] [-1] [-w width] file . . .\n\nDESCRIPTION\n       captoinfo looks in each given text file for termcap descriptions.  For\n       each one found, an equivalent terminfo description is written to\n       standard output.  Termcap tc capabilities are translated directly to\n       terminfo use capabilities.\n\n       If no file is given, then the environment variable TERMCAP is used for\n       the filename or entry.  If TERMCAP is a full pathname to a file, only\n       the terminal whose name is specified in the environment variable TERM\n       is extracted from that file.  If the environment variable TERMCAP is\n       not set, then the file /usr/share/terminfo is read.\n\n       -v   print out tracing information on standard error as the program\n\t    runs.\n\n       -V   print out the version of the program in use on standard error and\n\t    exit."
  manpageQuestion1: What is the primary purpose of the captoinfo command?
  manpageQuestion2: How would you use captoinfo to convert a termcap file into a terminfo description?
  manpageQuestion3: Can you provide an example of using captoinfo to convert the default TERMCAP environment variable into a terminfo description?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `captoinfo`.\n\n\n\nManpage text:\n\n-1   cause the fields to print out one to a line.  Otherwise, the\n\t    fields will be printed several to a line to a maximum width of 60\n\t    characters.\n\n       -w   change the output to width characters.\n\nFILES\n       /usr/share/terminfo Compiled terminal description database.\n\nTRANSLATIONS FROM NONSTANDARD CAPABILITIES\n       Some obsolete nonstandard capabilities will automatically be translated\n       into standard (SVr4/XSI Curses) terminfo capabilities by captoinfo.\n       Whenever one of these automatic translations is done, the program will\n       issue an notification to stderr, inviting the user to check that it has\n       not mistakenly translated a completely unknown and random capability\n       and/or syntax error.\n\n       Nonstd\tStd    From\t      Terminfo\n\tname\tname\t\t     capability\n       ───────────────────────────────────────────────\n       BO\tmr     AT&T    enter_reverse_mode\n       CI\tvi     AT&T    cursor_invisible\n       CV\tve     AT&T    cursor_normal\n       DS\tmh     AT&T    enter_dim_mode\n       EE\tme     AT&T    exit_attribute_mode\n       FE\tLF     AT&T    label_on\n       FL\tLO     AT&T    label_off\n       XS\tmk     AT&T    enter_secure_mode\n       EN\t@7     XENIX   key_end\n       GE\tae     XENIX   exit_alt_charset_mode\n       GS\tas     XENIX   enter_alt_charset_mode\n       HM\tkh     XENIX   key_home\n       LD\tkL     XENIX   key_dl\n       PD\tkN     XENIX   key_npage\n       PN\tpo     XENIX   prtr_off\n       PS\tpf     XENIX   prtr_on\n       PU\tkP     XENIX   key_ppage\n       RT\t@8     XENIX   kent\n       UP\tku     XENIX   kcuu1\n       KA\tk;     Tek     key_f10\n       KB\tF1     Tek     key_f11\n       KC\tF2     Tek     key_f12\n       KD\tF3     Tek     key_f13\n       KE\tF4     Tek     key_f14\n       KF\tF5     Tek     key_f15\n       BC\tSb     Tek     set_background\n       FC\tSf     Tek     set_foreground\n       HS\tmh     Iris    enter_dim_mode"
  manpageQuestion1: What is the primary purpose of the captoinfo tool?
  manpageQuestion2: How can you use captoinfo to convert a nonstandard capability like 'BO' into its standard terminfo equivalent?
  manpageQuestion3: What is the effect of using the -w flag with captoinfo, and how would you apply it to set the output width to 40 characters?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `captoinfo`.\n\n\n\nManpage text:\n\nXENIX termcap also used to have a set of extension capabilities for\n       forms drawing, designed to take advantage of the IBM PC high-half\n       graphics.  They were as follows:\n\n       Cap\t    Graphic\n       ─────────────────────────────\n       G2    upper left\n       G3    lower left\n       G1    upper right\n       G4    lower right\n       GR    pointing right\n       GL    pointing left\n       GU    pointing up\n       GD    pointing down\n       GH    horizontal line\n       GV    vertical line\n       GC    intersection\n       G6    upper left\n       G7    lower left\n       G5    upper right\n       G8    lower right\n       Gr    tee pointing right\n       Gr    tee pointing left\n       Gu    tee pointing up\n       Gd    tee pointing down\n       Gh    horizontal line\n       Gv    vertical line\n       Gc    intersection\n       GG    acs magic cookie count\n\n       If the single-line capabilities occur in an entry, they will\n       automatically be composed into an acsc string.  The double-line\n       capabilities and GG are discarded with a warning message."
  manpageQuestion1: What is the primary purpose of the captoinfo tool?
  manpageQuestion2: How would you use captoinfo to convert the termcap entry for a horizontal line capability into its corresponding acsc string?
  manpageQuestion3: Can you provide an example of using captoinfo to process a termcap entry containing the double-line capability GG and generate a warning message?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `captoinfo`.\n\n\n\nManpage text:\n\nIBM's AIX has a terminfo facility descended from SVr1 terminfo but\n       incompatible with the SVr4 format.  The following AIX extensions are\n       automatically translated:\n\n\tIBM    XSI\n       ─────────────\n       ksel    kslt\n       kbtab   kcbt\n       font0   s0ds\n       font1   s1ds\n       font2   s2ds\n       font3   s3ds\n\n       Additionally, the AIX box1 capability will be automatically translated\n       to an acsc string.\n\n       Hewlett-Packard's terminfo library supports two nonstandard terminfo\n       capabilities meml (memory lock) and memu (memory unlock).  These will\n       be discarded with a warning message.\n\nNOTES\n       This utility is actually a link to tic(1M), running in -I mode.\tYou\n       can use other tic options such as -f and  -x.\n\n       The trace option is not identical to SVr4's.  Under SVr4, instead of\n       following the -v with a trace level n, you repeat it n times.\n\nSEE ALSO\n       infocmp(1M), curses(3X), terminfo(5)\n\n       This describes ncurses version 5.7 (patch 20081102)."
  manpageQuestion1: What is the primary purpose of the captoinfo utility?
  manpageQuestion2: How would you use captoinfo to translate AIX-specific terminfo capabilities into XSI-compliant format?
  manpageQuestion3: Can you provide an example of using captoinfo in conjunction with other tic options to process terminfo files?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `captoinfo`.\n\n\n\nManpage text:\n\nAUTHOR\n       Eric S. Raymond <esr@snark.thyrsus.com> and\n       Thomas E. Dickey <dickey@invisible-island.net>\n\n\t\t\t\t\t\t\t\t captoinfo(1M)"
  manpageQuestion1: What is the primary purpose of the captoinfo tool?
  manpageQuestion2: How would you use captoinfo to convert a capability file into an information format?
  manpageQuestion3: Can you provide an example of using captoinfo to display the contents of a capability file?

