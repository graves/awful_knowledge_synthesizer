- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `look`.\n\n\n\nManpage text:\n\nLOOK(1) \t\t    General Commands Manual\t\t       LOOK(1)\n\nNAME\n     look – display lines beginning with a given string\n\nSYNOPSIS\n     look [-df] [-t termchar] string [file ...]\n\nDESCRIPTION\n     The look utility displays any lines in file which contain string as a\n     prefix.  As look performs a binary search, the lines in file must be\n     sorted.\n\n     If file is not specified, the file /usr/share/dict/words is used, only\n     alphanumeric characters are compared and the case of alphabetic\n     characters is ignored.\n\n     The following options are available:\n\n     -d, --alphanum\n\t     Dictionary character set and order, i.e., only alphanumeric\n\t     characters are compared.\n\n     -f, --ignore-case\n\t     Ignore the case of alphabetic characters.\n\n     -t, --terminate termchar\n\t     Specify a string termination character, i.e., only the characters\n\t     in string up to and including the first occurrence of termchar\n\t     are compared.\n\nENVIRONMENT\n     The LANG, LC_ALL and LC_CTYPE environment variables affect the execution\n     of the look utility.  Their effect is described in environ(7)."
  manpageQuestion1: What is the primary purpose of the look utility?
  manpageQuestion2: How can you use the look command to find lines in a file that start with "apple" while ignoring case and using only alphanumeric characters?
  manpageQuestion3: What command would you use to search for lines in the default dictionary file that start with "banana" and terminate the comparison after encountering an underscore character?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `look`.\n\n\n\nManpage text:\n\nFILES\n     /usr/share/dict/words  the dictionary\n\nEXIT STATUS\n     The look utility exits 0 if one or more lines were found and displayed, 1\n     if no lines were found, and >1 if an error occurred.\n\nEXAMPLES\n     Look for lines starting with ‘xylene’ in the file /usr/share/dict/words:\n\n\t   $ look xylen\n\t   xylene\n\t   xylenol\n\t   xylenyl\n\n     Same as above, but do not consider any characters in string beyond the\n     first ‘e’.  Note that -f is implicit since we are searching the default\n     file /usr/share/dict/words:\n\n\t   $ look -t e xylen\n\t   Xyleborus\n\t   xylem\n\t   xylene\n\t   xylenol\n\t   xylenyl\n\t   xyletic\n\nCOMPATIBILITY\n     The original manual page stated that tabs and blank characters\n     participated in comparisons when the -d option was specified.  This was\n     incorrect and the current man page matches the historic implementation.\n\n     The -a and --alternative flags are ignored for compatibility.\n\nSEE ALSO\n     grep(1), sort(1)\n\nHISTORY\n     A look utility appeared in Version 7 AT&T UNIX."
  manpageQuestion1: What is the primary purpose of the look utility?
  manpageQuestion2: How can you use the look command to find lines in the /usr/share/dict/words file that start with ‘xylen’?
  manpageQuestion3: Can you provide an example of using the look command with the -t option to search for lines that match a partial pattern in the default dictionary file?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `look`.\n\n\n\nManpage text:\n\nBUGS\n     Lines are not compared according to the current locale's collating order.\n     Input files must be sorted with LC_COLLATE set to ‘C’.\n\nmacOS 15.3\t\t       December 29, 2020\t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the `look` command?
  manpageQuestion2: How can you use the `look` command to search for lines containing the word 'apple' in a file named 'data.txt'?
  manpageQuestion3: What are the limitations of the `look` command as described in its manpage?

