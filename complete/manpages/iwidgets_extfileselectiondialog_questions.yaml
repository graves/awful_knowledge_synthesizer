- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_extfileselectiondialog`.\n\n\n\nManpage text:\n\niwidgets::extfileselectiondialog(1)\t\t\t\t[incr Widgets]\n\n______________________________________________________________________________\n\nNAME\n       iwidgets::extfileselectiondialog - Create and manipulate a file\n       selection dialog widget\n\nSYNOPSIS\n       iwidgets::extfileselectiondialog pathName ?options?\n\nINHERITANCE\n       itk::Toplevel <- iwidgets::Shell <- iwidgets::Dialogshell <-\n       iwidgets::Dialog <- iwidgets::Extfileselectiondialog\n\nSTANDARD OPTIONS\n\n       activeBackground   background\t     borderWidth\t cursor\n       foreground\t  highlightColor     highlightThickness  insertBackground\n       insertBorderWidth  insertOffTime      insertOnTime\t insertWidth\n       selectBackground   selectBorderWidth  selectForeground\n\n       See the \"options\" manual entry for details on the standard options.\n\nASSOCIATED OPTIONS\n       popupCursor     textBackground textFont\n\n       See the \"combobox\" widget manual entry for details on the above\n       associated options.\n\n       childSitePos    directory      dirsLabel       dirSearchCommand\n       dirsOn\t       filesLabel     filesLabelOn    fileSearchCommand\n       filesOn\t       fileType       filterLabel     filterOn\n       invalid\t       mask\t      noMatchString   selectionLabel\n       selectionOn\n\n       See the \"extfileselectionbox\" widget manual entry for details on the\n       above associated options.\n\n       labelFont\n\n       See the \"labeledwidget\" widget manual entry for details on the above\n       associated options.\n\n       sashCursor\n\n       See the \"panedwindow\" widget manual entry for details on the above\n       associated options.\n\n       labelFont\n\n       See the \"labeledwidget\" widget manual entry for details on the above\n       associated options.\n\n       activeRelief    elementBorderWidth\t      jumptroughColor\n\n       See the \"scrollbar\" widget class manual entry for details on the above\n       associated options.\n\n       textBackground  textFont\n\n       See the \"scrolledlistbox\" widget manual entry for details on the above\n       associated options."
  manpageQuestion1: What is the primary purpose of the iwidgets::extfileselectiondialog?
  manpageQuestion2: How would you configure the file selection dialog to have a custom font and set a filter for only text files?
  manpageQuestion3: Can you provide an example of creating an extfileselectiondialog with specific options to customize its appearance and functionality?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_extfileselectiondialog`.\n\n\n\nManpage text:\n\nINHERITED OPTIONS\n       buttonBoxPadX   buttonBoxPadY  buttonBoxPos    padX\n       padY\t       separator      thickness\n\n       See the \"dialogshell\" widget manual entry for details on the above\n       inherited options.\n\n       height\t       master\t      modality\t      width\n\n       See the \"shell\" widget manual entry for details on the above inherited\n       options.\n\n       title\n\n       See the \"Toplevel\" widget  manual entry for details on the above\n       inherited options.\n______________________________________________________________________________\n\n\nDESCRIPTION\n       The iwidgets::extfileselectiondialog command creates an extended file\n       selection dialog which is slightly different than the\n       fileselectiondialog widget.  The differences are mostly cosmetic in\n       that the listboxes are within a panedwindow and the entryfields for the\n       filter and selection have been replaced by comboboxes.  Other than that\n       the interface is practically the same.\n\n\nMETHODS\n       The iwidgets::extfileselectiondialog command creates a new Tcl command\n       whose name is pathName.\tThis command may be used to invoke various\n       operations on the widget.  It has the following general form:\n\n\t      pathName option ?arg arg ...?\n\n       Option and the args determine the exact behavior of the command.  The\n       following commands are possible for extfileselectiondialog widgets:\n\nASSOCIATED METHODS\n       get\t       childsite      filter\n\n       See the \"fileselectionbox\" class manual entry for details on the\n       associated methods.\n\nINHERITED METHODS\n       add\t       buttonconfigure\t\t      defaulthide\n       insert\t       invoke\t      show\n\n       See the \"buttonbox\" widget manual entry for details on the above\n       inherited methods.\n\n       activate        center\t      deactivate\n\n       See the \"shell\" widget manual entry for details on the above inherited\n       methods."
  manpageQuestion1: What is the primary purpose of the iwidgets::extfileselectiondialog resource?
  manpageQuestion2: How can you configure the dimensions of the extfileselectiondialog widget using the inherited options?
  manpageQuestion3: What associated methods are available for the extfileselectiondialog widget and what do they do?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_extfileselectiondialog`.\n\n\n\nManpage text:\n\nWIDGET-SPECIFIC METHODS\n       pathName cget option\n\t      Returns the current value of the configuration option given by\n\t      option.  Option may have any of the values accepted by the\n\t      iwidgets::extfileselectiondialog command.\n\n       pathName configure ?option? ?value option value ...?\n\t      Query or modify the configuration options of the widget.\tIf no\n\t      option is specified, returns a list describing all of the\n\t      available options for pathName (see Tk_ConfigureInfo for\n\t      information on the format of this list).\tIf option is specified\n\t      with no value, then the command returns a list describing the\n\t      one named option (this list will be identical to the\n\t      corresponding sublist of the value returned if no option is\n\t      specified).  If one or more option-value pairs are specified,\n\t      then the command modifies the given widget option(s) to have the\n\t      given value(s);  in this case the command returns an empty\n\t      string.  Option may have any of the values accepted by the\n\t      iwidgets::extfileselectiondialog command."
  manpageQuestion1: What is the primary purpose of the iwidgets_extfileselectiondialog resource?
  manpageQuestion2: How can you retrieve the current value of a specific configuration option for an iwidgets_extfileselectiondialog widget?
  manpageQuestion3: Can you provide an example of modifying multiple configuration options for an iwidgets_extfileselectiondialog widget?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_extfileselectiondialog`.\n\n\n\nManpage text:\n\nCOMPONENTS\n       Name:\t       fsb\n       Class:\t       Fileselectionbox\n\n\t      The fsb component is the extfileselectionbox for the\n\t      extfileselectiondialog.  See the \"extfileselectionbox\" widget\n\t      manual entry for details on the fsb component item.\n\n\nEXAMPLE\n\n\t       package require Iwidgets 4.0\n\t       #\n\t       # Non-modal example\n\t       #\n\t       proc okCallback {} {\n\t\t   puts \"You selected [.nmfsd get]\"\n\t\t   .nmfsd deactivate\n\t       }\n\n\t       iwidgets::extfileselectiondialog .nmfsd -title Non-Modal\n\t       .nmfsd buttonconfigure OK -command okCallback\n\n\t       .nmfsd activate\n\n\t       #\n\t       # Modal example\n\t       #\n\t       iwidgets::extfileselectiondialog .mfsd -modality application\n\t       .mfsd center\n\n\t       if {[.mfsd activate]} {\n\t\t   puts \"You selected [.mfsd get]\"\n\t       } else {\n\t\t   puts \"You cancelled the dialog\"\n\t       }\n\n\nAUTHOR\n       Mark L. Ulferts\n\n       Anthony L. Parent\n\nKEYWORDS\n       extfileselectiondialog, extfileselectionbox, dialog, dialogshell,\n       shell, widget\n\nTk\t\t\t\t\t   iwidgets::extfileselectiondialog(1)"
  manpageQuestion1: What is the primary purpose of the iwidgets::extfileselectiondialog resource?
  manpageQuestion2: How would you create a non-modal extfileselectiondialog in Tk using the iwidgets package?
  manpageQuestion3: Can you provide an example of a modal extfileselectiondialog that displays a file selection dialog and handles the user's choice?

