- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `wfsctl`.\n\n\n\nManpage text:\n\nwfsctl(8)\t\t    System Manager's Manual\t\t     wfsctl(8)\n\nNAME\n     wfsctl – WebDAV File Sharing control utility\n\nSYNOPSYS\n     wfsctl command [arg]\n\nOVERVIEW\n     The wfsctl utility allows administrators to start, stop, and check the\n     status of the WebDAV File Sharing service (WFS). It also allows\n     administrators to create and delete WebDAV share points. It operates by\n     configuring the Apache httpd server.  The wfsctl command requires root\n     privileges.\n\nCOMMANDS\n     wfsctl provides the following commands:\n\n     start\t\t    Enable the WFS configuration, and either start or\n\t\t\t    restart the Apache web server to pick it up. If\n\t\t\t    necessary, this action will create an SSL Identity\n\t\t\t    matching the machine's host name as determined by\n\t\t\t    the hostname(1) command, and place it in the\n\t\t\t    System keychain. It will also update, if\n\t\t\t    necessary, environment variable definitions for\n\t\t\t    use by parameterized httpd config files. (Note\n\t\t\t    that starting the Apache web server is the\n\t\t\t    equivalent of \"apachectl start\" which loads a\n\t\t\t    launch job for the httpd process.)\n\n     stop\t\t    Disable the WFS configuration, and restart Apache\n\t\t\t    if it's already running.\n\n     status\t\t    Display the status of WFS, either \"enabled\" or\n\t\t\t    \"disabled\", whether or not Apache is running.\n\n     shares\t\t    Display existing WebDAV share points.\n\n     share path \t    Create a WebDAV share point for the specified file\n\t\t\t    system path.\n\n     unshare path | name    Disable WebDAV for the share point at the\n\t\t\t    specified file system path or share point name,\n\t\t\t    and delete the share point if no other file\n\t\t\t    sharing service (AFP or SMB) was enabled on that\n\t\t\t    share point.\n\n     diagnose\t\t    Display detailed status of Apache and WebDAV-\n\t\t\t    related processes.\n\nDETAILS\n     WebDAV File Sharing operates by:\n\n     1.   Recognizing WebDAV clients when they send OPTIONS or PROPFIND\n\t  directives\n\n     2.   Requiring such clients to provide OD credentials\n\n     3.   Assigning those authenticated users an HTTP cookie to recognize them\n\t  as WebDAV clients\n\n     4.   Launching an instance of the Apache httpd process on behalf of that\n\t  user, configured as a WebDAV server\n\n     5.   Reverse-proxying HTTP traffic to that user-specific instance of\n\t  httpd, so that the WebDAV client (typically an iWork app on iOS) can\n\t  access the home directory and share points on the server machine\n\t  with privileges of the authenticated user\n\n     6.   Recognizing share points that are marked as WebDAV share points.\n\n     Depending on how Apache is configured, this can coexist with other Apache\n     web service functions.\n\nNOTES\n     •\t WebDAV File Sharing requires SSL, and uses Basic authentication, with\n\t credentials that would otherwise be sent in the clear over the\n\t network. Also note that it uses Apache modules mod_ssl for SSL, and\n\t mod_authnz_od_apple for Basic authentication with OpenDirectory\n\t credentials.\n\n     •\t The name \"webdav\" is reserved (it triggers special handling of URLs),\n\t so share point paths named \"/webdav\" or containing \"webdav\" as a\n\t subpath are not allowed. And folders named \"webdav\" within share\n\t points won't be usable. There are no restrictions on case variants\n\t such as \"WebDAV\", or other variants such as \"webdav.d\".\n\n     •\t DropBox folders cannot be accessed via WebDAV File Sharing.\n\nCONFIGURABLE SETTINGS\n     Certain settings are kept in /etc/wfs/wfs.plist and are configurable by\n     the administrator, including:\n\n     ServerName \t    The host name the Apache web server should use,\n\t\t\t    and also the Common Name of the identity\n\t\t\t    certificate. If this is not configured, or set to\n\t\t\t    an empty string, the hostname(1) of the machine is\n\t\t\t    used.\n\n     ServerAddr \t    The IP address the Apache web server should use to\n\t\t\t    listen for HTTPS requests. Default is \"*\", which\n\t\t\t    means all addresses.\n\n     ServerPort \t    The TCP port the Apache web server should use to\n\t\t\t    listen for HTTPS requests. Default is the standard\n\t\t\t    HTTPS port, 443.\n\n     AccessGroup\t    The Open Directory group allowed access to the\n\t\t\t    WebDAV File Sharing service. The default is\n\t\t\t    \"everyone\", which gives access to any\n\t\t\t    authenticated user. Administrators can change this\n\t\t\t    setting to restrict access further. Authenticated\n\t\t\t    users will have, at most, the privileges they are\n\t\t\t    normally allowed by file system permissions. There\n\t\t\t    is no provision for guest access, so\n\t\t\t    unauthenticated users have no access.\n\n     SynthesizeSharePointForUserHomeDir\n\t\t\t    Whether to allow remote WebDAV clients to see\n\t\t\t    their home directory as a share point. Default is\n\t\t\t    True.\n\n     The Apache config file for WebDAV File Sharing is parameterized, and the\n     httpd server is managed by the httpd-wrapper utility, which passes\n     parameters to httpd. This is normally transparent, but note that to check\n     the Apache config file syntax, do not use \"apachectl configtest\" or\n     \"httpd -t\". Instead, use \"httpd-wrapper -t\".\n\nRETURN VALUES\n     wfsctl returns a status code of 0 for success. In the event of failure it\n     returns a non-zero status, and may also dump additional diagnostic\n     information.\n\nWEBDAV CLIENTS\n     •\t WebDAV clients must be properly configured to access WebDAV Shares on\n\t a remote host.\n\n     •\t WebDAV clients include certain iOS apps, like Numbers, Keynote, and\n\t Pages, and the macOS Finder's Connect-to-Server. (Note that the iOS\n\t Files app does not find WebDAV File Sharing locations.)\n\n     •\t WebDAV clients must usually be configured with a full URL of the\n\t host, with a scheme of https (since an http->https redirect is not\n\t generally compatible with WebDAV operations). It's not necessary to\n\t specify /webdav in the path. So for example, the \"Server Name\" might\n\t be specified as:\n\n\t https://hostname.example.com\n\n     •\t The configurable virtual host behavior once provided by macOS Server\n\t is not available, so WebDAV clients may not be able to use alternate\n\t host names in their URLs.\n\nFILES\n     /etc/wfs/httpd_webdavsharing.conf\n\t     The parameterized Apache config file for the main instance of\n\t     httpd\n\n     /etc/wfs/httpd_webdavsharing_template.conf\n\t     The parameterized Apache config file for the user-specific\n\t     instances of httpd\n\n     /etc/wfs/httpd_webdavsharing_sharepoints.conf\n\t     The Apache config file providing directives specific to each\n\t     share point; dynamically generated when share points are modified\n\t     by wfsctl\n\n     /etc/wfs/wfs.plist\n\t     The file where admin-configurable settings for WFS are stored.\n\n     /etc/apache2/env.plist\n\t     The file where environment variable definitions are managed\n\t     automatically; these variables are passed to httpd for use in\n\t     parameterized config files.\n\n     /Library/Logs/WebDAVFileSharing.log\n\t     The main WebDAV File Sharing log file\n\n     /etc/apache2/other/httpd_webdavsharing.conf\n\t     A symlink seen by Apache when WebDAV File Sharing is enabled.\n\t     When WebDAV File Sharing is disabled, this symlink is moved\n\t     aside.\n\n     /var/run/webdavsharing/<username>/\n\t     A directory created on the behalf of each authenticated user to\n\t     store user-specific WebDAV File Sharing logs.\n\n     /usr/share/sandbox/wfs.sb\n\t     The parameterized sandbox profile for user-specific httpd\n\t     instances.\n\n     /etc/wfs/wfs.sb\n\t     The dynamically generated portion of the sandbox profile\n\nSERVER APP\n     When macOS Server is installed and promoted, and the Apache instance for\n     Profile Manager is enabled, WebDAV File Sharing is reconfigured to\n     support the WebDAV behaviors presented by Server:\n\n     1.   macOS Server provides HTTP-based services (for Profile Manager) on\n\t  standard HTTP/S TCP ports 80 and 443. So to avoid port conflict, the\n\t  desktop Apache configuration (including the configuration for WebDAV\n\t  File Sharing) is switched to port 81, on localhost only, and WFS\n\t  traffic is reverse proxied to localhost:81.\n\n     2.   macOS Server manages its own SSL certificates, and provides the SSL\n\t  endpoint. So the desktop Apache configuration for WebDAV File\n\t  Sharing is switched to non-SSL.\n\n\t  When macOS Server is installed and promoted, and the Apache instance\n\t  for Profile Manager is enabled, it is still possible to use wfsctl\n\t  to manage WebDAV share points, e. g.:\n\n\t      sudo wfsctl share /Volumes/Data/Share1"
  manpageQuestion1: What is the primary purpose of the wfsctl command?
  manpageQuestion2: How can you use wfsctl to create a WebDAV share point for the file system path /Volumes/Data/Share1?
  manpageQuestion3: What command would you use to disable WebDAV sharing for a share point named 'MyShare'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `wfsctl`.\n\n\n\nManpage text:\n\n3.   Any share points created in the UI on versions of macOS Server that\n\t  predate High Sierra remain across updates, and those that were\n\t  marked as WebDAV share points should continue to be available after\n\t  the update to High Sierra or newer, whether or not macOS Server is\n\t  installed.\n\n     When the Apache instance for Profile Manager is disabled, or when macOS\n     Server is removed or demoted, the port changes and SSL changes described\n     above are reversed.\n\nSEE ALSO\n     httpd(8) httpd-wrapper(8)\n\nmacOS\t\t\t\tSept. 20, 2017\t\t\t\t macOS"
  manpageQuestion1: What is the primary purpose of the wfsctl resource?
  manpageQuestion2: How can you verify that WebDAV share points are still available after updating to High Sierra or newer?
  manpageQuestion3: What steps should be taken to reverse the port and SSL changes when the Apache instance for Profile Manager is disabled or macOS Server is removed?

