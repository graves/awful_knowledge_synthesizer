- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `bundle-binstubs`.\n\n\n\nManpage text:\n\nBUNDLE-BINSTUBS(1)\t\t\t\t\t    BUNDLE-BINSTUBS(1)\n\nNAME\n       bundle-binstubs - Install the binstubs of the listed gems\n\nSYNOPSIS\n       bundle binstubs GEM_NAME [--force] [--path PATH] [--standalone]\n\nDESCRIPTION\n       Binstubs are scripts that wrap around executables. Bundler creates a\n       small Ruby file (a binstub) that loads Bundler, runs the command, and\n       puts it into bin/. Binstubs are a shortcut-or alternative- to always\n       using bundle exec. This gives you a file that can by run directly, and\n       one that will always run the correct gem version used by the\n       application.\n\n       For example, if you run bundle binstubs rspec-core, Bundler will create\n       the file bin/rspec. That file will contain enough code to load Bundler,\n       tell it to load the bundled gems, and then run rspec.\n\n       This command generates binstubs for executables in GEM_NAME. Binstubs\n       are put into bin, or the --path directory if one has been set. Calling\n       binstubs with [GEM [GEM]] will create binstubs for all given gems."
  manpageQuestion1: What is the primary purpose of the bundle-binstubs command?
  manpageQuestion2: How would you use bundle-binstubs to generate binstubs for the gem 'rack'?
  manpageQuestion3: Can you provide an example of using bundle-binstubs with the --force option to regenerate binstubs for all gems in the current Gemfile?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `bundle-binstubs`.\n\n\n\nManpage text:\n\nOPTIONS\n       --force\n\t      Overwrite existing binstubs if they exist.\n\n       --path The location to install the specified binstubs to. This defaults\n\t      to bin.\n\n       --standalone\n\t      Makes binstubs that can work without depending on Rubygems or\n\t      Bundler at runtime.\n\n       --shebang\n\t      Specify a different shebang executable name than the default\n\t      (default ´ruby´)\n\nBUNDLE INSTALL --BINSTUBS\n       To create binstubs for all the gems in the bundle you can use the\n       --binstubs flag in bundle install(1) bundle-install.1.html.\n\n\t\t\t\t November 2018\t\t    BUNDLE-BINSTUBS(1)"
  manpageQuestion1: What is the primary purpose of the bundle-binstubs tool?
  manpageQuestion2: How would you use bundle-binstubs to create binstubs in a custom directory and force overwriting existing files?
  manpageQuestion3: Can you provide an example of using bundle-binstubs to generate standalone binstubs that do not depend on Rubygems or Bundler at runtime?

