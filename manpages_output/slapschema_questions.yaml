- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `slapschema`.\n\n\n\nManpage text:\n\nSLAPSCHEMA(8C)\t\t\t\t\t\t\tSLAPSCHEMA(8C)\n\nNAME\n       slapschema - SLAPD in-database schema checking utility\n\nSYNOPSIS\n       /usr/sbin/slapschema [-afilter] [-bsuffix] [-c] [-ddebug-level]\n       [-fslapd.conf] [-Fconfdir] [-g] [-HURI] [-lerror-file] [-ndbnum]\n       [-ooption[=value]] [-ssubtree-dn] [-v]\n\nDESCRIPTION\n       Slapschema is used to check schema compliance of the contents of a\n       slapd(8) database.  It opens the given database determined by the\n       database number or suffix and checks the compliance of its contents\n       with the corresponding schema. Errors are written to standard output or\n       the specified file.  Databases configured as subordinate of this one\n       are also output, unless -g is specified.\n\n       Administrators may need to modify existing schema items, including\n       adding new required attributes to objectClasses, removing existing\n       required or allowed attributes from objectClasses, entirely removing\n       objectClasses, or any other change that may result in making perfectly\n       valid entries no longer compliant with the modified schema.  The\n       execution of the slapschema tool after modifying the schema can point\n       out inconsistencies that would otherwise surface only when inconsistent\n       entries need to be modified."
  manpageQuestion1: What is the primary purpose of the slapschema utility?
  manpageQuestion2: How can you use slapschema to check the schema compliance of a slapd database configured with the suffix 'dc=example,dc=com'?
  manpageQuestion3: What command would you use to run slapschema in debug mode with a specified error log file and check the schema of a database located at 'ldap://localhost:389'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `slapschema`.\n\n\n\nManpage text:\n\nThe entry records are checked in database order, not superior first\n       order.  The entry records will be checked considering all (user and\n       operational) attributes stored in the database.\tDynamically generated\n       attributes (such as subschemaSubentry) will not be considered.\n\nOPTIONS\n       -a_filter\n\t      Only check entries matching the asserted filter.\tFor example\n\n\t      slapschema -a \\\n\t\t  \"(!(entryDN:dnSubtreeMatch:=ou=People,dc=example,dc=com))\"\n\n\t      will check all but the \"ou=People,dc=example,dc=com\" subtree of\n\t      the \"dc=example,dc=com\" database.  Deprecated; use -H\n\t      ldap:///???(filter) instead.\n\n       -b_suffix\n\t      Use the specified suffix to determine which database to check.\n\t      The -b cannot be used in conjunction with the -n option.\n\n       -c     Enable continue (ignore errors) mode.\n\n       -d_debug-level\n\t      Enable debugging messages as defined by the specified\n\t      debug-level; see slapd(8) for details.\n\n       -f_slapd.conf\n\t      Specify an alternative slapd.conf(5) file.\n\n       -F_confdir\n\t      specify a config directory.  If both -f and -F are specified,\n\t      the config file will be read and converted to config directory\n\t      format and written to the specified directory.  If neither\n\t      option is specified, an attempt to read the default config\n\t      directory will be made before trying to use the default config\n\t      file. If a valid config directory exists then the default config\n\t      file is ignored.\n\n       -g     disable subordinate gluing.  Only the specified database will be\n\t      processed, and not its glued subordinates (if any).\n\n       -H  URI\n\t      use dn, scope and filter from URI to only handle matching\n\t      entries.\n\n       -l_error-file\n\t      Write errors to specified file instead of standard output.\n\n       -n_dbnum\n\t      Check the dbnum-th database listed in the configuration file.\n\t      The config database slapd-config(5), is always the first\n\t      database, so use -n 0\n\n\t      The -n cannot be used in conjunction with the -b option.\n\n       -o_option[=value]\n\t      Specify an option with a(n optional) value.  Possible generic\n\t      options/values are:\n\n\t\t     syslog=<subsystems>  (see `-s' in slapd(8))\n\t\t     syslog-level=<level> (see `-S' in slapd(8))\n\t\t     syslog-user=<user>   (see `-l' in slapd(8))"
  manpageQuestion1: What is the primary purpose of the `slapschema` command?
  manpageQuestion2: How can you use `slapschema` to check entries in a specific LDAP database subtree while ignoring errors?
  manpageQuestion3: Can you provide an example of using `slapschema` to check a specific database configuration file entry without processing any subordinate databases?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `slapschema`.\n\n\n\nManpage text:\n\n-s_subtree-dn\n\t      Only check entries in the subtree specified by this DN.  Implies\n\t      -b subtree-dn if no -b nor -n option is given.  Deprecated; use\n\t      -H ldap:///subtree-dn instead.\n\n       -v     Enable verbose mode.\n\nLIMITATIONS\n       For some backend types, your slapd(8) should not be running (at least,\n       not in read-write mode) when you do this to ensure consistency of the\n       database. It is always safe to run slapschema with the slapd-bdb(5),\n       slapd-hdb(5), and slapd-null(5) backends.\n\nEXAMPLES\n       To check the schema compliance of your SLAPD database after\n       modifications to the schema, and put any error in a file called\n       errors.ldif, give the command:\n\n\t    /usr/sbin/slapcat -l errors.ldif\n\nSEE ALSO\n       ldap(3), ldif(5), slapd(8)\n\n       \"OpenLDAP Administrator's Guide\" (http://www.OpenLDAP.org/doc/admin/)\n\nACKNOWLEDGEMENTS\n       OpenLDAP Software is developed and maintained by The OpenLDAP Project\n       <http://www.openldap.org/>.  OpenLDAP Software is derived from\n       University of Michigan LDAP 3.3 Release."
  manpageQuestion1: What is the primary purpose of the slapschema command?
  manpageQuestion2: How can you check the schema compliance of an LDAP database and save any errors to a file called 'errors.ldif'?
  manpageQuestion3: What is the function of the -v flag in slapschema?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `slapschema`.\n\n\n\nManpage text:\n\nOpenLDAP 2.4.28 \t\t  2011/11/24\t\t\tSLAPSCHEMA(8C)"
  manpageQuestion1: What is the primary purpose of the slapschema tool?
  manpageQuestion2: How would you use slapschema to display the schema definitions for a specific LDAP object class?
  manpageQuestion3: Can you provide an example of using slapschema to generate a schema file for the 'user' object class?

