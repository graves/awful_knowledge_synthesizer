- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `cleanup`.\n\n\n\nManpage text:\n\nCLEANUP(8)\t\t    System Manager's Manual\t\t    CLEANUP(8)\n\n\nNAME\n       cleanup - canonicalize and enqueue Postfix message\n\nSYNOPSIS\n       cleanup [generic Postfix daemon options]\n\nDESCRIPTION\n       The cleanup(8) daemon processes inbound mail, inserts it into the\n       incoming mail queue, and informs the queue manager of its arrival.\n\n       The cleanup(8) daemon always performs the following transformations:\n\n       •      Insert missing message headers: (Resent-) From:, To:,\n\t      Message-Id:, and Date:.\n\n       •      Transform envelope and header addresses to the standard\n\t      user@fully-qualified-domain form that is expected by other\n\t      Postfix programs.  This task is delegated to the\n\t      trivial-rewrite(8) daemon.\n\n       •      Eliminate duplicate envelope recipient addresses.\n\n       •      Remove message headers: Bcc, Content-Length, Resent-Bcc,\n\t      Return-Path.\n\n       The following address transformations are optional:\n\n       •      Optionally, rewrite all envelope and header addresses according\n\t      to the mappings specified in the canonical(5) lookup tables.\n\n       •      Optionally, masquerade envelope sender addresses and message\n\t      header addresses (i.e. strip host or domain information below\n\t      all domains listed in the masquerade_domains parameter, except\n\t      for user names listed in masquerade_exceptions).\tBy default,\n\t      address masquerading does not affect envelope recipients.\n\n       •      Optionally, expand envelope recipients according to information\n\t      found in the virtual(5) lookup tables.\n\n       The cleanup(8) daemon performs sanity checks on the content of each\n       message. When it finds a problem, by default it returns a diagnostic\n       status to the client, and leaves it up to the client to deal with the\n       problem. Alternatively, the client can request the cleanup(8) daemon to\n       bounce the message back to the sender in case of trouble.\n\nSTANDARDS\n       RFC 822 (ARPA Internet Text Messages)\n       RFC 2045 (MIME: Format of Internet Message Bodies)\n       RFC 2046 (MIME: Media Types)\n       RFC 2822 (Internet Message Format)\n       RFC 3463 (Enhanced Status Codes)\n       RFC 3464 (Delivery status notifications)\n       RFC 5322 (Internet Message Format)\n\nDIAGNOSTICS\n       Problems and transactions are logged to syslogd(8).\n\nBUGS\n       Table-driven rewriting rules make it hard to express if then else and\n       other logical relationships.\n\nCONFIGURATION PARAMETERS\n       Changes to main.cf are picked up automatically, as cleanup(8) processes\n       run for only a limited amount of time. Use the command \"postfix reload\"\n       to speed up a change.\n\n       The text below provides only a parameter summary. See postconf(5) for\n       more details including examples.\n\nCOMPATIBILITY CONTROLS\n\n       undisclosed_recipients_header (see 'postconf -d' output)\n\t      Message header that the Postfix cleanup(8) server inserts when a\n\t      message contains no To: or Cc: message header.\n\n       Available in Postfix version 2.1 only:\n\n       enable_errors_to (no)\n\t      Report mail delivery errors to the address specified with the\n\t      non-standard Errors-To: message header, instead of the envelope\n\t      sender address (this feature is removed with Postfix version\n\t      2.2, is turned off by default with Postfix version 2.1, and is\n\t      always turned on with older Postfix versions).\n\n       Available in Postfix version 2.6 and later:\n\n       always_add_missing_headers (no)\n\t      Always add (Resent-) From:, To:, Date: or Message-ID: headers\n\t      when not present.\n\n       Available in Postfix version 2.9 and later:\n\n       enable_long_queue_ids (no)\n\t      Enable long, non-repeating, queue IDs (queue file names).\n\n       Available in Postfix version 3.0 and later:\n\n       message_drop_headers (bcc, content-length, resent-bcc, return-path)\n\t      Names of message headers that the cleanup(8) daemon will remove\n\t      after applying header_checks(5) and before invoking Milter\n\t      applications.\n\nBUILT-IN CONTENT FILTERING CONTROLS\n       Postfix built-in content filtering is meant to stop a flood of worms or\n       viruses. It is not a general content filter.\n\n       body_checks (empty)\n\t      Optional lookup tables for content inspection as specified in\n\t      the body_checks(5) manual page.\n\n       header_checks (empty)\n\t      Optional lookup tables for content inspection of primary\n\t      non-MIME message headers, as specified in the header_checks(5)\n\t      manual page.\n\n       Available in Postfix version 2.0 and later:\n\n       body_checks_size_limit (51200)\n\t      How much text in a message body segment (or attachment, if you\n\t      prefer to use that term) is subjected to body_checks inspection.\n\n       mime_header_checks ($header_checks)\n\t      Optional lookup tables for content inspection of MIME related\n\t      message headers, as described in the header_checks(5) manual\n\t      page.\n\n       nested_header_checks ($header_checks)\n\t      Optional lookup tables for content inspection of non-MIME\n\t      message headers in attached messages, as described in the\n\t      header_checks(5) manual page.\n\n       Available in Postfix version 2.3 and later:\n\n       message_reject_characters (empty)\n\t      The set of characters that Postfix will reject in message\n\t      content.\n\n       message_strip_characters (empty)\n\t      The set of characters that Postfix will remove from message\n\t      content.\n\nBEFORE QUEUE MILTER CONTROLS\n       As of version 2.3, Postfix supports the Sendmail version 8 Milter (mail\n       filter) protocol. When mail is not received via the smtpd(8) server,\n       the cleanup(8) server will simulate SMTP events to the extent that this\n       is possible. For details see the MILTER_README document.\n\n       non_smtpd_milters (empty)\n\t      A list of Milter (mail filter) applications for new mail that\n\t      does not arrive via the Postfix smtpd(8) server.\n\n       milter_protocol (6)\n\t      The mail filter protocol version and optional protocol\n\t      extensions for communication with a Milter application; prior to\n\t      Postfix 2.6 the default protocol is 2.\n\n       milter_default_action (tempfail)\n\t      The default action when a Milter (mail filter) application is\n\t      unavailable or mis-configured.\n\n       milter_macro_daemon_name ($myhostname)\n\t      The {daemon_name} macro value for Milter (mail filter)\n\t      applications.\n\n       milter_macro_v ($mail_name $mail_version)\n\t      The {v} macro value for Milter (mail filter) applications.\n\n       milter_connect_timeout (30s)\n\t      The time limit for connecting to a Milter (mail filter)\n\t      application, and for negotiating protocol options.\n\n       milter_command_timeout (30s)\n\t      The time limit for sending an SMTP command to a Milter (mail\n\t      filter) application, and for receiving the response.\n\n       milter_content_timeout (300s)\n\t      The time limit for sending message content to a Milter (mail\n\t      filter) application, and for receiving the response.\n\n       milter_connect_macros (see 'postconf -d' output)\n\t      The macros that are sent to Milter (mail filter) applications\n\t      after completion of an SMTP connection.\n\n       milter_helo_macros (see 'postconf -d' output)\n\t      The macros that are sent to Milter (mail filter) applications\n\t      after the SMTP HELO or EHLO command.\n\n       milter_mail_macros (see 'postconf -d' output)\n\t      The macros that are sent to Milter (mail filter) applications\n\t      after the SMTP MAIL FROM command.\n\n       milter_rcpt_macros (see 'postconf -d' output)\n\t      The macros that are sent to Milter (mail filter) applications\n\t      after the SMTP RCPT TO command.\n\n       milter_data_macros (see 'postconf -d' output)\n\t      The macros that are sent to version 4 or higher Milter (mail\n\t      filter) applications after the SMTP DATA command.\n\n       milter_unknown_command_macros (see 'postconf -d' output)\n\t      The macros that are sent to version 3 or higher Milter (mail\n\t      filter) applications after an unknown SMTP command.\n\n       milter_end_of_data_macros (see 'postconf -d' output)\n\t      The macros that are sent to Milter (mail filter) applications\n\t      after the message end-of-data.\n\n       Available in Postfix version 2.5 and later:\n\n       milter_end_of_header_macros (see 'postconf -d' output)\n\t      The macros that are sent to Milter (mail filter) applications\n\t      after the end of the message header.\n\n       Available in Postfix version 2.7 and later:\n\n       milter_header_checks (empty)\n\t      Optional lookup tables for content inspection of message headers\n\t      that are produced by Milter applications.\n\n       Available in Postfix version 3.1 and later:\n\n       milter_macro_defaults (empty)\n\t      Optional list of name=value pairs that specify default values\n\t      for arbitrary macros that Postfix may send to Milter\n\t      applications.\n\nMIME PROCESSING CONTROLS\n       Available in Postfix version 2.0 and later:\n\n       disable_mime_input_processing (no)\n\t      Turn off MIME processing while receiving mail.\n\n       mime_boundary_length_limit (2048)\n\t      The maximal length of MIME multipart boundary strings.\n\n       mime_nesting_limit (100)\n\t      The maximal recursion level that the MIME processor will handle.\n\n       strict_8bitmime (no)\n\t      Enable both strict_7bit_headers and strict_8bitmime_body.\n\n       strict_7bit_headers (no)\n\t      Reject mail with 8-bit text in message headers.\n\n       strict_8bitmime_body (no)\n\t      Reject 8-bit message body text without 8-bit MIME content\n\t      encoding information.\n\n       strict_mime_encoding_domain (no)\n\t      Reject mail with invalid Content-Transfer-Encoding: information\n\t      for the message/* or multipart/* MIME content types.\n\n       Available in Postfix version 2.5 and later:\n\n       detect_8bit_encoding_header (yes)\n\t      Automatically detect 8BITMIME body content by looking at\n\t      Content-Transfer-Encoding: message headers; historically, this\n\t      behavior was hard-coded to be \"always on\".\n\nAUTOMATIC BCC RECIPIENT CONTROLS\n       Postfix can automatically add BCC (blind carbon copy) when mail enters\n       the mail system:\n\n       always_bcc (empty)\n\t      Optional address that receives a \"blind carbon copy\" of each\n\t      message that is received by the Postfix mail system.\n\n       Available in Postfix version 2.1 and later:\n\n       sender_bcc_maps (empty)\n\t      Optional BCC (blind carbon-copy) address lookup tables, indexed\n\t      by sender address.\n\n       recipient_bcc_maps (empty)\n\t      Optional BCC (blind carbon-copy) address lookup tables, indexed\n\t      by recipient address.\n\nADDRESS TRANSFORMATION CONTROLS\n       Address rewriting is delegated to the trivial-rewrite(8) daemon.  The\n       cleanup(8) server implements table driven address mapping.\n\n       empty_address_recipient (MAILER-DAEMON)\n\t      The recipient of mail addressed to the null address.\n\n       canonical_maps (empty)\n\t      Optional address mapping lookup tables for message headers and\n\t      envelopes.\n\n       recipient_canonical_maps (empty)\n\t      Optional address mapping lookup tables for envelope and header\n\t      recipient addresses.\n\n       sender_canonical_maps (empty)\n\t      Optional address mapping lookup tables for envelope and header\n\t      sender addresses.\n\n       masquerade_classes (envelope_sender, header_sender, header_recipient)\n\t      What addresses are subject to address masquerading.\n\n       masquerade_domains (empty)\n\t      Optional list of domains whose subdomain structure will be\n\t      stripped off in email addresses.\n\n       masquerade_exceptions (empty)\n\t      Optional list of user names that are not subjected to address\n\t      masquerading, even when their address matches\n\t      $masquerade_domains.\n\n       propagate_unmatched_extensions (canonical, virtual)\n\t      What address lookup tables copy an address extension from the\n\t      lookup key to the lookup result.\n\n       Available before Postfix version 2.0:\n\n       virtual_maps (empty)\n\t      Optional lookup tables with a) names of domains for which all\n\t      addresses are aliased to addresses in other local or remote\n\t      domains, and b) addresses that are aliased to addresses in other\n\t      local or remote domains.\n\n       Available in Postfix version 2.0 and later:\n\n       virtual_alias_maps ($virtual_maps)\n\t      Optional lookup tables that alias specific mail addresses or\n\t      domains to other local or remote address.\n\n       Available in Postfix version 2.2 and later:\n\n       canonical_classes (envelope_sender, envelope_recipient, header_sender,\n       header_recipient)\n\t      What addresses are subject to canonical_maps address mapping.\n\n       recipient_canonical_classes (envelope_recipient, header_recipient)\n\t      What addresses are subject to recipient_canonical_maps address\n\t      mapping.\n\n       sender_canonical_classes (envelope_sender, header_sender)\n\t      What addresses are subject to sender_canonical_maps address\n\t      mapping.\n\n       remote_header_rewrite_domain (empty)\n\t      Don't rewrite message headers from remote clients at all when\n\t      this parameter is empty; otherwise, rewrite message headers and\n\t      append the specified domain name to incomplete addresses.\n\nRESOURCE AND RATE CONTROLS\n\n       duplicate_filter_limit (1000)\n\t      The maximal number of addresses remembered by the address\n\t      duplicate filter for aliases(5) or virtual(5) alias expansion,\n\t      or for showq(8) queue displays.\n\n       header_size_limit (102400)\n\t      The maximal amount of memory in bytes for storing a message\n\t      header.\n\n       hopcount_limit (50)\n\t      The maximal number of Received:  message headers that is allowed\n\t      in the primary message headers.\n\n       in_flow_delay (1s)\n\t      Time to pause before accepting a new message, when the message\n\t      arrival rate exceeds the message delivery rate.\n\n       message_size_limit (10240000)\n\t      The maximal size in bytes of a message, including envelope\n\t      information.\n\n       Available in Postfix version 2.0 and later:\n\n       header_address_token_limit (10240)\n\t      The maximal number of address tokens are allowed in an address\n\t      message header.\n\n       mime_boundary_length_limit (2048)\n\t      The maximal length of MIME multipart boundary strings.\n\n       mime_nesting_limit (100)\n\t      The maximal recursion level that the MIME processor will handle.\n\n       queue_file_attribute_count_limit (100)\n\t      The maximal number of (name=value) attributes that may be stored\n\t      in a Postfix queue file.\n\n       Available in Postfix version 2.1 and later:\n\n       virtual_alias_expansion_limit (1000)\n\t      The maximal number of addresses that virtual alias expansion\n\t      produces from each original recipient.\n\n       virtual_alias_recursion_limit (1000)\n\t      The maximal nesting depth of virtual alias expansion.\n\n       Available in Postfix version 3.0 and later:\n\n       virtual_alias_address_length_limit (1000)\n\t      The maximal length of an email address after virtual alias\n\t      expansion.\n\nSMTPUTF8 CONTROLS\n       Preliminary SMTPUTF8 support is introduced with Postfix 3.0.\n\n       smtputf8_enable (yes)\n\t      Enable preliminary SMTPUTF8 support for the protocols described\n\t      in RFC 6531..6533.\n\n       smtputf8_autodetect_classes (sendmail, verify)\n\t      Detect that a message requires SMTPUTF8 support for the\n\t      specified mail origin classes.\n\n       Available in Postfix version 3.2 and later:\n\n       enable_idna2003_compatibility (no)\n\t      Enable 'transitional' compatibility between IDNA2003 and\n\t      IDNA2008, when converting UTF-8 domain names to/from the ASCII\n\t      form that is used for DNS lookups.\n\nMISCELLANEOUS CONTROLS\n\n       config_directory (see 'postconf -d' output)\n\t      The default location of the Postfix main.cf and master.cf\n\t      configuration files.\n\n       daemon_timeout (18000s)\n\t      How much time a Postfix daemon process may take to handle a\n\t      request before it is terminated by a built-in watchdog timer.\n\n       delay_logging_resolution_limit (2)\n\t      The maximal number of digits after the decimal point when\n\t      logging sub-second delay values.\n\n       delay_warning_time (0h)\n\t      The time after which the sender receives a copy of the message\n\t      headers of mail that is still queued.\n\n       ipc_timeout (3600s)\n\t      The time limit for sending or receiving information over an\n\t      internal communication channel.\n\n       max_idle (100s)\n\t      The maximum amount of time that an idle Postfix daemon process\n\t      waits for an incoming connection before terminating voluntarily.\n\n       max_use (100)\n\t      The maximal number of incoming connections that a Postfix daemon\n\t      process will service before terminating voluntarily.\n\n       myhostname (see 'postconf -d' output)\n\t      The internet hostname of this mail system.\n\n       myorigin ($myhostname)\n\t      The domain name that locally-posted mail appears to come from,\n\t      and that locally posted mail is delivered to.\n\n       process_id (read-only)\n\t      The process ID of a Postfix command or daemon process.\n\n       process_name (read-only)\n\t      The process name of a Postfix command or daemon process.\n\n       queue_directory (see 'postconf -d' output)\n\t      The location of the Postfix top-level queue directory.\n\n       soft_bounce (no)\n\t      Safety net to keep mail queued that would otherwise be returned\n\t      to the sender.\n\n       syslog_facility (mail)\n\t      The syslog facility of Postfix logging.\n\n       syslog_name (see 'postconf -d' output)\n\t      A prefix that is prepended to the process name in syslog\n\t      records, so that, for example, \"smtpd\" becomes \"prefix/smtpd\".\n\n       Available in Postfix version 2.1 and later:\n\n       enable_original_recipient (yes)\n\t      Enable support for the X-Original-To message header.\n\nFILES\n       /etc/postfix/canonical*, canonical mapping table\n       /etc/postfix/virtual*, virtual mapping table\n\nSEE ALSO\n       trivial-rewrite(8), address rewriting\n       qmgr(8), queue manager\n       header_checks(5), message header content inspection\n       body_checks(5), body parts content inspection\n       canonical(5), canonical address lookup table format\n       virtual(5), virtual alias lookup table format\n       postconf(5), configuration parameters\n       master(5), generic daemon options\n       master(8), process manager\n       syslogd(8), system logging\n\nREADME FILES\n       Use \"postconf readme_directory\" or \"postconf html_directory\" to locate\n       this information.\n       ADDRESS_REWRITING_README Postfix address manipulation\n       CONTENT_INSPECTION_README content inspection\n\nLICENSE\n       The Secure Mailer license must be distributed with this software.\n\nAUTHOR(S)\n       Wietse Venema\n       IBM T.J. Watson Research\n       P.O. Box 704\n       Yorktown Heights, NY 10598, USA\n\n       Wietse Venema\n       Google, Inc.\n       111 8th Avenue\n       New York, NY 10011, USA\n\n\t\t\t\t\t\t\t\t    CLEANUP(8)"
  manpageQuestion1: What is the primary purpose of the 4ccconv tool?
  manpageQuestion2: How can I convert a 4-character code to its hexadecimal representation using 4ccconv?
  manpageQuestion3: What is the correct way to display a number as a 4-character code with the 4ccconv command?

