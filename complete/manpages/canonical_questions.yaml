- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `canonical`.\n\n\n\nManpage text:\n\nCANONICAL(5)\t\t      File Formats Manual\t\t  CANONICAL(5)\n\n\nNAME\n       canonical - Postfix canonical table format\n\nSYNOPSIS\n       postmap /etc/postfix/canonical\n\n       postmap -q \"string\" /etc/postfix/canonical\n\n       postmap -q - /etc/postfix/canonical <inputfile\n\nDESCRIPTION\n       The optional canonical(5) table specifies an address mapping for local\n       and non-local addresses. The mapping is used by the cleanup(8) daemon,\n       before mail is stored into the queue.  The address mapping is\n       recursive.\n\n       Normally, the canonical(5) table is specified as a text file that\n       serves as input to the postmap(1) command.  The result, an indexed file\n       in dbm or db format, is used for fast searching by the mail system.\n       Execute the command \"postmap /etc/postfix/canonical\" to rebuild an\n       indexed file after changing the corresponding text file.\n\n       When the table is provided via other means such as NIS, LDAP or SQL,\n       the same lookups are done as for ordinary indexed files.\n\n       Alternatively, the table can be provided as a regular-expression map\n       where patterns are given as regular expressions, or lookups can be\n       directed to TCP-based server. In those cases, the lookups are done in a\n       slightly different way as described below under \"REGULAR EXPRESSION\n       TABLES\" or \"TCP-BASED TABLES\".\n\n       By default the canonical(5) mapping affects both message header\n       addresses (i.e. addresses that appear inside messages) and message\n       envelope addresses (for example, the addresses that are used in SMTP\n       protocol commands). This is controlled with the canonical_classes\n       parameter.\n\n       NOTE: Postfix versions 2.2 and later rewrite message headers from\n       remote SMTP clients only if the client matches the\n       local_header_rewrite_clients parameter, or if the\n       remote_header_rewrite_domain configuration parameter specifies a\n       non-empty value. To get the behavior before Postfix 2.2, specify\n       \"local_header_rewrite_clients = static:all\".\n\n       Typically, one would use the canonical(5) table to replace login names\n       by Firstname.Lastname, or to clean up addresses produced by legacy mail\n       systems.\n\n       The canonical(5) mapping is not to be confused with virtual alias\n       support or with local aliasing. To change the destination but not the\n       headers, use the virtual(5) or aliases(5) map instead.\n\nCASE FOLDING\n       The search string is folded to lowercase before database lookup. As of\n       Postfix 2.3, the search string is not case folded with database types\n       such as regexp: or pcre: whose lookup fields can match both upper and\n       lower case.\n\nTABLE FORMAT\n       The input format for the postmap(1) command is as follows:\n\n       pattern address\n\t      When pattern matches a mail address, replace it by the\n\t      corresponding address.\n\n       blank lines and comments\n\t      Empty lines and whitespace-only lines are ignored, as are lines\n\t      whose first non-whitespace character is a `#'.\n\n       multi-line text\n\t      A logical line starts with non-whitespace text. A line that\n\t      starts with whitespace continues a logical line.\n\nTABLE SEARCH ORDER\n       With lookups from indexed files such as DB or DBM, or from networked\n       tables such as NIS, LDAP or SQL, each user@domain query produces a\n       sequence of query patterns as described below.\n\n       Each query pattern is sent to each specified lookup table before trying\n       the next query pattern, until a match is found.\n\n       user@domain address\n\t      Replace user@domain by address. This form has the highest\n\t      precedence.\n\n\t      This is useful to clean up addresses produced by legacy mail\n\t      systems.\tIt can also be used to produce Firstname.Lastname\n\t      style addresses, but see below for a simpler solution.\n\n       user address\n\t      Replace user@site by address when site is equal to $myorigin,\n\t      when site is listed in $mydestination, or when it is listed in\n\t      $inet_interfaces or $proxy_interfaces.\n\n\t      This form is useful for replacing login names by\n\t      Firstname.Lastname.\n\n       @domain address\n\t      Replace other addresses in domain by address.  This form has the\n\t      lowest precedence.\n\n\t      Note: @domain is a wild-card. When this form is applied to\n\t      recipient addresses, the Postfix SMTP server accepts mail for\n\t      any recipient in domain, regardless of whether that recipient\n\t      exists.  This may turn your mail system into a backscatter\n\t      source: Postfix first accepts mail for non-existent recipients\n\t      and then tries to return that mail as \"undeliverable\" to the\n\t      often forged sender address.\n\nRESULT ADDRESS REWRITING\n       The lookup result is subject to address rewriting:\n\n       •      When the result has the form @otherdomain, the result becomes\n\t      the same user in otherdomain.\n\n       •      When \"append_at_myorigin=yes\", append \"@$myorigin\" to addresses\n\t      without \"@domain\".\n\n       •      When \"append_dot_mydomain=yes\", append \".$mydomain\" to addresses\n\t      without \".domain\".\n\nADDRESS EXTENSION\n       When a mail address localpart contains the optional recipient delimiter\n       (e.g., user+foo@domain), the lookup order becomes: user+foo@domain,\n       user@domain, user+foo, user, and @domain.\n\n       The propagate_unmatched_extensions parameter controls whether an\n       unmatched address extension (+foo) is propagated to the result of table\n       lookup.\n\nREGULAR EXPRESSION TABLES\n       This section describes how the table lookups change when the table is\n       given in the form of regular expressions. For a description of regular\n       expression lookup table syntax, see regexp_table(5) or pcre_table(5).\n\n       Each pattern is a regular expression that is applied to the entire\n       address being looked up. Thus, user@domain mail addresses are not\n       broken up into their user and @domain constituent parts, nor is\n       user+foo broken up into user and foo.\n\n       Patterns are applied in the order as specified in the table, until a\n       pattern is found that matches the search string.\n\n       Results are the same as with indexed file lookups, with the additional\n       feature that parenthesized substrings from the pattern can be\n       interpolated as $1, $2 and so on.\n\nTCP-BASED TABLES\n       This section describes how the table lookups change when lookups are\n       directed to a TCP-based server. For a description of the TCP\n       client/server lookup protocol, see tcp_table(5).  This feature is not\n       available up to and including Postfix version 2.4.\n\n       Each lookup operation uses the entire address once.  Thus, user@domain\n       mail addresses are not broken up into their user and @domain\n       constituent parts, nor is user+foo broken up into user and foo.\n\n       Results are the same as with indexed file lookups.\n\nBUGS\n       The table format does not understand quoting conventions.\n\nCONFIGURATION PARAMETERS\n       The following main.cf parameters are especially relevant.  The text\n       below provides only a parameter summary. See postconf(5) for more\n       details including examples.\n\n       canonical_classes\n\t      What addresses are subject to canonical address mapping.\n\n       canonical_maps\n\t      List of canonical mapping tables.\n\n       recipient_canonical_maps\n\t      Address mapping lookup table for envelope and header recipient\n\t      addresses.\n\n       sender_canonical_maps\n\t      Address mapping lookup table for envelope and header sender\n\t      addresses.\n\n       propagate_unmatched_extensions\n\t      A list of address rewriting or forwarding mechanisms that\n\t      propagate an address extension from the original address to the\n\t      result.  Specify zero or more of canonical, virtual, alias,\n\t      forward, include, or generic.\n\n       Other parameters of interest:\n\n       inet_interfaces\n\t      The network interface addresses that this system receives mail\n\t      on.  You need to stop and start Postfix when this parameter\n\t      changes.\n\n       local_header_rewrite_clients\n\t      Rewrite message header addresses in mail from these clients and\n\t      update incomplete addresses with the domain name in $myorigin or\n\t      $mydomain; either don't rewrite message headers from other\n\t      clients at all, or rewrite message headers and update incomplete\n\t      addresses with the domain specified in the\n\t      remote_header_rewrite_domain parameter.\n\n       proxy_interfaces\n\t      Other interfaces that this machine receives mail on by way of a\n\t      proxy agent or network address translator.\n\n       masquerade_classes\n\t      List of address classes subject to masquerading: zero or more of\n\t      envelope_sender, envelope_recipient, header_sender,\n\t      header_recipient.\n\n       masquerade_domains\n\t      List of domains that hide their subdomain structure.\n\n       masquerade_exceptions\n\t      List of user names that are not subject to address masquerading.\n\n       mydestination\n\t      List of domains that this mail system considers local.\n\n       myorigin\n\t      The domain that is appended to locally-posted mail.\n\n       owner_request_special\n\t      Give special treatment to owner-xxx and xxx-request addresses.\n\n       remote_header_rewrite_domain\n\t      Don't rewrite message headers from remote clients at all when\n\t      this parameter is empty; otherwise, rewrite message headers and\n\t      append the specified domain name to incomplete addresses.\n\nSEE ALSO\n       cleanup(8), canonicalize and enqueue mail\n       postmap(1), Postfix lookup table manager\n       postconf(5), configuration parameters\n       virtual(5), virtual aliasing\n\nREADME FILES\n       Use \"postconf readme_directory\" or \"postconf html_directory\" to locate\n       this information.\n       DATABASE_README, Postfix lookup table overview\n       ADDRESS_REWRITING_README, address rewriting guide\n\nLICENSE\n       The Secure Mailer license must be distributed with this software.\n\nAUTHOR(S)\n       Wietse Venema\n       IBM T.J. Watson Research\n       P.O. Box 704\n       Yorktown Heights, NY 10598, USA\n\n       Wietse Venema\n       Google, Inc.\n       111 8th Avenue\n       New York, NY 10011, USA\n\n\t\t\t\t\t\t\t\t  CANONICAL(5)"
  manpageQuestion1: What is the primary purpose of the canonical(5) table in Postfix?
  manpageQuestion2: How can you use the canonical(5) table to replace login names with Firstname.Lastname format in email addresses?
  manpageQuestion3: What command would you use to query the canonical(5) table for a specific address and what does it do?

