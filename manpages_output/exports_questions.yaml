- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `exports`.\n\n\n\nManpage text:\n\nEXPORTS(5)\t\t      File Formats Manual\t\t    EXPORTS(5)\n\nNAME\n     exports â€“ define remote mount points for NFS mount requests\n\nSYNOPSIS\n     exports\n\nDESCRIPTION\n     The exports file specifies remote mount points for the NFS mount protocol\n     per the NFS server specification; see Network File System Protocol\n     Specification RFC 1094, Appendix A and NFS: Network File System Version 3\n     Specification, Appendix I.\n\n     Fields are separated by space or tab characters.  Lines that begin with a\n     # are considered comments and are ignored.\n\n     Each line in the file specifies one or more exported directories, any\n     additional mountable sub-directories within those directories, export\n     flags, and one or more hosts (if access to the export is to be\n     restricted).  All directories on the line must exist within the same\n     local file system.\n\n     Within a file system there may be several exported sub-directories with\n     different export options.\tHowever, none of those exported directories\n     may lie within another.\n\n     A host may be specified only once for each exported directory and there\n     may be only one default entry for each exported directory that applies to\n     all other hosts.  The latter exports the file system to the ``world'' and\n     should be used only when the file system contains public information.\n     Any attempt to export the same directory to a host with different export\n     options will cause the conflicting export entry to be rejected.\n\n     The first field(s) of an export entry is a list of directories on a local\n     file system to export.  At least one pathname must be to an exported\n     directory.  Other pathnames may refer to sub-directories of the exported\n     directory to indicate that hosts are also allowed to explicitly mount\n     those sub-directories of the exported directory.  (Note that the -alldirs\n     flag can be used to allow mounting any sub-directories of the pathnames\n     specified.)\n\n     Mount points for a file system may appear on multiple lines, each with\n     different sets of hosts and export options.\n\n     The pathnames must not have any symbolic links in them and should not\n     have any \".\" or \"..\" components.  Single and double quote characters\n     occuring in a pathname must be escaped with \\' and \\\", respectively.\n     Space characters occuring in a pathname must be escaped, or\n     alternatively, the pathname can be enclosed in single or double quotes.\n\n     Note that because an export entry only lists a set of pathnames, it is up\n     to the NFS server to correctly determine what file system is meant to be\n     exported by that entry.  To that end, the server will attempt to\n     intelligently decide which file system best matches the entry by\n     comparing all the pathnames with both the current list of mounted file\n     systems and the list of previously-exported file systems.\tIf the server\n     determines that the intended file system is not available, it will\n     automatically mark that export as offline until the file system becomes\n     available (see the -offline export option below for more info).  To avoid\n     any ambiguity, use of the -fs export option is recommended (see below).\n\n     The second component of a line specifies how the file system is to be\n     exported to the host set.\tThe option flags specify whether the file\n     system is exported read-only or read-write and how the client uid is\n     mapped to user credentials on the server.\n\n     Export options are specified as follows:\n\n     -maproot=user The credential of the specified user is used for remote\n     access by root.  The credential includes all the groups to which the user\n     is a member on the local machine ( see id(1) ). The user may be specified\n     by name or number.\n\n     -maproot=user:group1:group2:... The colon separated list is used to\n     specify the precise credential to be used for remote access by root.  The\n     elements of the list may be either names or numbers.  Note that ``user:''\n     should be used to distinguish a credential containing no groups from a\n     complete credential for that user.\n\n     -mapall=user or -mapall=user:group1:group2:... specifies a mapping for\n     all client uids (including root) using the same semantics as -maproot.\n\n     The option -r is a synonym for -maproot in an effort to be backward\n     compatible with older export file formats.\n\n     In the absence of -maproot and -mapall options, remote accesses by root\n     will result in using a credential of -2:-2.  All other users will be\n     mapped to their remote credential.  If a -maproot option is given, remote\n     access by root will be mapped to that credential instead of -2:-2.  If a\n     -mapall option is given, all users (including root) will be mapped to\n     that credential in place of their own.\n\n     The -alldirs flag allows the host(s) to mount at any point within the\n     file system, including regular files if the -R option is used on nfsd.\n\n     The -ro option specifies that the file system should be exported read-\n     only (default read/write).  The option -o is a synonym for -ro in an\n     effort to be backward compatible with older export file formats.\n\n     The -32bitclients option causes the NFS server to guarantee that\n     directory cookies will fit within 32 bits even though directory cookies\n     are 64 bits in NFSv3.  This option may be required with NFS clients that\n     do not properly support 64 bit directory cookies.\tUse of this option may\n     result in sub-optimal performance of the exported file system.\n\n     The -manglednames option causes the NFS server to guarantee that\n     filenames will fit into 255 bytes. For NFSv2 this is always the case. For\n     NFSv3 specifying this option on an export will cause filenames greater\n     than 255 characters from that export be mangled in such a way that when\n     the client presents a received mangled name it will refer to the same\n     name as the original name on the server.\n\n     -sec=mechanism1:mechanism2... This option specifies one or more security\n     mechanisms required for access to the exported directory.\tThe security\n     mechanisms currently supported are krb5p, krb5i, krb5, and sys.  Multiple\n     security mechanisms can be specified as a colon separated list, and\n     should be in the order of most preferred to least preferred.  In the\n     absence of this option, the security mechanism defaults to sys.\n\n     -offline This option specifies that the given export should be treated as\n     if the exported file system is not available.  For NFSv3, this will cause\n     clients to receive \"jukebox\" errors directing them to try the request\n     later.  For NFSv2 (which does not support this error value), the export\n     will be treated as non-existent and clients will receive stale file\n     handle errors.\n\n     -fspath=/path and/or -fsuuid=UUID These options can be used to specify\n     the pathname to and/or the UUID of the file system that is intended to be\n     exported.\tThis can be useful to disambiguate the export entry.  Since\n     the export syntax only specifies the path to the directory to be\n     exported, it can be ambiguous as to what file system is expected to be\n     exported.\tSpecifying \"/Volumes/XRAID\" can be interpreted as exporting\n     either a file system mounted on that directory or the \"Volumes/XRAID\"\n     subdirectory of the root file system.  Specifying -fspath=/Volumes/XRAID\n     can prevent exporting the wrong file system - for example, if the exports\n     are evaluated at a point when the directory exists but the volume has not\n     yet been mounted on it.  The export will fail if the file system referred\n     to in an export entry either (1) is not mounted at the same path as the\n     given -fspath=/path.  or (2) does not have a UUID that matches the given\n     -fsuuid=UUID.\n\n     The third component of a line specifies the host set to which the line\n     applies.  The set may be specified in three ways.\tThe first way is to\n     list the host name(s) separated by white space.  (Standard internet IPv4\n     ``dot'' addresses or IPv6 colon addresses may be used in place of names.)\n     The second way is to specify a ``netgroup'' as defined in the netgroup\n     file (see netgroup(5) ). The third way is to specify an internet sub-\n     network using a network and network mask that is defined as the set of\n     all hosts with addresses within the sub-network.  This latter approach\n     requires less overhead within the kernel and is recommended for cases\n     where the export line refers to a large number of clients within an\n     administrative sub-net.\n\n     The first two cases are specified by simply listing the name(s) separated\n     by whitespace.  All names are checked to see if they are ``netgroup''\n     names first and are assumed to be hostnames otherwise.  Using the full\n     domain specification for a hostname can normally circumvent the problem\n     of a host that has the same name as a netgroup.  The third case is\n     specified by the flag -network=netname and optionally -mask=netmask.  If\n     the mask is not specified, it will default to the mask for that network\n     class (A, B or C; see inet(5) ).\n\nEXAMPLES\n\t   /usr /usr/local -maproot=0:10 friends\n\t   /usr -maproot=daemon grumpy.cis.uoguelph.ca 131.104.48.16\n\t   /usr -ro -mapall=nobody\n\t   /u -maproot=bin: -network 131.104.48 -mask 255.255.255.0\n\t   /u1 -alldirs -network 2001:DB8:: -mask ffff:ffff::\n\t   /u2 -maproot=root friends\n\t   /u2 -alldirs -network cis-net -mask cis-mask\n\t   /Users -alldirs -network 2.29.96.0 -mask 255.255.255.0\n\t   /Applications -ro -network 2.29.96.0 -mask 255.255.255.0"
  manpageQuestion1: What is the primary purpose of the exports file in NFS configuration?
  manpageQuestion2: How would you configure the exports file to allow read-only access to /usr for a specific host, such as grumpy.cis.uoguelph.ca?
  manpageQuestion3: Can you provide an example of using the exports file to export a directory with all subdirectories and restrict access to a specific network?

- prompt: |-
    You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `exports`.



    Manpage text:

    Given that /usr, /u, /u1, /u2, and / are local file system mount points,
         the above example specifies the following:

         /usr is exported to hosts friends, where friends is specified in the
         netgroup file with users mapped to their remote credentials and root
         mapped to uid 0 and group 10.  It is exported read-write and the hosts in
         friends can mount either /usr or /usr/local.  It is exported to
         131.104.48.16 and grumpy.cis.uoguelph.ca with users mapped to their
         remote credentials and root mapped to the user and groups associated with
         ``daemon''; it is exported to the rest of the world as read-only with all
         users mapped to the user and groups associated with ``nobody''.

         /u is exported to all hosts on the sub-network 131.104.48 with root
         mapped to the uid for ``bin'' and with no group access.

         /u1 is exported to all hosts on the IPv6 sub-network 2001:DB8::

         /u2 is exported to the hosts in ``friends'' with root mapped to uid and
         groups associated with ``root''; it is exported to all hosts on network
         ``cis-net'' allowing mounts at any directory within /u2.
  manpageQuestion1: What is the primary purpose of the exports command in macOS?
  manpageQuestion2: How would you configure the exports command to export the /usr directory to hosts in the 'friends' netgroup with read-write access and root mapped to uid 0?
  manpageQuestion3: Can you provide an example of using the exports command to export the /u1 directory to all hosts on the IPv6 sub-network 2001:DB8::?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `exports`.\n\n\n\nManpage text:\n\nThe /Users and /Applications sub-directories of / are exported to all\n     hosts on the sub-network 2.29.96.\tAny directory within /Users can be\n     mounted.  /Users is exported read-write and /Applications is exported\n     read-only.\n\nFILES\n     /etc/exports  The default remote mount-point file.\n\nSEE ALSO\n     netgroup(5), nfsd(8), showmount(8) portmap(8)\n\nBUGS\n     It is recommended that all exported directories within the same server\n     file system be specified on adjacent lines going down the tree.  You\n     cannot specify a hostname that is also the name of a netgroup.\n     Specifying the full domain specification for a hostname can normally\n     circumvent the problem.\n\nmacOS 15.3\t\t       October 25, 2006 \t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the exports resource in macOS?
  manpageQuestion2: How would you configure the exports resource to allow read-write access to /Users for all hosts on the sub-network 2.29.96?
  manpageQuestion3: What is the recommended practice for specifying exported directories within the same server file system in the exports resource?

