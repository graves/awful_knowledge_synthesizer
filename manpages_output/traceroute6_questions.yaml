- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `traceroute6`.\n\n\n\nManpage text:\n\nTRACEROUTE6(8)\t\t    System Manager's Manual\t\tTRACEROUTE6(8)\n\nNAME\n     traceroute6 â€“ print the route IPv6 packets will take to a network node\n\nSYNOPSIS\n     traceroute6 [-adeEIlnNrTUv] [-f firsthop] [-g gateway] [-m hoplimit]\n\t\t [-p port] [-q probes] [-s src] [-t tclass] [-w waittime]\n\t\t target [datalen]\n\nDESCRIPTION\n     The traceroute6 utility uses the IPv6 protocol hop limit field to elicit\n     an ICMPv6 TIME_EXCEEDED response from each gateway along the path to some\n     host.\n\n     The only mandatory parameter is the destination host name or IPv6\n     address.  The default probe datagram carries 12 bytes of payload, in\n     addition to the IPv6 header.  The size of the payload can be specified by\n     giving a length (in bytes) after the destination host name.\n\n     TCP probes have no payload and the datalen parameter is ignored for TCP.\n\n     Other options are:\n\n     -a      Turn on AS# lookups for each hop encountered.\n\n     -A as_server\n\t     Turn on AS# lookups and use the given server instead of the\n\t     default."
  manpageQuestion1: What is the primary purpose of the traceroute6 command?
  manpageQuestion2: How can you use traceroute6 to trace the path of an IPv6 packet to a specific target address with a custom payload size?
  manpageQuestion3: What command-line options are available to configure traceroute6 for AS# lookups and specify a different server for these lookups?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `traceroute6`.\n\n\n\nManpage text:\n\n-d      Debug mode.\n\n     -e      Firewall evasion mode.  Use fixed destination ports for UDP and\n\t     TCP probes.  The destination port does NOT increment with each\n\t     packet sent.\n\n     -E      Detect ECN bleaching.  Set the IPTOS_ECN_ECT1 bit and report if\n\t     that value has been bleached or mangled.\n\n     -f firsthop\n\t     Specify how many hops to skip in trace.\n\n     -g gateway\n\t     Specify intermediate gateway ( traceroute6 uses routing header).\n\n     -I      Use ICMP6 ECHO instead of UDP datagrams.\n\n     -l      Print both host hostnames and numeric addresses.  Normally\n\t     traceroute6 prints only hostnames if -n is not specified, and\n\t     only numeric addresses if -n is specified.\n\n     -m hoplimit\n\t     Specify maximum hoplimit, up to 255.  The default is 30 hops.\n\n     -n      Do not resolve numeric address to hostname.\n\n     -N      Use a packet with no upper layer header for the probes, instead\n\t     of UDP datagrams.\n\n     -p port\n\t     Set UDP port number to port."
  manpageQuestion1: What is the primary purpose of the traceroute6 command?
  manpageQuestion2: How would you use traceroute6 to trace the route of a UDP packet with a specified port number and skip a certain number of hops?
  manpageQuestion3: Can you provide an example of using traceroute6 in debug mode to detect ECN bleaching on a specific destination?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `traceroute6`.\n\n\n\nManpage text:\n\n-q probes\n\t     Set the number of probe per hop count to probes.\n\n     -r      Bypass the normal routing tables and send directly to a host on\n\t     an attached network.  If the host is not on a directly-connected\n\t     network, an error is returned.  This option corresponds to the\n\t     SO_DONTROUTE socket option; it can be used to ping a local host\n\t     through an interface that has no route through it (e.g., after\n\t     the interface was dropped by a routing daemon).\n\n     -s src  Src specifies the source IPv6 address to be used.\n\n     -t tclass\n\t     tclass specifies the traffic class used when sending probe\n\t     packets.  The value must be a decimal integer in the range 0 to\n\t     255.  The default is 0.\n\n     -T      Use TCP segments for the probes.\n\n     -U      Use UDP datagrams for the probes.\tThis is the default.\n\n     -v      Be verbose.\n\n     -w waittime\n\t     Specify the delay time between probes.\n\n     This program prints the route to the given destination and the round-trip\n     time to each gateway, in the same manner as traceroute."
  manpageQuestion1: What is the primary purpose of the traceroute6 command?
  manpageQuestion2: How would you use traceroute6 to bypass the normal routing tables and send a probe directly to a host on an attached network?
  manpageQuestion3: Can you provide an example of using traceroute6 to set the number of probes per hop count to 5 and specify a source IPv6 address?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `traceroute6`.\n\n\n\nManpage text:\n\nHere is a list of possible annotations after the round-trip time for each\n     gateway:\n\n\t   !N\t   Destination Unreachable - No Route to Host.\n\n\t   !P\t   Destination Unreachable - Administratively Prohibited.\n\n\t   !S\t   Destination Unreachable - Not a Neighbour.\n\n\t   !A\t   Destination Unreachable - Address Unreachable.\n\n\t   !\t   This is printed if the hop limit is <= 1 on a port\n\t\t   unreachable message.  This means that the packet got to the\n\t\t   destination, but that the reply had a hop limit that was\n\t\t   just large enough to allow it to get back to the source of\n\t\t   the traceroute6.  This was more interesting in the IPv4\n\t\t   case, where some IP stack bugs could be identified by this\n\t\t   behaviour.\n\nRETURN VALUES\n     The traceroute6 utility will exit with 0 on success, and non-zero on\n     errors.\n\nSEE ALSO\n     ping(8), ping6(8), traceroute(8)\n\nHISTORY\n     The traceroute6 utility first appeared in WIDE hydrangea IPv6 protocol\n     stack kit.\n\nmacOS 15.3\t\t\t May 17, 1998\t\t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the traceroute6 command?
  manpageQuestion2: How can you use traceroute6 to troubleshoot an IPv6 connectivity issue between two hosts?
  manpageQuestion3: What does the '!' annotation in traceroute6 output indicate about a network path?

