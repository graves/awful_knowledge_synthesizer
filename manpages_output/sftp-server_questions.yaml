- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `sftp-server`.\n\n\n\nManpage text:\n\nSFTP-SERVER(8)\t\t    System Manager's Manual\t\tSFTP-SERVER(8)\n\nNAME\n     sftp-server – OpenSSH SFTP server subsystem\n\nSYNOPSIS\n     sftp-server [-ehR] [-d start_directory] [-f log_facility] [-l log_level]\n\t\t [-P denied_requests] [-p allowed_requests] [-u umask]\n     sftp-server -Q protocol_feature\n\nDESCRIPTION\n     sftp-server is a program that speaks the server side of SFTP protocol to\n     stdout and expects client requests from stdin.  sftp-server is not\n     intended to be called directly, but from sshd(8) using the Subsystem\n     option.\n\n     Command-line flags to sftp-server should be specified in the Subsystem\n     declaration.  See sshd_config(5) for more information.\n\n     Valid options are:\n\n     -d start_directory\n\t     Specifies an alternate starting directory for users.  The\n\t     pathname may contain the following tokens that are expanded at\n\t     runtime: %% is replaced by a literal '%', %d is replaced by the\n\t     home directory of the user being authenticated, and %u is\n\t     replaced by the username of that user.  The default is to use the\n\t     user's home directory.  This option is useful in conjunction with\n\t     the sshd_config(5) ChrootDirectory option."
  manpageQuestion1: What is the primary purpose of the sftp-server tool?
  manpageQuestion2: How would you configure sftp-server to start in a custom directory with the username and home directory tokens replaced?
  manpageQuestion3: Can you provide an example of using sftp-server with the -d option to restrict a user's access to their home directory?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `sftp-server`.\n\n\n\nManpage text:\n\n-e      Causes sftp-server to print logging information to stderr instead\n\t     of syslog for debugging.\n\n     -f log_facility\n\t     Specifies the facility code that is used when logging messages\n\t     from sftp-server.\tThe possible values are: DAEMON, USER, AUTH,\n\t     LOCAL0, LOCAL1, LOCAL2, LOCAL3, LOCAL4, LOCAL5, LOCAL6, LOCAL7.\n\t     The default is AUTH.\n\n     -h      Displays sftp-server usage information.\n\n     -l log_level\n\t     Specifies which messages will be logged by sftp-server.  The\n\t     possible values are: QUIET, FATAL, ERROR, INFO, VERBOSE, DEBUG,\n\t     DEBUG1, DEBUG2, and DEBUG3.  INFO and VERBOSE log transactions\n\t     that sftp-server performs on behalf of the client.  DEBUG and\n\t     DEBUG1 are equivalent.  DEBUG2 and DEBUG3 each specify higher\n\t     levels of debugging output.  The default is ERROR.\n\n     -P denied_requests\n\t     Specifies a comma-separated list of SFTP protocol requests that\n\t     are banned by the server.\tsftp-server will reply to any denied\n\t     request with a failure.  The -Q flag can be used to determine the\n\t     supported request types.  If both denied and allowed lists are\n\t     specified, then the denied list is applied before the allowed\n\t     list."
  manpageQuestion1: What is the primary purpose of the sftp-server tool?
  manpageQuestion2: How can you configure sftp-server to log debug information to stderr instead of syslog?
  manpageQuestion3: What command can you use to specify that sftp-server should log messages at the DEBUG level and use the LOCAL0 facility?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `sftp-server`.\n\n\n\nManpage text:\n\n-p allowed_requests\n\t     Specifies a comma-separated list of SFTP protocol requests that\n\t     are permitted by the server.  All request types that are not on\n\t     the allowed list will be logged and replied to with a failure\n\t     message.\n\n\t     Care must be taken when using this feature to ensure that\n\t     requests made implicitly by SFTP clients are permitted.\n\n     -Q protocol_feature\n\t     Queries protocol features supported by sftp-server.  At present\n\t     the only feature that may be queried is “requests”, which may be\n\t     used to deny or allow specific requests (flags -P and -p\n\t     respectively).\n\n     -R      Places this instance of sftp-server into a read-only mode.\n\t     Attempts to open files for writing, as well as other operations\n\t     that change the state of the filesystem, will be denied.\n\n     -u umask\n\t     Sets an explicit umask(2) to be applied to newly-created files\n\t     and directories, instead of the user's default mask.\n\n     On some systems, sftp-server must be able to access /dev/log for logging\n     to work, and use of sftp-server in a chroot configuration therefore\n     requires that syslogd(8) establish a logging socket inside the chroot\n     directory."
  manpageQuestion1: What is the primary purpose of the sftp-server tool?
  manpageQuestion2: How can you configure sftp-server to only allow specific SFTP protocol requests and log others?
  manpageQuestion3: What command can be used to place sftp-server in read-only mode and set an explicit umask for newly created files?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `sftp-server`.\n\n\n\nManpage text:\n\nSEE ALSO\n     sftp(1), ssh(1), sshd_config(5), sshd(8)\n\n     T. Ylonen and S. Lehtinen, SSH File Transfer Protocol, draft-ietf-secsh-\n     filexfer-02.txt, October 2001, work in progress material.\n\nHISTORY\n     sftp-server first appeared in OpenBSD 2.8.\n\nAUTHORS\n     Markus Friedl <markus@openbsd.org>\n\nmacOS 15.3\t\t\t July 27, 2021\t\t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the sftp-server resource?
  manpageQuestion2: How would you configure the sftp-server to allow remote users to access a specific directory?
  manpageQuestion3: Can you explain the relationship between sftp-server and the sshd_config file?

