- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `slapd-shell`.\n\n\n\nManpage text:\n\nSLAPD-SHELL(5)\t\t      File Formats Manual\t\tSLAPD-SHELL(5)\n\nNAME\n       slapd-shell - Shell backend to slapd\n\nSYNOPSIS\n       /etc/openldap/slapd.conf\n\nDESCRIPTION\n       The Shell backend to slapd(8) executes external programs to implement\n       operations, and is designed to make it easy to tie an existing database\n       to the slapd front-end.\n\n       This backend is primarily intended to be used in prototypes.\n\nWARNING\n       The abandon shell command has been removed since OpenLDAP 2.1.\n\nCONFIGURATION\n       These slapd.conf options apply to the SHELL backend database.  That is,\n       they must follow a \"database shell\" line and come before any subsequent\n       \"backend\" or \"database\" lines.  Other database options are described in\n       the slapd.conf(5) manual page.\n\n       These options specify the pathname and arguments of the program to\n       execute in response to the given LDAP operation.  Each option is\n       followed by the input lines that the program receives:\n\n       add <pathname> <argument>...\n\t      ADD\n\t      msgid: <message id>\n\t      <repeat { \"suffix:\" <database suffix DN> }>\n\t      <entry in LDIF format>\n\n       bind <pathname> <argument>...\n\t      BIND\n\t      msgid: <message id>\n\t      <repeat { \"suffix:\" <database suffix DN> }>\n\t      dn: <DN>\n\t      method: <method number>\n\t      credlen: <length of <credentials>>\n\t      cred: <credentials>\n\n       compare <pathname> <argument>...\n\t      COMPARE\n\t      msgid: <message id>\n\t      <repeat { \"suffix:\" <database suffix DN> }>\n\t      dn: <DN>\n\t      <attribute>: <value>\n\n       delete <pathname> <argument>...\n\t      DELETE\n\t      msgid: <message id>\n\t      <repeat { \"suffix:\" <database suffix DN> }>\n\t      dn: <DN>\n\n       modify <pathname> <argument>...\n\t      MODIFY\n\t      msgid: <message id>\n\t      <repeat { \"suffix:\" <database suffix DN> }>\n\t      dn: <DN>\n\t      <repeat {\n\t\t  <\"add\"/\"delete\"/\"replace\">: <attribute>\n\t\t  <repeat { <attribute>: <value> }>\n\t\t  -\n\t      }>\n\n       modrdn <pathname> <argument>...\n\t      MODRDN\n\t      msgid: <message id>\n\t      <repeat { \"suffix:\" <database suffix DN> }>\n\t      dn: <DN>\n\t      newrdn: <new RDN>\n\t      deleteoldrdn: <0 or 1>\n\t      <if new superior is specified: \"newSuperior: <DN>\">\n\n       search <pathname> <argument>...\n\t      SEARCH\n\t      msgid: <message id>\n\t      <repeat { \"suffix:\" <database suffix DN> }>\n\t      base: <base DN>\n\t      scope: <0-2, see ldap.h>\n\t      deref: <0-3, see ldap.h>\n\t      sizelimit: <size limit>\n\t      timelimit: <time limit>\n\t      filter: <filter>\n\t      attrsonly: <0 or 1>\n\t      attrs: <\"all\" or space-separated attribute list>\n\n       unbind <pathname> <argument>...\n\t      UNBIND\n\t      msgid: <message id>\n\t      <repeat { \"suffix:\" <database suffix DN> }>\n\t      dn: <bound DN>\n\n       Note that you need only supply configuration lines for those commands\n       you want the backend to handle.\tOperations for which a command is not\n       supplied will be refused with an \"unwilling to perform\" error.\n\n       The search command should output the entries in LDIF format, each entry\n       followed by a blank line, and after these the RESULT below.\n\n       All commands except unbind should then output:\n\t      RESULT\n\t      code: <integer>\n\t      matched: <matched DN>\n\t      info: <text>\n       where only the RESULT line is mandatory.  Lines starting with `#' or\n       `DEBUG:' are ignored.\n\nACCESS CONTROL\n       The shell backend does not honor all ACL semantics as described in\n       slapd.access(5).  In general, access to objects is checked by using a\n       dummy object that contains only the DN, so access rules that rely on\n       the contents of the object are not honored.  In detail:\n\n       The add operation does not require write (=w) access to the children\n       pseudo-attribute of the parent entry.\n\n       The bind operation requires auth (=x) access to the entry pseudo-\n       attribute of the entry whose identity is being assessed; auth (=x)\n       access to the credentials is not checked, but rather delegated to the\n       underlying shell script.\n\n       The compare operation requires read (=r) access (FIXME: wouldn't\n       compare (=c) be a more appropriate choice?)  to the entry pseudo-\n       attribute of the object whose value is being asserted; compare (=c)\n       access to the attribute whose value is being asserted is not checked.\n\n       The delete operation does not require write (=w) access to the children\n       pseudo-attribute of the parent entry.\n\n       The modify operation requires write (=w) access to the entry pseudo-\n       attribute; write (=w) access to the specific attributes that are\n       modified is not checked.\n\n       The modrdn operation does not require write (=w) access to the children\n       pseudo-attribute of the parent entry, nor to that of the new parent, if\n       different; write (=w) access to the distinguished values of the naming\n       attributes is not checked.\n\n       The search operation does not require search (=s) access to the entry\n       pseudo_attribute of the searchBase; search (=s) access to the\n       attributes and values used in the filter is not checked."
  manpageQuestion1: What is the primary purpose of the slapd-shell resource?
  manpageQuestion2: How would you configure slapd-shell to execute a custom script for the 'search' operation?
  manpageQuestion3: Can you provide an example of how to set up slapd-shell to handle the 'bind' operation with specific parameters?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `slapd-shell`.\n\n\n\nManpage text:\n\nEXAMPLE\n       There is an example search script in the slapd/back-shell/ directory in\n       the OpenLDAP source tree.\n\nLIMITATIONS\n       The shell backend does not support threaded environments.  When using\n       the shell backend, slapd(8) should be built --without-threads.\n\nFILES\n       /etc/openldap/slapd.conf\n\t      default slapd configuration file\n\nSEE ALSO\n       slapd.conf(5), slapd(8), sh(1).\n\nOpenLDAP 2.4.28 \t\t  2011/11/24\t\t\tSLAPD-SHELL(5)"
  manpageQuestion1: What is the primary purpose of the slapd-shell resource?
  manpageQuestion2: How is the shell backend used in OpenLDAP to execute external scripts?
  manpageQuestion3: What configuration file is typically used with the shell backend in OpenLDAP?

