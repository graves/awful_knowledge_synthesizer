- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `cups-config`.\n\n\n\nManpage text:\n\ncups-config(1)\t\t\t  Apple Inc.\t\t\tcups-config(1)\n\nNAME\n       cups-config - get cups api, compiler, directory, and link information.\n\nSYNOPSIS\n       cups-config --api-version\n       cups-config --build\n       cups-config --cflags\n       cups-config --datadir\n       cups-config --help\n       cups-config --ldflags\n       cups-config [ --image ] [ --static ] --libs\n       cups-config --serverbin\n       cups-config --serverroot\n       cups-config --version\n\nDESCRIPTION\n       The cups-config command allows application developers to determine the\n       necessary command-line options for the compiler and linker, as well as\n       the installation directories for filters, configuration files, and\n       drivers.  All values are reported to the standard output.\n\nOPTIONS\n       The cups-config command accepts the following command-line options:\n\n       --api-version\n\t    Reports the current API version (major.minor).\n\n       --build\n\t    Reports a system-specific build number.\n\n       --cflags\n\t    Reports the necessary compiler options."
  manpageQuestion1: What is the primary purpose of the cups-config tool?
  manpageQuestion2: How would you use cups-config to retrieve the necessary compiler flags for compiling a C program that interacts with CUPS?
  manpageQuestion3: Can you provide an example of using cups-config to get the server binary directory path?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `cups-config`.\n\n\n\nManpage text:\n\n--datadir\n\t    Reports the default CUPS data directory.\n\n       --help\n\t    Reports the program usage message.\n\n       --ldflags\n\t    Reports the necessary linker options.\n\n       --libs\n\t    Reports the necessary libraries to link to.\n\n       --serverbin\n\t    Reports the default CUPS binary directory, where filters and\n\t    backends are stored.\n\n       --serverroot\n\t    Reports the default CUPS configuration file directory.\n\n       --static\n\t    When used with --libs, reports the static libraries instead of the\n\t    default (shared) libraries.\n\n       --version\n\t    Reports the full version number of the CUPS installation\n\t    (major.minor.patch).\n\nEXAMPLES\n       Show the currently installed version of CUPS:\n\n\t   cups-config --version\n\n       Compile a simple one-file CUPS filter:\n\n\t   cc `cups-config --cflags --ldflags` -o filter filter.c \\\n\t       `cups-config --libs`\n\nDEPRECATED OPTIONS\n       The following options are deprecated but continue to work for backwards\n       compatibility:"
  manpageQuestion1: What is the primary purpose of the cups-config tool?
  manpageQuestion2: How can you compile a simple CUPS filter using the cups-config tool?
  manpageQuestion3: What command can be used to find the default CUPS data directory with cups-config?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `cups-config`.\n\n\n\nManpage text:\n\n--image\n\t    Formerly used to add the CUPS imaging library to the list of\n\t    libraries.\n\nSEE ALSO\n       cups(1), CUPS Online Help (http://localhost:631/help)\n\nCOPYRIGHT\n       Copyright Â© 2007-2019 by Apple Inc.\n\n26 April 2019\t\t\t     CUPS\t\t\tcups-config(1)"
  manpageQuestion1: What is the primary purpose of the cups-config tool?
  manpageQuestion2: How would you use the cups-config command to add the CUPS imaging library to the list of libraries?
  manpageQuestion3: Can you provide an example of using cups-config to check the current configuration settings?

