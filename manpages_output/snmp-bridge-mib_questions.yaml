- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `snmp-bridge-mib`.\n\n\n\nManpage text:\n\nSNMP-BRIDGE-MIB(1)\t\t   Net-SNMP\t\t    SNMP-BRIDGE-MIB(1)\n\nNAME\n       snmp-bridge-mib - provide Linux bridge information via SNMP\n\nSYNOPSIS\n       snmp-bridge-mib {bridge}\n\nARGUMENTS\n       The following arguments are required:\n\n       bridge\n\t   The name of the Linux bridge for which you want to provide\n\t   information via SNMP, e.g. br0.\n\nDESCRIPTION\n       The snmp-bridge-mib is an extension to net-snmp. It collects\n       information about a bridge in a Linux system and exports them for query\n       from other (remote) systems for management purposes.\n\nCONFIGURATION:\n       The preferred method of snmp-bridge-mib to attach to net-snmp is\n       agentx. For this to work, you will have to add the following line to\n       /etc/snmp/snmpd.conf,\n\n\t       master agentx\n\n\n       restart snmpd and start snmp-bridge-mib. snmp-bridge-mib will then\n       connect to the running snmpd daemon.\n\n       Another way of attaching snmp-bridge-mib to is to run it as an embedded\n       perl module. You have to add\n\n\t       perl do \"path to location of snmp-bridge-mib\""
  manpageQuestion1: What is the primary purpose of the snmp-bridge-mib tool?
  manpageQuestion2: How would you use snmp-bridge-mib to provide SNMP information for a Linux bridge named 'br0'?
  manpageQuestion3: Can you provide an example of configuring snmp-bridge-mib to work with the net-snmp agent using the agentx method?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `snmp-bridge-mib`.\n\n\n\nManpage text:\n\nand restart snmpd.\n\nEXAMPLE:\n       Follow the instructions in this manpage and type\n\n\t       perl /usr/bin/snmp-bridge-mib br0\n\n\n       You´ll get the following output:\n\n\t\tregistering at .1.3.6.1.2.1.17\n\t\trunning as a subagent.\n\t\tdot1qbridge agent started.\n\t\tNET-SNMP version 5.4.2.1 AgentX subagent connected\n\n\n       Now it´s time for a first test:\n\n\t       $ export MIBS=+BRIDGE-MIB\n\t       $ snmpwalk localhost .1.3.6.1.2.1.17\n\n\n       The output produced should look like\n\n\t       BRIDGE-MIB::dot1dStpBridgeHelloTime = INTEGER: 199 centi-seconds\n\t       BRIDGE-MIB::dot1dStpBridgeForwardDelay = INTEGER: 1499 centi-seconds\n\t       BRIDGE-MIB::dot1dStpPort.1 = INTEGER: 1\n\t       BRIDGE-MIB::dot1dStpPort.3 = INTEGER: 3\n\t       BRIDGE-MIB::dot1dStpPortPriority.1 = INTEGER: 32\n\t       BRIDGE-MIB::dot1dStpPortPriority.3 = INTEGER: 32\n\t       BRIDGE-MIB::dot1dStpPortState.1 = INTEGER: disabled(1)\n\t       BRIDGE-MIB::dot1dStpPortState.3 = INTEGER: disabled(1)\n\t       BRIDGE-MIB::dot1dStpPortEnable.1 = INTEGER: disabled(2)\n\t       BRIDGE-MIB::dot1dStpPortEnable.3 = INTEGER: disabled(2)\n\t       BRIDGE-MIB::dot1dStpPortPathCost.1 = INTEGER: 2\n\t       BRIDGE-MIB::dot1dStpPortPathCost.3 = INTEGER: 4\n\t       BRIDGE-MIB::dot1dStpPortDesignatedRoot.1 = STRING: \"8000.001018382c78\"\n\t       BRIDGE-MIB::dot1dStpPortDesignatedRoot.3 = STRING: \"8000.001018382c78\"\n\t       BRIDGE-MIB::dot1dStpPortDesignatedCost.1 = INTEGER: 0\n\t       BRIDGE-MIB::dot1dStpPortDesignatedCost.3 = INTEGER: 0\n\t       BRIDGE-MIB::dot1dStpPortDesignatedBridge.1 = STRING: \"8000.001018382c78\"\n\t       BRIDGE-MIB::dot1dStpPortDesignatedBridge.3 = STRING: \"8000.001018382c78\"\n\t       BRIDGE-MIB::dot1dStpPortDesignatedPort.1 = STRING: \"32769\"\n\t       BRIDGE-MIB::dot1dStpPortDesignatedPort.3 = STRING: \"32770\"\n\t       BRIDGE-MIB::dot1dStpPortPathCost32.1 = INTEGER: 2\n\t       BRIDGE-MIB::dot1dStpPortPathCost32.3 = INTEGER: 4\n\t       BRIDGE-MIB::dot1dTpLearnedEntryDiscards = Counter32: 0\n\t       BRIDGE-MIB::dot1dTpAgingTime = INTEGER: 300 seconds\n\t       BRIDGE-MIB::dot1dTpFdbAddress.´...8,x´ = STRING: 0:10:18:38:2c:78\n\t       BRIDGE-MIB::dot1dTpFdbAddress.´.!^/B|´ = STRING: 0:21:5e:2f:42:7c\n\t       BRIDGE-MIB::dot1dTpFdbPort.´...8,x´ = INTEGER: 1\n\t       BRIDGE-MIB::dot1dTpFdbPort.´.!^/B|´ = INTEGER: 3\n\t       BRIDGE-MIB::dot1dTpFdbStatus.´...8,x´ = INTEGER: learned(3)\n\t       BRIDGE-MIB::dot1dTpFdbStatus.´.!^/B|´ = INTEGER: learned(3)\n\t       BRIDGE-MIB::dot1dTpPort.1 = INTEGER: 1\n\t       BRIDGE-MIB::dot1dTpPort.3 = INTEGER: 3\n\t       BRIDGE-MIB::dot1dTpPortMaxInfo.1 = INTEGER: 1500 bytes\n\t       BRIDGE-MIB::dot1dTpPortMaxInfo.3 = INTEGER: 1500 bytes\n\t       BRIDGE-MIB::dot1dTpPortInFrames.1 = Counter32: 18082 frames\n\t       BRIDGE-MIB::dot1dTpPortInFrames.3 = Counter32: 1546072 frames\n\t       BRIDGE-MIB::dot1dTpPortOutFrames.1 = Counter32: 11601 frames\n\t       BRIDGE-MIB::dot1dTpPortOutFrames.3 = Counter32: 10988 frames\n\t       BRIDGE-MIB::dot1dTpPortInDiscards.1 = Counter32: 0 frames\n\t       BRIDGE-MIB::dot1dTpPortInDiscards.3 = Counter32: 0 frames"
  manpageQuestion1: What is the primary purpose of the snmp-bridge-mib tool?
  manpageQuestion2: How can you use snmp-bridge-mib to register the tool with the SNMP agent and then query bridge-related MIB information?
  manpageQuestion3: Can you provide an example of using snmp-bridge-mib to monitor the frame statistics for a specific network interface?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `snmp-bridge-mib`.\n\n\n\nManpage text:\n\nBUGS\n\t1. snmp-bridge-mib currently only supports one bridge which has to be\n\t   specified on the commandline.\n\n\t2. Not all elements of RFC 4188 because they are either not available\n\t   in sysfs or difficult to extract from the existing data.\n\nSEE ALSO\n       snmpd.conf(5), Net::SNMP(3)\n\nAUTHOR\n       Jens Osterkamp <jens@linux.vnet.ibm.com>\n\t   Developer\n\nCOPYRIGHT\n       Copyright © 2009, 2010 IBM Corp., All Rights Reserved\n\n       Permission is hereby granted, free of charge, to any person obtaining a\n       copy of this software and associated documentation files (the\n       \"Software\"), to deal in the Software without restriction, including\n       without limitation the rights to use, copy, modify, merge, publish,\n       distribute, sublicense, and/or sell copies of the Software, and to\n       permit persons to whom the Software is furnished to do so, subject to\n       the following conditions:\n\n       The above copyright notice and this permission notice shall be included\n       in all copies or substantial portions of the Software.\n\n       THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n       OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n       MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n       IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n       CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n       TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n       SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  manpageQuestion1: What is the primary purpose of the snmp-bridge-mib tool?
  manpageQuestion2: How would you use snmp-bridge-mib to configure a single bridge interface on a system?
  manpageQuestion3: What are the limitations of the snmp-bridge-mib tool as described in its manpage?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `snmp-bridge-mib`.\n\n\n\nManpage text:\n\nhttp://www.ibm.com/ v6\t\t  26 Mar 2010\t\t    SNMP-BRIDGE-MIB(1)"
  manpageQuestion1: What is the primary purpose of the snmp-bridge-mib tool?
  manpageQuestion2: How would you use snmp-bridge-mib to monitor the status of a network bridge interface?
  manpageQuestion3: Can you provide an example of using snmp-bridge-mib to retrieve information about the bridge's physical connections?

