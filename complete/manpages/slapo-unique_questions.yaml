- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `slapo-unique`.\n\n\n\nManpage text:\n\nSLAPO-UNIQUE(5) \t      File Formats Manual\t       SLAPO-UNIQUE(5)\n\nNAME\n       slapo-unique - Attribute Uniqueness overlay to slapd\n\nSYNOPSIS\n       /etc/openldap/slapd.conf\n\nDESCRIPTION\n       The Attribute Uniqueness overlay can be used with a backend database\n       such as slapd-bdb(5) to enforce the uniqueness of some or all\n       attributes within a scope. This subtree defaults to all objects within\n       the subtree of the database for which the Uniqueness overlay is\n       configured.\n\n       Uniqueness is enforced by searching the subtree to ensure that the\n       values of all attributes presented with an add, modify or modrdn\n       operation are unique within the scope.  For example, if uniqueness were\n       enforced for the uid attribute, the subtree would be searched for any\n       other records which also have a uid attribute containing the same\n       value. If any are found, the request is rejected.\n\n       The search is performed using the rootdn of the database, to avoid\n       issues with ACLs preventing the overlay from seeing all of the relevant\n       data. As such, the database must have a rootdn configured."
  manpageQuestion1: What is the primary purpose of the slapo-unique overlay?
  manpageQuestion2: How would you configure the slapo-unique overlay to enforce uniqueness on the 'mail' attribute within the entire database?
  manpageQuestion3: What is the effect of using the rootdn for the search when configuring slapo-unique?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `slapo-unique`.\n\n\n\nManpage text:\n\nCONFIGURATION\n       These slapd.conf options apply to the Attribute Uniqueness overlay.\n       They should appear after the overlay directive.\n\n       unique_uri <[strict ][ignore ]URI[URI...]...>\n\t      Configure the base, attributes, scope, and filter for uniqueness\n\t      checking.  Multiple URIs may be specified within a domain,\n\t      allowing complex selections of objects.  Multiple unique_uri\n\t      statements or olcUniqueURI attributes will create independent\n\t      domains, each with their own independent lists of URIs and\n\t      ignore/strict settings.\n\n\t      Keywords strict and ignore have to be enclosed in quotes (\")\n\t      together with the URI.\n\n\t      The LDAP URI syntax is a subset of RFC-4516, and takes the form:\n\n\t      ldap:///[base dn]?[attributes...]?scope[?filter]\n\n\t      The base dn defaults to that of the back-end database.\n\t      Specified base dns must be within the subtree of the back-end\n\t      database.\n\n\t      If no attributes are specified, the URI applies to all non-\n\t      operational attributes."
  manpageQuestion1: What is the primary purpose of the slapo-unique resource?
  manpageQuestion2: How would you configure the slapo-unique overlay to enforce uniqueness checks on the 'userPassword' attribute with a strict URI?
  manpageQuestion3: Can you provide an example of using the unique_uri configuration option to set up a uniqueness check for objects in the 'ou=People,dc=example,dc=com' base with a specific filter?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `slapo-unique`.\n\n\n\nManpage text:\n\nThe scope component is effectively mandatory, because LDAP URIs\n\t      default to base scope, which is not valid for uniqueness,\n\t      because groups of one object are always unique.  Scopes of sub\n\t      (for subtree) and one for one-level are valid.\n\n\t      The filter component causes the domain to apply uniqueness\n\t      constraints only to matching objects.  e.g.\n\t      ldap:///?cn?sub?(sn=e*) would require unique cn attributes for\n\t      all objects in the subtree of the back-end database whose sn\n\t      starts with an e.\n\n\t      It is possible to assert uniqueness upon all non-operational\n\t      attributes except those listed by prepending the keyword ignore\n\t      If not configured, all non-operational (e.g., system) attributes\n\t      must be unique. Note that the attributes list of an ignore URI\n\t      should generally contain the objectClass, dc, ou and o\n\t      attributes, as these will generally not be unique, nor are they\n\t      operational attributes.\n\n\t      It is possible to set strict checking for the uniqueness domain\n\t      by prepending the keyword strict.  By default, uniqueness is not\n\t      enforced for null values. Enabling strict mode extends the\n\t      concept of uniqueness to include null values, such that only one\n\t      attribute within a subtree will be allowed to have a null value.\n\t      Strictness applies to all URIs within a uniqueness domain, but\n\t      some domains may be strict while others are not."
  manpageQuestion1: What is the primary purpose of the slapo-unique module in LDAP?
  manpageQuestion2: How can you configure slapo-unique to enforce uniqueness constraints on a specific subtree based on a filter?
  manpageQuestion3: What is the correct syntax to set strict uniqueness checking for a particular LDAP domain using slapo-unique?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `slapo-unique`.\n\n\n\nManpage text:\n\nIt is not possible to set both URIs and legacy slapo-unique\n       configuration parameters simultaneously. In general, the legacy\n       configuration options control pieces of a single unfiltered subtree\n       domain.\n\n       unique_base <basedn>\n\t      This legacy configuration parameter should be converted to the\n\t      base dn component of the above unique_uri style of parameter.\n\n       unique_ignore <attribute...>\n\t      This legacy configuration parameter should be converted to a\n\t      unique_uri parameter with ignore keyword as described above.\n\n       unique_attributes <attribute...>\n\t      This legacy configuration parameter should be converted to a\n\t      unique_uri parameter, as described above.\n\n       unique_strict <attribute...>\n\t      This legacy configuration parameter should be converted to a\n\t      strict keyword prepended to a unique_uri parameter, as described\n\t      above.\n\nCAVEATS\n       unique_uri cannot be used with the old-style of configuration, and vice\n       versa.  unique_uri can implement everything the older system can do,\n       however."
  manpageQuestion1: What is the primary purpose of the slapo-unique resource in an LDAP server configuration?
  manpageQuestion2: How can you convert the legacy unique_ignore parameter to the new unique_uri format?
  manpageQuestion3: What is the correct way to transition from using the legacy unique_attributes parameter to the new unique_uri parameter?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `slapo-unique`.\n\n\n\nManpage text:\n\nTypical attributes for the ignore ldap:///...  URIs are intentionally\n       not hardcoded into the overlay to allow for maximum flexibility in\n       meeting site-specific requirements.\n\n       Replication and operations with manageDsaIt control are allowed to\n       bypass this enforcement. It is therefore important that all servers\n       accepting writes have this overlay configured in order to maintain\n       uniqueness in a replicated DIT.\n\nFILES\n       /etc/openldap/slapd.conf\n\t      default slapd configuration file\n\nSEE ALSO\n       slapd.conf(5), slapd-config(5).\n\nOpenLDAP 2.4.28 \t\t  2011/11/24\t\t       SLAPO-UNIQUE(5)"
  manpageQuestion1: What is the primary purpose of the slapo-unique overlay?
  manpageQuestion2: How would you configure the slapo-unique overlay in the slapd.conf file to enforce uniqueness on a specific attribute?
  manpageQuestion3: What is the significance of ensuring that all servers accepting writes have the slapo-unique overlay configured in a replicated DIT?

