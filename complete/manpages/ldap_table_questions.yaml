- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nLDAP_TABLE(5)\t\t      File Formats Manual\t\t LDAP_TABLE(5)"
  manpageQuestion1: What is the primary purpose of the ldap_table resource?
  manpageQuestion2: How can you use the ldap_table to define a mapping between LDAP attributes and their corresponding values?
  manpageQuestion3: What is the structure of an ldap_table file and how do you specify different data types for each attribute?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nNAME\n       ldap_table - Postfix LDAP client configuration\n\nSYNOPSIS\n       postmap -q \"string\" ldap:/etc/postfix/filename\n\n       postmap -q - ldap:/etc/postfix/filename <inputfile\n\nDESCRIPTION\n       The Postfix mail system uses optional tables for address rewriting or\n       mail routing. These tables are usually in dbm or db format.\n\n       Alternatively, lookup tables can be specified as LDAP databases.\n\n       In order to use LDAP lookups, define an LDAP source as a lookup table\n       in main.cf, for example:\n\n\t   alias_maps = ldap:/etc/postfix/ldap-aliases.cf\n\n       The file /etc/postfix/ldap-aliases.cf has the same format as the\n       Postfix main.cf file, and can specify the parameters described below.\n       An example is given at the end of this manual.\n\n       This configuration method is available with Postfix version 2.1 and\n       later.  See the section \"OBSOLETE MAIN.CF PARAMETERS\" below for older\n       Postfix versions.\n\n       For details about LDAP SSL and STARTTLS, see the section on SSL and\n       STARTTLS below."
  manpageQuestion1: What is the primary purpose of the ldap_table resource?
  manpageQuestion2: How would you configure Postfix to use an LDAP-based alias table using the ldap_table resource?
  manpageQuestion3: Can you provide an example of how to query an LDAP table using the ldap_table resource with input from a file?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nLIST MEMBERSHIP\n       When using LDAP to store lists such as $mynetworks, $mydestination,\n       $relay_domains, $local_recipient_maps, etc., it is important to\n       understand that the table must store each list member as a separate\n       key. The table lookup verifies the *existence* of the key. See \"Postfix\n       lists versus tables\" in the DATABASE_README document for a discussion.\n\n       Do NOT create tables that return the full list of domains in\n       $mydestination or $relay_domains etc., or IP addresses in $mynetworks.\n\n       DO create tables with each matching item as a key and with an arbitrary\n       value. With LDAP databases it is not uncommon to return the key itself.\n\n       For example, NEVER do this in a map defining $mydestination:\n\n\t   query_filter = domain=*\n\t   result_attribute = domain\n\n       Do this instead:\n\n\t   query_filter = domain=%s\n\t   result_attribute = domain\n\nGENERAL LDAP PARAMETERS\n       In the text below, default values are given in parentheses.  Note:\n       don't use quotes in these variables; at least, not until the Postfix\n       configuration routines understand how to deal with quoted strings."
  manpageQuestion1: What is the primary purpose of the ldap_table resource in Postfix?
  manpageQuestion2: How should a table be structured to correctly store list members for LDAP in Postfix?
  manpageQuestion3: What is the correct way to configure an ldap_table for $mydestination in Postfix?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nserver_host (default: localhost)\n\t      The name of the host running the LDAP server, e.g.\n\n\t\t  server_host = ldap.example.com\n\n\t      Depending on the LDAP client library you're using, it should be\n\t      possible to specify multiple servers here, with the library\n\t      trying them in order should the first one fail. It should also\n\t      be possible to give each server in the list a different port\n\t      (overriding server_port below), by naming them like\n\n\t\t  server_host = ldap.example.com:1444\n\n\t      With OpenLDAP, a (list of) LDAP URLs can be used to specify both\n\t      the hostname(s) and the port(s):\n\n\t\t  server_host = ldap://ldap.example.com:1444\n\t\t\t      ldap://ldap2.example.com:1444\n\n\t      All LDAP URLs accepted by the OpenLDAP library are supported,\n\t      including connections over UNIX domain sockets, and LDAP SSL\n\t      (the last one provided that OpenLDAP was compiled with support\n\t      for SSL):\n\n\t\t  server_host = ldapi://%2Fsome%2Fpath\n\t\t\t      ldaps://ldap.example.com:636"
  manpageQuestion1: What is the primary purpose of the ldap_table resource?
  manpageQuestion2: How would you configure the ldap_table to connect to multiple LDAP servers with different ports?
  manpageQuestion3: Can you provide an example of using ldap_table to connect to an LDAP server over an UNIX domain socket?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nserver_port (default: 389)\n\t      The port the LDAP server listens on, e.g.\n\n\t\t  server_port = 778\n\n       timeout (default: 10 seconds)\n\t      The number of seconds a search can take before timing out, e.g.\n\n\t\t  timeout = 5\n\n       search_base (No default; you must configure this)\n\t      The RFC2253 base DN at which to conduct the search, e.g.\n\n\t\t  search_base = dc=your, dc=com\n\n\t      With Postfix 2.2 and later this parameter supports the following\n\t      '%' expansions:\n\n\t      %%     This is replaced by a literal '%' character.\n\n\t      %s     This is replaced by the input key.  RFC 2253 quoting is\n\t\t     used to make sure that the input key does not add\n\t\t     unexpected metacharacters.\n\n\t      %u     When the input key is an address of the form user@domain,\n\t\t     %u is replaced by the (RFC 2253) quoted local part of the\n\t\t     address.  Otherwise, %u is replaced by the entire search\n\t\t     string.  If the localpart is empty, the search is\n\t\t     suppressed and returns no results."
  manpageQuestion1: What is the primary purpose of the ldap_table resource?
  manpageQuestion2: How would you configure the ldap_table resource to search for entries in a domain with a custom port and timeout?
  manpageQuestion3: Can you provide an example of using the ldap_table resource to search for entries in a domain with dynamic substitution of input keys?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\n%d     When the input key is an address of the form user@domain,\n\t\t     %d is replaced by the (RFC 2253) quoted domain part of\n\t\t     the address.  Otherwise, the search is suppressed and\n\t\t     returns no results.\n\n\t      %[SUD] For the search_base parameter, the upper-case equivalents\n\t\t     of the above expansions behave identically to their\n\t\t     lower-case counter-parts. With the result_format\n\t\t     parameter (previously called result_filter see the\n\t\t     COMPATIBILITY section and below), they expand to the\n\t\t     corresponding components of input key rather than the\n\t\t     result value.\n\n\t      %[1-9] The patterns %1, %2, ... %9 are replaced by the\n\t\t     corresponding most significant component of the input\n\t\t     key's domain. If the input key is user@mail.example.com,\n\t\t     then %1 is com, %2 is example and %3 is mail. If the\n\t\t     input key is unqualified or does not have enough domain\n\t\t     components to satisfy all the specified patterns, the\n\t\t     search is suppressed and returns no results."
  manpageQuestion1: What is the primary purpose of the ldap_table resource?
  manpageQuestion2: How can you use the ldap_table resource to extract the domain part of an email address like user@domain.com?
  manpageQuestion3: Can you provide an example of using the ldap_table resource to retrieve specific domain components from an input key such as unqualified@domain.com?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nquery_filter (default: mailacceptinggeneralid=%s)\n\t      The RFC2254 filter used to search the directory, where %s is a\n\t      substitute for the address Postfix is trying to resolve, e.g.\n\n\t\t  query_filter = (&(mail=%s)(paid_up=true))\n\n\t      This parameter supports the following '%' expansions:\n\n\t      %%     This is replaced by a literal '%' character. (Postfix 2.2\n\t\t     and later).\n\n\t      %s     This is replaced by the input key.  RFC 2254 quoting is\n\t\t     used to make sure that the input key does not add\n\t\t     unexpected metacharacters.\n\n\t      %u     When the input key is an address of the form user@domain,\n\t\t     %u is replaced by the (RFC 2254) quoted local part of the\n\t\t     address.  Otherwise, %u is replaced by the entire search\n\t\t     string.  If the localpart is empty, the search is\n\t\t     suppressed and returns no results.\n\n\t      %d     When the input key is an address of the form user@domain,\n\t\t     %d is replaced by the (RFC 2254) quoted domain part of\n\t\t     the address.  Otherwise, the search is suppressed and\n\t\t     returns no results."
  manpageQuestion1: What is the primary purpose of the ldap_table resource in Postfix?
  manpageQuestion2: How would you configure the query_filter parameter in ldap_table to search for an email address where the local part is 'john' and the domain is 'example.com'?
  manpageQuestion3: Can you provide an example of using the %u and %d placeholders in the query_filter parameter to construct a search for an email address like 'jane.doe@example.com'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\n%[SUD] The upper-case equivalents of the above expansions behave\n\t\t     in the query_filter parameter identically to their\n\t\t     lower-case counter-parts. With the result_format\n\t\t     parameter (previously called result_filter see the\n\t\t     COMPATIBILITY section and below), they expand to the\n\t\t     corresponding components of input key rather than the\n\t\t     result value.\n\n\t\t     The above %S, %U and %D expansions are available with\n\t\t     Postfix 2.2 and later.\n\n\t      %[1-9] The patterns %1, %2, ... %9 are replaced by the\n\t\t     corresponding most significant component of the input\n\t\t     key's domain. If the input key is user@mail.example.com,\n\t\t     then %1 is com, %2 is example and %3 is mail. If the\n\t\t     input key is unqualified or does not have enough domain\n\t\t     components to satisfy all the specified patterns, the\n\t\t     search is suppressed and returns no results.\n\n\t\t     The above %1, ..., %9 expansions are available with\n\t\t     Postfix 2.2 and later.\n\n\t      The \"domain\" parameter described below limits the input keys to\n\t      addresses in matching domains. When the \"domain\" parameter is\n\t      non-empty, LDAP queries for unqualified addresses or addresses\n\t      in non-matching domains are suppressed and return no results."
  manpageQuestion1: What is the primary purpose of the ldap_table resource?
  manpageQuestion2: How would you use the ldap_table resource to extract the domain component from an email address like user@mail.example.com?
  manpageQuestion3: Can you provide an example of using the ldap_table resource to search for addresses in a specific domain, such as example.com?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nNOTE: DO NOT put quotes around the query_filter parameter.\n\n       result_format (default: %s)\n\t      Called result_filter in Postfix releases prior to 2.2.  Format\n\t      template applied to result attributes. Most commonly used to\n\t      append (or prepend) text to the result. This parameter supports\n\t      the following '%' expansions:\n\n\t      %%     This is replaced by a literal '%' character. (Postfix 2.2\n\t\t     and later).\n\n\t      %s     This is replaced by the value of the result attribute.\n\t\t     When result is empty it is skipped.\n\n\t      %u     When the result attribute value is an address of the form\n\t\t     user@domain, %u is replaced by the local part of the\n\t\t     address. When the result has an empty localpart it is\n\t\t     skipped.\n\n\t      %d     When a result attribute value is an address of the form\n\t\t     user@domain, %d is replaced by the domain part of the\n\t\t     attribute value. When the result is unqualified it is\n\t\t     skipped.\n\n\t      %[SUD1-9]\n\t\t     The upper-case and decimal digit expansions interpolate\n\t\t     the parts of the input key rather than the result. Their\n\t\t     behavior is identical to that described with\n\t\t     query_filter, and in fact because the input key is known\n\t\t     in advance, lookups whose key does not contain all the\n\t\t     information specified in the result template are\n\t\t     suppressed and return no results."
  manpageQuestion1: What is the primary purpose of the ldap_table resource?
  manpageQuestion2: How would you format the result of an ldap_table lookup to display only the local part of an email address?
  manpageQuestion3: Can you provide an example of using the ldap_table resource to format a result attribute with both the local part and domain part of an email address?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nThe above %S, %U, %D and %1, ..., %9 expansions are\n\t\t     available with Postfix 2.2 and later.\n\n\t      For example, using \"result_format = smtp:[%s]\" allows one to use\n\t      a mailHost attribute as the basis of a transport(5) table. After\n\t      applying the result format, multiple values are concatenated as\n\t      comma separated strings. The expansion_limit and size_limit\n\t      parameters explained below allow one to restrict the number of\n\t      values in the result, which is especially useful for maps that\n\t      should return a single value.\n\n\t      The default value %s specifies that each attribute value should\n\t      be used as is.\n\n\t      This parameter was called result_filter in Postfix releases\n\t      prior to 2.2. If no \"result_format\" is specified, the value of\n\t      \"result_filter\" will be used instead before resorting to the\n\t      default value. This provides compatibility with old\n\t      configuration files.\n\n\t      NOTE: DO NOT put quotes around the result format!"
  manpageQuestion1: What is the primary purpose of the ldap_table resource in Postfix?
  manpageQuestion2: How can you configure ldap_table to use a mailHost attribute as the basis for a transport table with a custom result format?
  manpageQuestion3: What is the difference between using 'result_format' and 'result_filter' in ldap_table configuration?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\ndomain (default: no domain list)\n\t      This is a list of domain names, paths to files, or dictionaries.\n\t      When specified, only fully qualified search keys with a\n\t      *non-empty* localpart and a matching domain are eligible for\n\t      lookup: 'user' lookups, bare domain lookups and \"@domain\"\n\t      lookups are not performed. This can significantly reduce the\n\t      query load on the LDAP server.\n\n\t\t  domain = postfix.org, hash:/etc/postfix/searchdomains\n\n\t      It is best not to use LDAP to store the domains eligible for\n\t      LDAP lookups.\n\n\t      NOTE: DO NOT define this parameter for local(8) aliases.\n\n\t      This feature is available in Postfix 1.0 and later.\n\n       result_attribute (default: maildrop)\n\t      The attribute(s) Postfix will read from any directory entries\n\t      returned by the lookup, to be resolved to an email address.\n\n\t\t  result_attribute = mailbox, maildrop\n\n\t      Don't rely on the default value (\"maildrop\"). Set the\n\t      result_attribute explicitly in all ldap table configuration\n\t      files. This is particularly relevant when no result_attribute is\n\t      applicable, e.g. cases in which leaf_result_attribute and/or\n\t      terminal_result_attribute are used instead. The default value is\n\t      harmless if \"maildrop\" is also listed as a leaf or terminal\n\t      result attribute, but it is best to not leave this to chance."
  manpageQuestion1: What is the primary purpose of the ldap_table resource in Postfix?
  manpageQuestion2: How would you configure the ldap_table to only search specific domains and use multiple result attributes for email address resolution?
  manpageQuestion3: What is the recommended practice for setting the result_attribute parameter in ldap_table configuration files?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nspecial_result_attribute (default: empty)\n\t      The attribute(s) of directory entries that can contain DNs or\n\t      RFC 2255 LDAP URLs. If found, a recursive search is performed to\n\t      retrieve the entry referenced by the DN, or the entries matched\n\t      by the URL query.\n\n\t\t  special_result_attribute = memberdn\n\n\t      DN recursion retrieves the same result_attributes as the main\n\t      query, including the special attributes for further recursion.\n\n\t      URL processing retrieves only those attributes that are included\n\t      in both the URL definition and as result attributes (ordinary,\n\t      special, leaf or terminal) in the Postfix table definition.  If\n\t      the URL lists any of the table's special result attributes,\n\t      these are retrieved and used recursively. A URL that does not\n\t      specify any attribute selection, is equivalent (RFC 2255) to a\n\t      URL that selects all attributes, in which case the selected\n\t      attributes will be the full set of result attributes in the\n\t      Postfix table."
  manpageQuestion1: What is the primary purpose of the ldap_table resource?
  manpageQuestion2: How can the ldap_table be configured to recursively retrieve entries referenced by DNs in directory searches?
  manpageQuestion3: What is the effect of specifying a URL without any attribute selection in the ldap_table configuration?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nIf an LDAP URL attribute-descriptor or the corresponding Postfix\n\t      LDAP table result attribute (but not both) uses RFC 2255\n\t      sub-type options (\"attr;option\"), the attribute requested from\n\t      the LDAP server will include the sub-type option. In all other\n\t      cases, the URL attribute and the table attribute must match\n\t      exactly. Attributes with options in both the URL and the Postfix\n\t      table are requested only when the options are identical. LDAP\n\t      attribute-descriptor options are very rarely used, most LDAP\n\t      users will not need to concern themselves with this level of\n\t      nuanced detail.\n\n       terminal_result_attribute (default: empty)\n\t      When one or more terminal result attributes are found in an LDAP\n\t      entry, all other result attributes are ignored and only the\n\t      terminal result attributes are returned. This is useful for\n\t      delegating expansion of group members to a particular host, by\n\t      using an optional \"maildrop\" attribute on selected groups to\n\t      route the group to a specific host, where the group is expanded,\n\t      possibly via mailing-list manager or other special processing."
  manpageQuestion1: What is the primary purpose of the ldap_table resource?
  manpageQuestion2: How would you configure the ldap_table to return only terminal result attributes such as 'maildrop' when querying an LDAP entry?
  manpageQuestion3: Under what conditions would the ldap_table resource ensure that attribute options in the LDAP URL and Postfix table are identical?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nresult_attribute =\n\t\t  terminal_result_attribute = maildrop\n\n\t      When using terminal and/or leaf result attributes, the\n\t      result_attribute is best set to an empty value when it is not\n\t      used, or else explicitly set to the desired value, even if it is\n\t      the default value \"maildrop\".\n\n\t      This feature is available with Postfix 2.4 or later.\n\n       leaf_result_attribute (default: empty)\n\t      When one or more special result attributes are found in a\n\t      non-terminal (see above) LDAP entry, leaf result attributes are\n\t      excluded from the expansion of that entry. This is useful when\n\t      expanding groups and the desired mail address attribute(s) of\n\t      the member objects obtained via DN or URI recursion are also\n\t      present in the group object. To only return the attribute values\n\t      from the leaf objects and not the containing group, add the\n\t      attribute to the leaf_result_attribute list, and not the\n\t      result_attribute list, which is always expanded. Note, the\n\t      default value of \"result_attribute\" is not empty, you may want\n\t      to set it explicitly empty when using \"leaf_result_attribute\" to\n\t      expand the group to a list of member DN addresses. If groups\n\t      have both member DN references AND attributes that hold multiple\n\t      string valued rfc822 addresses, then the string attributes go in\n\t      \"result_attribute\".  The attributes that represent the email\n\t      addresses of objects referenced via a DN (or LDAP URI) go in\n\t      \"leaf_result_attribute\"."
  manpageQuestion1: What is the primary purpose of the ldap_table resource in macOS?
  manpageQuestion2: How can you configure ldap_table to ensure that only the maildrop attribute is used for result attributes when processing LDAP entries?
  manpageQuestion3: What is the correct way to specify email addresses from leaf objects in ldap_table to avoid including attributes from the containing group?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nresult_attribute = memberaddr\n\t\t  special_result_attribute = memberdn\n\t\t  terminal_result_attribute = maildrop\n\t\t  leaf_result_attribute = mail\n\n\t      When using terminal and/or leaf result attributes, the\n\t      result_attribute is best set to an empty value when it is not\n\t      used, or else explicitly set to the desired value, even if it is\n\t      the default value \"maildrop\".\n\n\t      This feature is available with Postfix 2.4 or later.\n\n       scope (default: sub)\n\t      The LDAP search scope: sub, base, or one.  These translate into\n\t      LDAP_SCOPE_SUBTREE, LDAP_SCOPE_BASE, and LDAP_SCOPE_ONELEVEL.\n\n       bind (default: yes)\n\t      Whether or how to bind to the LDAP server. Newer LDAP\n\t      implementations don't require clients to bind, which saves time.\n\t      Example:\n\n\t\t  # Don't bind\n\t\t  bind = no\n\t\t  # Use SIMPLE bind\n\t\t  bind = yes\n\t\t  # Use SASL bind\n\t\t  bind = sasl\n\n\t      Postfix versions prior to 2.8 only support \"bind = no\" which\n\t      means don't bind, and \"bind = yes\" which means do a SIMPLE bind.\n\t      Postfix 2.8 and later also supports \"bind = SASL\" when compiled\n\t      with LDAP SASL support as described in LDAP_README, it also adds\n\t      the synonyms \"bind = none\" and \"bind = simple\" for \"bind = no\"\n\t      and \"bind = yes\" respectively. See the SASL section below for\n\t      additional parameters available with \"bind = sasl\"."
  manpageQuestion1: What is the primary purpose of the ldap_table resource in Postfix?
  manpageQuestion2: How would you configure Postfix to perform an LDAP search with a scope of 'one' and without binding to the LDAP server?
  manpageQuestion3: Can you provide an example of using the ldap_table with SASL authentication to retrieve user maildrop information from an LDAP directory?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nIf you do need to bind, you might consider configuring Postfix\n\t      to connect to the local machine on a port that's an SSL tunnel\n\t      to your LDAP server. If your LDAP server doesn't natively\n\t      support SSL, put a tunnel (wrapper, proxy, whatever you want to\n\t      call it) on that system too. This should prevent the password\n\t      from traversing the network in the clear.\n\n       bind_dn (default: empty)\n\t      If you do have to bind, do it with this distinguished name.\n\t      Example:\n\n\t\t  bind_dn = uid=postfix, dc=your, dc=com\n\t      With \"bind = sasl\" (see above) the DN may be optional for some\n\t      SASL mechanisms, don't specify a DN if not needed.\n\n       bind_pw (default: empty)\n\t      The password for the distinguished name above. If you have to\n\t      use this, you probably want to make the map configuration file\n\t      readable only by the Postfix user. When using the obsolete\n\t      ldap:ldapsource syntax, with map parameters in main.cf, it is\n\t      not possible to securely store the bind password. This is\n\t      because main.cf needs to be world readable to allow local\n\t      accounts to submit mail via the sendmail command. Example:"
  manpageQuestion1: What is the primary purpose of the ldap_table resource?
  manpageQuestion2: How would you configure Postfix to use an LDAP server with SSL encryption?
  manpageQuestion3: What is the recommended approach for securely storing the bind password in an LDAP configuration?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nbind_pw = postfixpw\n\t      With \"bind = sasl\" (see above) the password may be optional for\n\t      some SASL mechanisms, don't specify a password if not needed.\n\n       cache (IGNORED with a warning)\n\n       cache_expiry (IGNORED with a warning)\n\n       cache_size (IGNORED with a warning)\n\t      The above parameters are NO LONGER SUPPORTED by Postfix.\tCache\n\t      support has been dropped from OpenLDAP as of release 2.1.13.\n\n       recursion_limit (default: 1000)\n\t      A limit on the nesting depth of DN and URL special result\n\t      attribute evaluation. The limit must be a non-zero positive\n\t      number.\n\n       expansion_limit (default: 0)\n\t      A limit on the total number of result elements returned (as a\n\t      comma separated list) by a lookup against the map.  A setting of\n\t      zero disables the limit. Lookups fail with a temporary error if\n\t      the limit is exceeded.  Setting the limit to 1 ensures that\n\t      lookups do not return multiple values.\n\n       size_limit (default: $expansion_limit)\n\t      A limit on the number of LDAP entries returned by any single\n\t      LDAP search performed as part of the lookup. A setting of 0\n\t      disables the limit.  Expansion of DN and URL references involves\n\t      nested LDAP queries, each of which is separately subjected to\n\t      this limit."
  manpageQuestion1: What is the primary purpose of the ldap_table resource?
  manpageQuestion2: How would you configure the recursion limit for LDAP lookups in ldap_table?
  manpageQuestion3: What is the default value for the expansion_limit parameter in ldap_table?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nNote: even a single LDAP entry can generate multiple lookup\n\t      results, via multiple result attributes and/or multi-valued\n\t      result attributes. This limit caps the per search resource\n\t      utilization on the LDAP server, not the final multiplicity of\n\t      the lookup result. It is analogous to the \"-z\" option of\n\t      \"ldapsearch\".\n\n       dereference (default: 0)\n\t      When to dereference LDAP aliases. (Note that this has nothing do\n\t      with Postfix aliases.) The permitted values are those legal for\n\t      the OpenLDAP/UM LDAP implementations:\n\n\t      0      never\n\n\t      1      when searching\n\n\t      2      when locating the base object for the search\n\n\t      3      always\n\n\t      See ldap.h or the ldap_open(3) or ldapsearch(1) man pages for\n\t      more information. And if you're using an LDAP package that has\n\t      other possible values, please bring it to the attention of the\n\t      postfix-users@postfix.org mailing list.\n\n       chase_referrals (default: 0)\n\t      Sets (or clears) LDAP_OPT_REFERRALS (requires LDAP version 3\n\t      support)."
  manpageQuestion1: What is the primary purpose of the ldap_table resource?
  manpageQuestion2: How would you configure ldap_table to dereference LDAP aliases when performing a search?
  manpageQuestion3: Can you explain how to set ldap_table to follow referrals during LDAP operations?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nversion (default: 2)\n\t      Specifies the LDAP protocol version to use.\n\n       debuglevel (default: 0)\n\t      What level to set for debugging in the OpenLDAP libraries.\n\nLDAP SASL PARAMETERS\n       If you're using the OpenLDAP libraries compiled with SASL support,\n       Postfix 2.8 and later built with LDAP SASL support as described in\n       LDAP_README can authenticate to LDAP servers via SASL.\n\n       This enables authentication to the LDAP server via mechanisms other\n       than a simple password. The added flexibility has a cost: it is no\n       longer practical to set an explicit timeout on the duration of an LDAP\n       bind operation. Under adverse conditions, whether a SASL bind times\n       out, or if it does, the duration of the timeout is determined by the\n       LDAP and SASL libraries.\n\n       It is best to use tables that use SASL binds via proxymap(8), this way\n       the requesting process can time-out the proxymap request. This also\n       lets you tailer the process environment by overriding the proxymap(8)\n       import_environment setting in master.cf(5). Special environment\n       settings may be needed to configure GSSAPI credential caches or other\n       SASL mechanism specific options. The GSSAPI credentials used for LDAP\n       lookups may need to be different than say those used for the Postfix\n       SMTP client to authenticate to remote servers."
  manpageQuestion1: What is the primary purpose of the ldap_table resource?
  manpageQuestion2: How can you configure the ldap_table to use SASL authentication for LDAP binds?
  manpageQuestion3: What are the key considerations when using SASL with ldap_table for LDAP authentication?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nUsing SASL mechanisms requires LDAP protocol version 3, the default\n       protocol version is 2 for backwards compatibility. You must set\n       \"version = 3\" in addition to \"bind = sasl\".\n\n       The following parameters are relevant to using LDAP with SASL\n\n       sasl_mechs (default: empty)\n\t      Space separated list of SASL mechanism(s) to try.\n\n       sasl_realm (default: empty)\n\t      SASL Realm to use, if applicable.\n\n       sasl_authz_id (default: empty)\n\t      The SASL authorization identity to assert, if applicable.\n\n       sasl_minssf (default: 0)\n\t      The minimum required sasl security factor required to establish\n\t      a connection.\n\nLDAP SSL AND STARTTLS PARAMETERS\n       If you're using the OpenLDAP libraries compiled with SSL support,\n       Postfix can connect to LDAP SSL servers and can issue the STARTTLS\n       command.\n\n       LDAP SSL service can be requested by using a LDAP SSL URL in the\n       server_host parameter:\n\n\t   server_host = ldaps://ldap.example.com:636"
  manpageQuestion1: What is the primary purpose of the ldap_table resource?
  manpageQuestion2: How can you configure Postfix to use LDAP with SASL authentication for version 3?
  manpageQuestion3: What is the correct format for specifying an LDAP SSL service in Postfix configuration?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nSTARTTLS can be turned on with the start_tls parameter:\n\n\t   start_tls = yes\n\n       Both forms require LDAP protocol version 3, which has to be set\n       explicitly with:\n\n\t   version = 3\n\n       If any of the Postfix programs querying the map is configured in\n       master.cf to run chrooted, all the certificates and keys involved have\n       to be copied to the chroot jail. Of course, the private keys should\n       only be readable by the user \"postfix\".\n\n       The following parameters are relevant to LDAP SSL and STARTTLS:\n\n       start_tls (default: no)\n\t      Whether or not to issue STARTTLS upon connection to the server.\n\t      Don't set this with LDAP SSL (the SSL session is setup\n\t      automatically when the TCP connection is opened).\n\n       tls_ca_cert_dir (No default; set either this or tls_ca_cert_file)\n\t      Directory containing X509 Certification Authority certificates\n\t      in PEM format which are to be recognized by the client in\n\t      SSL/TLS connections. The files each contain one CA certificate.\n\t      The files are looked up by the CA subject name hash value, which\n\t      must hence be available. If more than one CA certificate with\n\t      the same name hash value exist, the extension must be different\n\t      (e.g. 9d66eef0.0, 9d66eef0.1 etc). The search is performed in\n\t      the ordering of the extension number, regardless of other\n\t      properties of the certificates. Use the c_rehash utility (from\n\t      the OpenSSL distribution) to create the necessary links."
  manpageQuestion1: What is the primary purpose of the ldap_table resource in Postfix?
  manpageQuestion2: How would you configure Postfix to use STARTTLS for LDAP connections?
  manpageQuestion3: What is the correct way to specify a directory of X509 CA certificates for SSL/TLS connections in Postfix?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\ntls_ca_cert_file (No default; set either this or tls_ca_cert_dir)\n\t      File containing the X509 Certification Authority certificates in\n\t      PEM format which are to be recognized by the client in SSL/TLS\n\t      connections. This setting takes precedence over tls_ca_cert_dir.\n\n       tls_cert (No default; you must set this)\n\t      File containing client's X509 certificate to be used by the\n\t      client in SSL/ TLS connections.\n\n       tls_key (No default; you must set this)\n\t      File containing the private key corresponding to the above\n\t      tls_cert.\n\n       tls_require_cert (default: no)\n\t      Whether or not to request server's X509 certificate and check\n\t      its validity when establishing SSL/TLS connections.  The\n\t      supported values are no and yes.\n\n\t      With no, the server certificate trust chain is not checked, but\n\t      with OpenLDAP prior to 2.1.13, the name in the server\n\t      certificate must still match the LDAP server name. With OpenLDAP\n\t      2.0.0 to 2.0.11 the server name is not necessarily what you\n\t      specified, rather it is determined (by reverse lookup) from the\n\t      IP address of the LDAP server connection. With OpenLDAP prior to\n\t      2.0.13, subjectAlternativeName extensions in the LDAP server\n\t      certificate are ignored: the server name must match the subject\n\t      CommonName. The no setting corresponds to the never value of\n\t      TLS_REQCERT in LDAP client configuration files."
  manpageQuestion1: What is the primary purpose of the ldap_table resource?
  manpageQuestion2: How would you configure ldap_table to use a specific TLS certificate and private key file for SSL/TLS connections?
  manpageQuestion3: What is the default behavior of ldap_table regarding server certificate validation during SSL/TLS connections?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nDon't use TLS with OpenLDAP 2.0.x (and especially with x <= 11)\n\t      if you can avoid it.\n\n\t      With yes, the server certificate must be issued by a trusted CA,\n\t      and not be expired. The LDAP server name must match one of the\n\t      name(s) found in the certificate (see above for OpenLDAP library\n\t      version dependent behavior). The yes setting corresponds to the\n\t      demand value of TLS_REQCERT in LDAP client configuration files.\n\n\t      The \"try\" and \"allow\" values of TLS_REQCERT have no equivalents\n\t      here. They are not available with OpenLDAP 2.0, and in any case\n\t      have questionable security properties. Either you want TLS\n\t      verified LDAP connections, or you don't.\n\n\t      The yes value only works correctly with Postfix 2.5 and later,\n\t      or with OpenLDAP 2.0. Earlier Postfix releases or later OpenLDAP\n\t      releases don't work together with this setting. Support for LDAP\n\t      over TLS was added to Postfix based on the OpenLDAP 2.0 API.\n\n       tls_random_file (No default)\n\t      Path of a file to obtain random bits from when /dev/[u]random is\n\t      not available, to be used by the client in SSL/TLS connections."
  manpageQuestion1: What is the primary purpose of the ldap_table resource?
  manpageQuestion2: How can you configure the ldap_table resource to enforce TLS certificate verification?
  manpageQuestion3: What is the function of the tls_random_file parameter in the ldap_table resource?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\ntls_cipher_suite (No default)\n\t      Cipher suite to use in SSL/TLS negotiations.\n\nEXAMPLE\n       Here's a basic example for using LDAP to look up local(8) aliases.\n       Assume that in main.cf, you have:\n\n\t   alias_maps = hash:/etc/aliases,\n\t\t   ldap:/etc/postfix/ldap-aliases.cf\n\n       and in ldap:/etc/postfix/ldap-aliases.cf you have:\n\n\t   server_host = ldap.example.com\n\t   search_base = dc=example, dc=com\n\n       Upon receiving mail for a local address \"ldapuser\" that isn't found in\n       the /etc/aliases database, Postfix will search the LDAP server\n       listening at port 389 on ldap.example.com.  It will bind anonymously,\n       search for any directory entries whose mailacceptinggeneralid attribute\n       is \"ldapuser\", read the \"maildrop\" attributes of those found, and build\n       a list of their maildrops, which will be treated as RFC822 addresses to\n       which the message will be delivered.\n\nOBSOLETE MAIN.CF PARAMETERS\n       For backwards compatibility with Postfix version 2.0 and earlier, LDAP\n       parameters can also be defined in main.cf.  Specify as LDAP source a\n       name that doesn't begin with a slash or a dot.  The LDAP parameters\n       will then be accessible as the name you've given the source in its\n       definition, an underscore, and the name of the parameter.  For example,\n       if the map is specified as \"ldap:ldapsource\", the \"server_host\"\n       parameter below would be defined in main.cf as\n       \"ldapsource_server_host\"."
  manpageQuestion1: What is the primary purpose of the ldap_table resource?
  manpageQuestion2: How would you configure Postfix to use an LDAP server at ldap.example.com for alias lookups?
  manpageQuestion3: Can you explain how to set up an LDAP source in Postfix's main.cf for backward compatibility with older versions?

- prompt: |-
    You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.



    Manpage text:

    Note: with this form, the passwords for the LDAP sources are written in
           main.cf, which is normally world-readable.  Support for this form will
           be removed in a future Postfix version.

    OTHER OBSOLETE FEATURES
           For backwards compatibility with the pre 2.2 LDAP clients,
           result_filter can for now be used instead of result_format, when the
           latter parameter is not also set.  The new name better reflects the
           function of the parameter. This compatibility interface may be removed
           in a future release.

    SEE ALSO
           postmap(1), Postfix lookup table manager
           postconf(5), configuration parameters
           mysql_table(5), MySQL lookup tables
           pgsql_table(5), PostgreSQL lookup tables

    README FILES
           Use "postconf readme_directory" or "postconf html_directory" to locate
           this information.
           DATABASE_README, Postfix lookup table overview
           LDAP_README, Postfix LDAP client guide

    LICENSE
           The Secure Mailer license must be distributed with this software.
  manpageQuestion1: What is the primary purpose of the ldap_table resource in Postfix?
  manpageQuestion2: How can you configure Postfix to use an LDAP table for lookup purposes?
  manpageQuestion3: What is the recommended approach for handling passwords in LDAP sources according to the manpage?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap_table`.\n\n\n\nManpage text:\n\nAUTHOR(S)\n       Carsten Hoeger, Hery Rakotoarisoa, John Hensley, Keith Stevenson,\n       LaMont Jones, Liviu Daia, Manuel Guesdon, Mike Mattice, Prabhat K\n       Singh, Sami Haahtinen, Samuel Tardieu, Victor Duchovni, and many\n       others.\n\n\t\t\t\t\t\t\t\t LDAP_TABLE(5)"
  manpageQuestion1: What is the primary purpose of the ldap_table resource?
  manpageQuestion2: How would you use ldap_table to retrieve information about a specific LDAP entry?
  manpageQuestion3: Can you provide an example of using ldap_table to list all entries in a particular LDAP directory?

