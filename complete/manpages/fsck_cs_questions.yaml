- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `fsck_cs`.\n\n\n\nManpage text:\n\nFSCK_CS(8)\t\t    System Manager's Manual\t\t    FSCK_CS(8)\n\nNAME\n     fsck_cs â€“ verify and repair CoreStorage logical volume groups\n\nSYNOPSIS\n     fsck_cs -q device ...\n     fsck_cs -p device ...\n     fsck_cs [-y | -n] [-x | -g] [-l logfile] device ...\n\nDESCRIPTION\n     The fsck_cs utility verifies and repairs CoreStorage logical volume group\n     metadata.\n\n     The device parameter(s) should be path(s) to the \"raw\" (character\n     special) disk device(s) such as /dev/rdisk1s1 that constitute the\n     CoreStorage logical volume group.\tIf you specify a \"non-raw\" (block\n     special) path such as /dev/disk1s1, or just the disk name such as\n     disk1s1, it will automatically be converted to the corresponding raw disk\n     device (/dev/rdisk1s1).\n\n     The options are as follows:\n\n\t   -q\t   Performs a \"quick\" check and indicates if any corruptions\n\t\t   were found via the exit status.  In this mode stale MLV\n\t\t   segments are not checked, nor is proactive MLV mirror\n\t\t   scrubbing performed."
  manpageQuestion1: What is the primary purpose of the fsck_cs command?
  manpageQuestion2: How can you use fsck_cs to perform a quick check on a CoreStorage logical volume group located at /dev/disk1s1?
  manpageQuestion3: What command would you use to verify and repair a CoreStorage volume group with interactive prompts while logging the output to a file called "repair_log.txt"?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `fsck_cs`.\n\n\n\nManpage text:\n\n-p\t   Operates in \"preen\" mode.  MLV mirror blocks are repaired\n\t\t   where necessary.  Newer transactions may be invalidated to\n\t\t   force a roll-back to an older, but consistent, filesystem\n\t\t   state.\n\n\t   -y\t   Causes fsck_cs to assume \"yes\" as the answer to all\n\t\t   questions.  In other words, always attempt to repair any\n\t\t   errors that are found.\n\n\t   -n\t   Causes fsck_cs to assume \"no\" as the answer to all\n\t\t   questions.  In other words, never attempt to repair any\n\t\t   errors that are found.\n\n\t   -x\t   Causes fsck_cs to produce its output in an XML-like (plist)\n\t\t   format.  This option is used when another application with\n\t\t   a graphical user interface (like OS X Disk Utility) is\n\t\t   invoking the fsck_cs tool and processing the output.\n\n\t   -g\t   Causes fsck_cs to produce its output in GUI-compatible\n\t\t   form.  This is similar in usage to the -x option.\n\n\t   -l logfile\n\t\t   Reproduce all console output, as well as additional status\n\t\t   and error messages, to the specified file."
  manpageQuestion1: What is the primary purpose of the fsck_cs tool?
  manpageQuestion2: How would you use fsck_cs to automatically repair filesystem errors without prompting for confirmation?
  manpageQuestion3: Can you provide an example of using fsck_cs to generate XML-like output for processing by another application?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `fsck_cs`.\n\n\n\nManpage text:\n\nAlternatively device can be specified as the UUID of the CoreStorage\n     logical volume group or as the name of a CoreStorage-hosted logical\n     volume within that group, causing fsck_cs to derive the constituent raw\n     device(s) from the IORegistry.  In these cases you must indicate what\n     object is being supplied to identify the logical volume group:\n\n\t   --pv    the component CoreStorage physical volume(s) directly\n\n\t   --uuid  the CoreStorage logical volume group (as a UUID)\n\n\t   --lv    a CoreStorage logical volume (as a device name)\n\nDIAGNOSTICS\n     The fsck_cs utility exits with 0 if no corruption was detected or if all\n     corruptions were repaired, and with >0 if any unrepaired corruption\n     remains.\n\nBUGS\n     fsck_cs does not perform an exhaustive validation, nor is it able to fix\n     many of the inconsistencies that it does detect.\n\nHISTORY\n     The fsck_cs utility first appeared along with CoreStorage in OS X 10.7.0.\n\nOS X\t\t\t\t July 22, 2011\t\t\t\t  OS X"
  manpageQuestion1: What is the primary purpose of the fsck_cs utility?
  manpageQuestion2: How can you use fsck_cs to check and repair a CoreStorage logical volume group identified by its UUID?
  manpageQuestion3: What is the correct command to check a CoreStorage logical volume named 'MyVolume' using the --lv option?

