- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlplan9`.\n\n\n\nManpage text:\n\nPERLPLAN9(1)\t       Perl Programmers Reference Guide \t  PERLPLAN9(1)\n\n\nNAME\n       perlplan9 - Plan 9-specific documentation for Perl\n\nDESCRIPTION\n       These are a few notes describing features peculiar to Plan 9 Perl. As\n       such, it is not intended to be a replacement for the rest of the Perl 5\n       documentation (which is both copious and excellent). If you have any\n       questions to which you can't find answers in these man pages, contact\n       Luther Huffman at lutherh@stratcom.com and we'll try to answer them.\n\n   Invoking Perl\n       Perl is invoked from the command line as described in perl. Most perl\n       scripts, however, do have a first line such as \"#!/usr/local/bin/perl\".\n       This is known as a shebang (shell-bang) statement and tells the OS\n       shell where to find the perl interpreter. In Plan 9 Perl this statement\n       should be \"#!/bin/perl\" if you wish to be able to directly invoke the\n       script by its name.\n\t    Alternatively, you may invoke perl with the command \"Perl\" instead\n       of \"perl\". This will produce Acme-friendly error messages of the form\n       \"filename:18\".\n\n       Some scripts, usually identified with a *.PL extension, are self-\n       configuring and are able to correctly create their own shebang path\n       from config information located in Plan 9 Perl. These you won't need to\n       be worried about.\n\n   What's in Plan 9 Perl\n       Although Plan 9 Perl currently only  provides static loading, it is\n       built with a number of useful extensions.  These include Opcode,\n       FileHandle, Fcntl, and POSIX. Expect to see others (and DynaLoading!)\n       in the future.\n\n   What's not in Plan 9 Perl\n       As mentioned previously, dynamic loading isn't currently available nor\n       is MakeMaker. Both are high-priority items.\n\n   Perl5 Functions not currently supported in Plan 9 Perl\n       Some, such as \"chown\" and \"umask\" aren't provided because the concept\n       does not exist within Plan 9. Others, such as some of the socket-\n       related functions, simply haven't been written yet. Many in the latter\n       category may be supported in the future.\n\n       The functions not currently implemented include:\n\n\t   chown, chroot, dbmclose, dbmopen, getsockopt,\n\t   setsockopt, recvmsg, sendmsg, getnetbyname,\n\t   getnetbyaddr, getnetent, getprotoent, getservent,\n\t   sethostent, setnetent, setprotoent, setservent,\n\t   endservent, endnetent, endprotoent, umask\n\n       There may be several other functions that have undefined behavior so\n       this list shouldn't be considered complete.\n\n   Signals in Plan 9 Perl\n       For compatibility with perl scripts written for the Unix environment,\n       Plan 9 Perl uses the POSIX signal emulation provided in Plan 9's ANSI\n       POSIX Environment (APE). Signal stacking isn't supported. The signals\n       provided are:\n\n\t   SIGHUP, SIGINT, SIGQUIT, SIGILL, SIGABRT,\n\t   SIGFPE, SIGKILL, SIGSEGV, SIGPIPE, SIGPIPE, SIGALRM,\n\t   SIGTERM, SIGUSR1, SIGUSR2, SIGCHLD, SIGCONT,\n\t   SIGSTOP, SIGTSTP, SIGTTIN, SIGTTOU\n\nCOMPILING AND INSTALLING PERL ON PLAN 9\n       WELCOME to Plan 9 Perl, brave soul!\n\n\t  This is a preliminary alpha version of Plan 9 Perl. Still to be\n       implemented are MakeMaker and DynaLoader. Many perl commands are\n       missing or currently behave in an inscrutable manner. These gaps will,\n       with perseverance and a modicum of luck, be remedied in the near\n       future.To install this software:\n\n       1. Create the source directories and libraries for perl by running the\n       plan9/setup.rc command (i.e., located in the plan9 subdirectory).\n       Note: the setup routine assumes that you haven't dearchived these files\n       into /sys/src/cmd/perl. After running setup.rc you may delete the copy\n       of the source you originally detarred, as source code has now been\n       installed in /sys/src/cmd/perl. If you plan on installing perl binaries\n       for all architectures, run \"setup.rc -a\".\n\n       2. After making sure that you have adequate privileges to build system\n       software, from /sys/src/cmd/perl/5.00301 (adjust version appropriately)\n       run:\n\n\t       mk install\n\n       If you wish to install perl versions for all architectures (68020,\n       mips, sparc and 386) run:\n\n\t       mk installall\n\n       3. Wait. The build process will take a *long* time because perl\n       bootstraps itself. A 75MHz Pentium, 16MB RAM machine takes roughly 30\n       minutes to build the distribution from scratch.\n\n   Installing Perl Documentation on Plan 9\n       This perl distribution comes with a tremendous amount of documentation.\n       To add these to the built-in manuals that come with Plan 9, from\n       /sys/src/cmd/perl/5.00301 (adjust version appropriately) run:\n\n\t       mk man\n\n       To begin your reading, start with:\n\n\t       man perl\n\n       This is a good introduction and will direct you towards other man pages\n       that may interest you.\n\n       (Note: \"mk man\" may produce some extraneous noise. Fear not.)\n\nBUGS\n       \"As many as there are grains of sand on all the beaches of the world .\n       . .\" - Carl Sagan\n\nRevision date\n       This document was revised 09-October-1996 for Perl 5.003_7.\n\nAUTHOR\n       Direct questions, comments, and the unlikely bug report (ahem) direct\n       comments toward:\n\n       Luther Huffman, lutherh@stratcom.com, Strategic Computer Solutions,\n       Inc.\n\nperl v5.34.1\t\t\t  2022-02-19\t\t\t  PERLPLAN9(1)"
  manpageQuestion1: What is the primary purpose of the perlplan9 man page?
  manpageQuestion2: How can you invoke a Perl script written for Plan 9 Perl directly by its filename?
  manpageQuestion3: What are some functions that are not currently supported in Plan 9 Perl according to the manpage?

