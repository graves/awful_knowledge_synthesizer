- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `itkWidget`.\n\n\n\nManpage text:\n\nWidget(n)\t\t\t   [incr Tk]\t\t\t     Widget(n)\n\n______________________________________________________________________________\n\nNAME\n       Widget - base class for mega-widgets within a frame\n\nINHERITANCE\n       itk::Archetype <- itk::Widget\n\nSTANDARD OPTIONS\n       background      cursor\n\n       See the \"options\" manual entry for details on the standard options.\n______________________________________________________________________________\n\n\nDESCRIPTION\n       The Widget class inherits everything from the Archetype class, and adds\n       a Tk frame called the \"hull\" component to represent the body of the\n       mega-widget.  The window class name for the hull is set to the most-\n       specific class name for the mega-widget.  The protected variable\n       itk_interior contains the window path name for the \"hull\" component.\n       Derived classes specialize this widget by packing other widget\n       components into the hull.\n\n       Since the hull for the Widget class is implemented with a Tk frame,\n       mega-widgets in the Widget class can be packed into other frames and\n       toplevels."
  manpageQuestion1: What is the primary purpose of the itkWidget class?
  manpageQuestion2: How can you customize the background color of a widget created from the itkWidget class?
  manpageQuestion3: What is the role of the 'hull' component in the itkWidget class?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `itkWidget`.\n\n\n\nManpage text:\n\nCOMPONENTS\n       Name:\t       hull\n       Class:\t       Frame\n\n\t      The \"hull\" component acts as the body for the entire mega-\n\t      widget.  Other components are packed into the hull to further\n\t      specialize the widget.\n\n\nEXAMPLE\n       The following example implements a simple TextDisplay mega-widget.  It\n       creates a read-only display of text with a text widget and a scrollbar.\n\t      option add *TextDisplay.wrap none widgetDefault\n\t      option add *TextDisplay.textBackground ivory widgetDefault\n\t      option add *TextDisplay.width 40 widgetDefault\n\t      option add *TextDisplay.height 10 widgetDefault\n\n\t      itcl::class TextDisplay {\n\t\t  inherit itk::Widget\n\n\t\t  constructor {args} {\n\t\t      itk_component add text {\n\t\t\t  text $itk_interior.info -state disabled\t\t  -yscrollcommand [code $itk_interior.sbar set]\n\t\t      } {\n\t\t\t  usual\n\t\t\t  keep -tabs -wrap -width -height\n\t\t\t  rename -background -textbackground textBackground Background\n\t\t      }\n\t\t      pack $itk_component(text) -side left -expand yes -fill both\n\n\t\t      itk_component add scrollbar {\n\t\t\t  scrollbar $itk_interior.sbar\t\t       -command [code $itk_interior.info yview]\n\t\t      }\n\t\t      pack $itk_component(scrollbar) -side right -fill y\n\n\t\t      eval itk_initialize $args\n\t\t  }\n\n\t\t  public method display {info}\n\t\t  public method append {info}\n\t      }\n\n\t      itcl::body TextDisplay::display {info} {\n\t\t  $itk_component(text) configure -state normal\n\t\t  $itk_component(text) delete 1.0 end\n\t\t  $itk_component(text) insert 1.0 $info\n\t\t  $itk_component(text) configure -state disabled\n\t      }\n\n\t      itcl::body TextDisplay::append {info} {\n\t\t  $itk_component(text) configure -state normal\n\t\t  $itk_component(text) insert end $info\n\t\t  $itk_component(text) configure -state disabled\n\t      }\n\n\t      itk::usual TextDisplay {\n\t\t  keep -background -cursor -foreground -font\n\t\t  keep -activebackground -activerelief\n\t\t  keep -highlightcolor -highlightthickness\n\t\t  keep -insertbackground -insertborderwidth -insertwidth\n\t\t  keep -insertontime -insertofftime\n\t\t  keep -selectbackground -selectborderwidth -selectforeground\n\t\t  keep -textbackground -troughcolor\n\t      }\n\n\t      #\n\t      # EXAMPLE:  Display the /etc/passwd file\n\t      #\n\t      TextDisplay .file -background red\n\t      pack .file\n\n\t      .file display [exec cat /etc/passwd]"
  manpageQuestion1: What is the primary purpose of the itkWidget resource?
  manpageQuestion2: How can you create a TextDisplay mega-widget that displays the contents of the /etc/passwd file?
  manpageQuestion3: What is the role of the 'hull' component in the itkWidget framework?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `itkWidget`.\n\n\n\nManpage text:\n\nKEYWORDS\n       itk, Archetype, Widget, mega-widget\n\nitk\t\t\t\t      3.0\t\t\t     Widget(n)"
  manpageQuestion1: What is the primary purpose of the itkWidget resource?
  manpageQuestion2: How would you use itkWidget to create a mega-widget with specific attributes?
  manpageQuestion3: Can you provide an example of using itkWidget to define and configure an Archetype widget?

