- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `fsck_msdos`.\n\n\n\nManpage text:\n\nFSCK_MSDOS(8)\t\t    System Manager's Manual\t\t FSCK_MSDOS(8)\n\nNAME\n     fsck_msdos – DOS/Windows (FAT) file system consistency check\n\nSYNOPSIS\n     fsck_msdos -q special ...\n     fsck_msdos -p [-f] special ...\n     fsck_msdos [-fny] special ...\n\nDESCRIPTION\n     The fsck_msdos utility verifies and repairs FAT file systems (more\n     commonly known as DOS file systems).\n\n     The first form of fsck_msdos quickly checks the specified file systems to\n     determine whether they were cleanly unmounted.\n\n     The second form of fsck_msdos preens the specified file systems.  It is\n     normally started by fsck(8) run from /etc/rc.boot during automatic\n     reboot, when a FAT file system is detected.  When preening file systems,\n     fsck_msdos will fix common inconsistencies non-interactively.  If more\n     serious problems are found, fsck_msdos does not try to fix them,\n     indicates that it was not successful, and exits.\n\n     The third form of fsck_msdos checks the specified file systems and tries\n     to repair all detected inconsistencies, requesting confirmation before\n     making any changes.  The default behavior is to always ask for\n     confirmation of each change.  Use the -n or -y options to override this\n     default behavior."
  manpageQuestion1: What is the primary purpose of the fsck_msdos utility?
  manpageQuestion2: How would you use fsck_msdos to perform a quick check on the FAT file system located at /dev/sda1?
  manpageQuestion3: Can you provide an example of using fsck_msdos to check and repair a FAT file system with non-interactive confirmation?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `fsck_msdos`.\n\n\n\nManpage text:\n\nThe options are as follows:\n\n\t   -q\t   Causes fsck_msdos to quickly check whether the volume was\n\t\t   unmounted cleanly.  If the volume was unmounted cleanly,\n\t\t   then the exit status is 0.  If the volume was not unmounted\n\t\t   cleanly, then the exit status will be non-zero.  In either\n\t\t   case, a message is printed to standard output describing\n\t\t   whether the volume was clean or dirty.\n\n\t   -f\t   This option is ignored by fsck_msdos and is present only\n\t\t   for compatibility with programs that check other file\n\t\t   system types for consistency.\n\n\t   -n\t   Causes fsck_msdos to assume no as the answer to all\n\t\t   operator questions, except “CONTINUE?”.\n\n\t   -p\t   Preen the specified file systems.\n\n\t   -y\t   Causes fsck_msdos to assume yes as the answer to all\n\t\t   operator questions.\n\nEXIT VALUES\n     fsck_msdos exits with a value of 0 when the filesystem is clean (or has\n     been repaired), and 8 otherwise.\n\nSEE ALSO\n     fsck(8)\n\nBUGS\n     fsck_msdos is still under construction.\n\nNetBSD 1.1\t\t\tAugust 13, 1995 \t\t    NetBSD 1.1"
  manpageQuestion1: What is the primary purpose of the fsck_msdos tool?
  manpageQuestion2: How can you use fsck_msdos to quickly check if a volume was unmounted cleanly?
  manpageQuestion3: What command would you use to automatically answer 'yes' to all operator questions when running fsck_msdos?

