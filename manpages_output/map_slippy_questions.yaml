- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `map_slippy`.\n\n\n\nManpage text:\n\nmap::slippy(n)\t\t       Mapping utilities\t\tmap::slippy(n)\n\n______________________________________________________________________________\n\nNAME\n       map::slippy - Common code for slippy based map packages\n\nSYNOPSIS\n       package require Tcl  8.4\n\n       package require Tk  8.4\n\n       package require map::slippy  ?0.3?\n\n       ::map::slippy length level\n\n       ::map::slippy tiles level\n\n       ::map::slippy tile size\n\n       ::map::slippy tile valid tile levels ?msgvar?\n\n       ::map::slippy geo 2tile geo\n\n       ::map::slippy geo 2point geo\n\n       ::map::slippy tile 2geo tile\n\n       ::map::slippy tile 2point tile\n\n       ::map::slippy point 2geo point\n\n       ::map::slippy point 2tile point\n\n______________________________________________________________________________\n\nDESCRIPTION\n       This package provides a number of methods doing things needed by all\n       types of slippy-based map packages.\n\nAPI\n       ::map::slippy length level\n\t      This method returns the width/height of a slippy-based map at\n\t      the specified zoom level, in pixels. This is, in essence, the\n\t      result of\n\n\t\t   expr { [tiles $level] * [tile size] }"
  manpageQuestion1: What is the primary purpose of the map::slippy package?
  manpageQuestion2: How can you use the map::slippy package to calculate the pixel width of a map at zoom level 10?
  manpageQuestion3: Can you provide an example of converting a geographic point to a tile coordinate using the map::slippy package?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `map_slippy`.\n\n\n\nManpage text:\n\n::map::slippy tiles level\n\t      This method returns the width/height of a slippy-based map at\n\t      the specified zoom level, in tiles.\n\n       ::map::slippy tile size\n\t      This method returns the width/height of a tile in a slippy-based\n\t      map, in pixels.\n\n       ::map::slippy tile valid tile levels ?msgvar?\n\t      This method checks whether tile described a valid tile in a\n\t      slippy-based map containing that many zoom levels. The result is\n\t      a boolean value, true if the tile is valid, and false otherwise.\n\t      For the latter a message is left in the variable named by\n\t      msgvar, should it be specified.\n\n\t      A tile identifier as stored in tile is a list containing zoom\n\t      level, tile row, and tile column, in this order. The command\n\t      essentially checks this, i.e. the syntax, that the zoom level is\n\t      between 0 and \"levels-1\", and that the row/col information is\n\t      within the boundaries for the zoom level, i.e. 0 ...  \"[tiles\n\t      $zoom]-1\".\n\n       ::map::slippy geo 2tile geo\n\t      Converts a geographical location at a zoom level (geo, a list\n\t      containing zoom level, latitude, and longitude, in this order)\n\t      to a tile identifier (list containing zoom level, row, and\n\t      column) at that level."
  manpageQuestion1: What is the primary purpose of the map_slippy resource?
  manpageQuestion2: How can you determine the width and height of a tile in a slippy-based map?
  manpageQuestion3: Can you provide an example of converting a geographical location to a tile identifier using the map_slippy resource?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `map_slippy`.\n\n\n\nManpage text:\n\n::map::slippy geo 2point geo\n\t      Converts a geographical location at a zoom level (geo, a list\n\t      containing zoom level, latitude, and longitude, in this order)\n\t      to a pixel position (list containing zoom level, y, and x) at\n\t      that level.\n\n       ::map::slippy tile 2geo tile\n\t      Converts a tile identifier at a zoom level (tile, list\n\t      containing zoom level, row, and column) to a geographical\n\t      location (list containing zoom level, latitude, and longitude,\n\t      in this order) at that level.\n\n       ::map::slippy tile 2point tile\n\t      Converts a tile identifier at a zoom level (tile, a list\n\t      containing zoom level, row, and column, in this order) to a\n\t      pixel position (list containing zoom level, y, and x) at that\n\t      level.\n\n       ::map::slippy point 2geo point\n\t      Converts a pixel position at a zoom level (point, list\n\t      containing zoom level, y, and x) to a geographical location\n\t      (list containing zoom level, latitude, and longitude, in this\n\t      order) at that level."
  manpageQuestion1: What is the primary purpose of the map_slippy resource?
  manpageQuestion2: How can you convert a pixel position at zoom level 15 to its corresponding geographical coordinates using map_slippy?
  manpageQuestion3: Can you demonstrate how to use map_slippy to convert a tile identifier (zoom level 12, row 456, column 789) to a geographical location?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `map_slippy`.\n\n\n\nManpage text:\n\n::map::slippy point 2tile point\n\t      Converts a pixel position at a zoom level (point, a list\n\t      containing zoom level, y, and x, in this order) to a tile\n\t      identifier (list containing zoom level, row, and column) at that\n\t      level.\n\nREFERENCES\n       [1]    http://wiki.openstreetmap.org/wiki/Main_Page\n\nKEYWORDS\n       geodesy, geography, latitute, location, longitude, map, slippy, zoom\n\nmap\t\t\t\t      0.3\t\t\tmap::slippy(n)"
  manpageQuestion1: What is the primary purpose of the map::slippy tool?
  manpageQuestion2: How would you use map::slippy to convert a pixel position (zoom level 15, y=2000, x=3000) to a tile identifier?
  manpageQuestion3: Can you provide an example of using map::slippy to convert a specific pixel position at zoom level 18, y=5000, x=7000 to a tile identifier?

