- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `image`.\n\n\n\nManpage text:\n\nimage(n)\t\t     Tk Built-In Commands\t\t      image(n)\n\n______________________________________________________________________________\n\nNAME\n       image - Create and manipulate images\n\nSYNOPSIS\n       image option ?arg arg ...?\n______________________________________________________________________________\n\n\nDESCRIPTION\n       The image command is used to create, delete, and query images.  It can\n       take several different forms, depending on the option argument.\tThe\n       legal forms are:\n\n       image create type ?name? ?option value ...?\n\t      Creates a new image and a command with the same name and returns\n\t      its name.  type specifies the type of the image, which must be\n\t      one of the types currently defined (e.g., bitmap).  name\n\t      specifies the name for the image;  if it is omitted then Tk\n\t      picks a name of the form imagex, where x is an integer.  There\n\t      may be any number of option-value pairs, which provide\n\t      configuration options for the new image.\tThe legal set of\n\t      options is defined separately for each image type;  see below\n\t      for details on the options for built-in image types.  If an\n\t      image already exists by the given name then it is replaced with\n\t      the new image and any instances of that image will redisplay\n\t      with the new contents.  It is important to note that the image\n\t      command will silently overwrite any procedure that may currently\n\t      be defined by the given name, so choose the name wisely.\tIt is\n\t      recommended to use a separate namespace for image names (e.g.,\n\t      ::img::logo, ::img::large).\n\n       image delete ?name name ...?\n\t      Deletes each of the named images and returns an empty string.\n\t      If there are instances of the images displayed in widgets, the\n\t      images will not actually be deleted until all of the instances\n\t      are released.  However, the association between the instances\n\t      and the image manager will be dropped.  Existing instances will\n\t      retain their sizes but redisplay as empty areas.\tIf a deleted\n\t      image is recreated with another call to image create, the\n\t      existing instances will use the new image.\n\n       image height name\n\t      Returns a decimal string giving the height of image name in\n\t      pixels.\n\n       image inuse name\n\t      Returns a boolean value indicating whether or not the image\n\t      given by name is in use by any widgets.\n\n       image names\n\t      Returns a list containing the names of all existing images.\n\n       image type name\n\t      Returns the type of image name (the value of the type argument\n\t      to image create when the image was created).\n\n       image types\n\t      Returns a list whose elements are all of the valid image types\n\t      (i.e., all of the values that may be supplied for the type\n\t      argument to image create).\n\n       image width name\n\t      Returns a decimal string giving the width of image name in\n\t      pixels.\n\n       Additional operations (e.g. writing the image to a file) may be\n       available as subcommands of the image instance command. See the manual\n       page for the particular image type for details.\n\nBUILT-IN IMAGE TYPES\n       The following image types are defined by Tk so they will be available\n       in any Tk application.  Individual applications or extensions may\n       define additional types.\n\n       bitmap Each pixel in the image displays a foreground color, a\n\t      background color, or nothing.  See the bitmap manual entry for\n\t      more information.\n\n       photo  Displays a variety of full-color images, using dithering to\n\t      approximate colors on displays with limited color capabilities.\n\t      See the photo manual entry for more information."
  manpageQuestion1: What is the primary purpose of the image command in Tk?
  manpageQuestion2: How can you create a new bitmap image with a specific name and configuration options in Tk?
  manpageQuestion3: What command is used to delete an existing image and what happens to any instances of that image in widgets?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `image`.\n\n\n\nManpage text:\n\nSEE ALSO\n       bitmap(n), options(n), photo(n)\n\n\nKEYWORDS\n       height, image, types of images, width\n\nTk\t\t\t\t      4.0\t\t\t      image(n)"
  manpageQuestion1: What is the primary purpose of the image resource in the Tk toolkit?
  manpageQuestion2: How would you create an image object in Tk to display a bitmap named 'logo.bmp'?
  manpageQuestion3: What are the common properties associated with an image resource in Tk, and how do they affect the display of an image?

