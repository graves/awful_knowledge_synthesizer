- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_tabnotebook`.\n\n\n\nManpage text:\n\niwidgets::tabnotebook(1)\t[incr Widgets]\t      iwidgets::tabnotebook(1)\n\n______________________________________________________________________________\n\nNAME\n       iwidgets::tabnotebook - create and manipulate tabnotebook widgets\n\nSYNOPSIS\n       iwidgets::tabnotebook pathName? options?\n\nINHERITANCE\n       itk::Widget <- iwidgets::Tabnotebook\n\nSTANDARD OPTIONS\n\n       background  disabledForeground  foreground  scrollCommand\n       cursor\t   font \t       height\t   width\n\n       See the \"options\" manual entry for details on the standard options.\n\nWIDGET-SPECIFIC OPTIONS\n       Name:\t       angle\n       Class:\t       Angle\n       Command-Line Switch:\t      -angle\n\n\t      Specifes the angle of slope from the inner edge to the outer\n\t      edge of the tab.\tAn angle of 0 specifies square tabs. Valid\n\t      ranges are 0 to 45 degrees inclusive. Default is 15 degrees. If\n\t      tabPos is e or w, this option is ignored.\n\n       Name:\t       auto\n       Class:\t       Auto\n       Command-Line Switch:\t      -auto"
  manpageQuestion1: What is the primary purpose of the iwidgets::tabnotebook command?
  manpageQuestion2: How would you configure an iwidgets::tabnotebook to have a tab angle of 30 degrees?
  manpageQuestion3: What is the effect of using the -auto option with iwidgets::tabnotebook?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_tabnotebook`.\n\n\n\nManpage text:\n\nSpecifies whether to use the automatic packing/unpacking\n\t      algorithm of the notebook. A value of true indicates that page\n\t      frames will be unpacked and packed acoording to the algorithm\n\t      described in the select command. A value of false leaves the\n\t      current page packed and subsequent selects, next, or previous\n\t      commands do not switch pages automatically. In either case the\n\t      page's associated command (see the add command's description of\n\t      the command option) is invoked. The value may have any of the\n\t      forms accepted by the Tcl_GetBoolean, such as true, false, 0, 1,\n\t      yes, or no.\n\n       Name:\t       backdrop\n       Class:\t       Backdrop\n       Command-Line Switch:\t      -backdrop\n\n\t      Specifies a background color to use when filling in the backdrop\n\t      area behind the tabs.\n\n       Name:\t       background\n       Class:\t       Background\n       Command-Line Switch:\t      -background\n\n\t      Specifies a background color to use for displaying a page and\n\t      its associated tab. This can be thought of as the selected tab\n\t      background color, since the tab associated with the selected\n\t      page is the selected tab."
  manpageQuestion1: What is the primary purpose of the iwidgets_tabnotebook resource?
  manpageQuestion2: How would you set the background color of the selected tab in an iwidgets_tabnotebook to light blue?
  manpageQuestion3: Can you explain how to configure the automatic packing/unpacking algorithm for a notebook widget using the iwidgets_tabnotebook resource?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_tabnotebook`.\n\n\n\nManpage text:\n\nName:\t       bevelAmount\n       Class:\t       BevelAmount\n       Command-Line Switch:\t      -bevelamount\n\n\t      Specifes the size of tab corners. A value of 0 with angle set to\n\t      0 results in square tabs. A bevelAmount of 4, means that the tab\n\t      will be drawn with angled corners that cut in 4 pixels from the\n\t      edge of the tab. The default is 0.\n\n       Name:\t       borderWidth\n       Class:\t       BorderWidth\n       Command-Line Switch:\t      -borderwidth\n\n\t      Specifies the width of shadowed border to place around the\n\t      notebook area of the tabnotebook. The default value is 2.\n\n       Name:\t       disabledForeground\n       Class:\t       DisabledForeground\n       Command-Line Switch:\t      -disabledforeground\n\n\t      Specifies a foreground color to use for displaying a tab's label\n\t      when its state is disabled.\n\n       Name:\t       equalTabs\n       Class:\t       EqualTabs\n       Command-Line Switch:\t      -equaltabs\n\n\t      Specifies whether to force tabs to be equal sized or not. A\n\t      value of true means constrain tabs to be equal sized. A value of\n\t      false allows each tab to size based on the text label size. The\n\t      value may have any of the forms accepted by the Tcl_GetBoolean,\n\t      such as true, false, 0, 1, yes, or no."
  manpageQuestion1: What is the primary purpose of the iwidgets_tabnotebook resource?
  manpageQuestion2: How would you use the -bevelamount command-line switch to set a tab corner bevel of 4 pixels?
  manpageQuestion3: Can you provide an example of using the -equaltabs command-line switch to ensure all tabs in the tabnotebook are of equal size?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_tabnotebook`.\n\n\n\nManpage text:\n\nFor horizontally positioned tabs (tabpos is either s or n), true\n\t      forces all tabs to be equal width (the width being equal to the\n\t      longest label plus any padX specified). Horizontal tabs are\n\t      always equal in height.\n\n\t      For vertically positioned tabs (tabpos is either w or e), true\n\t      forces all tabs to be equal height (the height being equal to\n\t      the height of the label with the largest font). Vertically\n\t      oriented tabs are always equal in width.\n\n       Name:\t       foreground\n       Class:\t       Foreground\n       Command-Line Switch:\t      -foreground\n\n\t      Specifies a foreground color to use for displaying a page and\n\t      its associated tab label. This can be thought of as the selected\n\t      tab background color, since the tab associated with the selected\n\t      page is the selected tab.\n\n       Name:\t       gap\n       Class:\t       Gap\n       Command-Line Switch:\t      -gap\n\n\t      Specifies the amount of pixel space to place between each tab.\n\t      Value may be any pixel offset value. In addition, a special\n\t      keyword overlap can be used as the value to achieve a standard\n\t      overlap of tabs. This value may have any of the forms acceptable\n\t      to Tk_GetPixels."
  manpageQuestion1: What is the primary purpose of the iwidgets_tabnotebook resource?
  manpageQuestion2: How would you set the foreground color of the selected tab in an iwidgets_tabnotebook to a custom color using the command-line switch?
  manpageQuestion3: What is the correct way to configure the gap between tabs in an iwidgets_tabnotebook using the command-line switch?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_tabnotebook`.\n\n\n\nManpage text:\n\nName:\t       margin\n       Class:\t       Margin\n       Command-Line Switch:\t      -Bmargin\n\n\t      Specifies the amount of space to place between the outside edge\n\t      of the tabnotebook and the outside edge of its tabs. If tabPos\n\t      is s, this is the amount of space between the bottom edge of the\n\t      tabnotebook and the bottom edge of the set of tabs. If tabPos is\n\t      n, this is the amount of space between the top edge of the\n\t      tabnotebook and the top edge of the set of tabs. If tabPos is e,\n\t      this is the amount of space between the right edge of the\n\t      tabnotebook and the right edge of the set of tabs. If tabPos is\n\t      w, this is the amount of space between the left edge of the\n\t      tabnotebook and the left edge of the set of tabs. This value may\n\t      have any of the forms acceptable to Tk_GetPixels.\n\n       Name:\t       padX\n       Class:\t       PadX\n       Command-Line Switch:\t      -padx\n\n\t      Specifies a non-negative value indicating how much extra space\n\t      to request for a tab around its label in the X-direction. When\n\t      computing how large a window it needs, the tab will add this\n\t      amount to the width it would normally need The tab will end up\n\t      with extra internal space to the left and right of its text\n\t      label. This value may have any of the forms acceptable to\n\t      Tk_GetPixels."
  manpageQuestion1: What is the primary purpose of the iwidgets_tabnotebook resource?
  manpageQuestion2: How would you set the margin between the tabnotebook and its tabs to 10 pixels when the tab position is on the bottom?
  manpageQuestion3: Can you provide an example of using the padX option to add 15 pixels of extra space to the left and right of a tab's label?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_tabnotebook`.\n\n\n\nManpage text:\n\nName:\t       padY\n       Class:\t       PadY\n       Command-Line Switch:\t      -pady\n\n\t      Specifies a non-negative value indicating how much extra space\n\t      to request for a tab around its label in the Y-direction. When\n\t      computing how large a window it needs, the tab will add this\n\t      amount to the height it would normally need The tab will end up\n\t      with extra internal space to the top and bottom of its text\n\t      label. This value may have any of the forms acceptable to\n\t      Tk_GetPixels.\n\n       Name:\t       raiseSelect\n       Class:\t       RaiseSelect\n       Command-Line Switch:\t      -raiseselect\n\n\t      Specifes whether to slightly raise the selected tab from the\n\t      rest of the tabs. The selected tab is drawn 2 pixels closer to\n\t      the outside of the tabnotebook than the unselected tabs. A value\n\t      of true says to raise selected tabs, a value of false turns this\n\t      feature off. The default is false. The value may have any of the\n\t      forms accepted by the Tcl_GetBoolean, such as true, false, 0, 1,\n\t      yes, or no."
  manpageQuestion1: What is the primary purpose of the iwidgets_tabnotebook resource?
  manpageQuestion2: How would you set the padding in the Y-direction for a tab label to 10 pixels using the iwidgets_tabnotebook resource?
  manpageQuestion3: Can you provide an example of enabling the feature that raises the selected tab in a tabnotebook by 2 pixels?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_tabnotebook`.\n\n\n\nManpage text:\n\nName:\t       start\n       Class:\t       Start\n       Command-Line Switch:\t      -start\n\n\t      Specifies the amount of space to place between the left or top\n\t      edge of the tabnotebook and the starting edge of its tabs. For\n\t      horizontally positioned tabs, this is the amount of space\n\t      between the left edge of the notebook and the left edge of the\n\t      first tab. For vertically positioned tabs, this is the amount of\n\t      space between the top of the notebook and the top of the first\n\t      tab. This value may change if the user performs a MButton-2\n\t      scroll on the tabs. This value may have any of the forms\n\t      acceptable to Tk_GetPixels.\n\n       Name:\t       state\n       Class:\t       State\n       Command-Line Switch:\t      -state\n\n\t      Sets the active state of the tabnotebook. Specifying normal\n\t      allows all pages to be selectable. Specifying disabled disables\n\t      the notebook causing all page tabs to be drawn in the\n\t      disabledForeground color.\n\n       Name:\t       tabBackground\n       Class:\t       TabBackground\n       Command-Line Switch:\t      -tabbackground"
  manpageQuestion1: What is the primary purpose of the iwidgets_tabnotebook resource?
  manpageQuestion2: How would you set the spacing between the notebook's edge and the first tab using the iwidgets_tabnotebook resource?
  manpageQuestion3: Can you explain how to configure the tabnotebook to disable all page tabs?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_tabnotebook`.\n\n\n\nManpage text:\n\nSpecifies a background color to use for displaying tab\n\t      backgrounds when they are in their unselected state. This is the\n\t      background associated with tabs on all pages other than the\n\t      selected page.\n\n       Name:\t       tabBorders\n       Class:\t       TabBorders\n       Command-Line Switch:\t      -tabborders\n\n\t      Specifies whether to draw the borders of tabs that are not\n\t      selected.  Specifying true (the default) draws these borders,\n\t      specifying false draws only the border around the selected tab.\n\t      The value may have any of the forms accepted by the\n\t      Tcl_GetBoolean, such as true, false, 0, 1, yes, or no.\n\n       Name:\t       tabForeground\n       Class:\t       TabForeground\n       Command-Line Switch:\t      -tabforeground\n\n\t      Specifies a foreground color to use for displaying tab labels\n\t      when they are in their unselected state. This is the foreground\n\t      associated with tabs on all pages other than the selected page.\n\n       Name:\t       tabPos\n       Class:\t       TabPos\n       Command-Line Switch:\t      -tabpos\n\n\t      Specifies the location of the set of tabs in relation to the\n\t      notebook area. Must be n, s, e, or w. Defaults to s.\n______________________________________________________________________________\n\nDESCRIPTION\n       The iwidgets::tabnotebook command creates a new window (given by the\n       pathName argument) and makes it into a tabnotebook widget. Additional\n       options, described above may be specified on the command line or in the\n       option database to configure aspects of the tabnotebook such as its\n       colors, font, and text. The iwidgets::tabnotebook command returns its\n       pathName argument. At the time this command is invoked, there must not\n       exist a window named pathName, but pathName's parent must exist.\n\n       A tabnotebook is a widget that contains a set of tabbed pages. It\n       displays one page from the set as the selected page. A Tab displays the\n       label for the page to which it is attached and serves as a page\n       selector. When a page's tab is selected, the page's contents are\n       displayed in the page area. The selected tab has a three-dimensional\n       effect to make it appear to float above the other tabs. The tabs are\n       displayed as a group along either the left, top, right, or bottom edge.\n       When first created a tabnotebook has no pages. Pages may be added or\n       deleted using widget commands described below.\n\n       A special option may be provided to the tabnotebook. The -auto option\n       specifies whether the tabnotebook will automatically handle the\n       unpacking and packing of pages when pages are selected. A value of true\n       signifies that the notebook will automatically manage it. This is the\n       default value. A value of false signifies the notebook will not perform\n       automatic switching of pages.\n\nNOTEBOOK PAGES\n       A tabnotebook's pages area contains a single child site frame. When a\n       new page is created it is a child of this frame. The page's child site\n       frame serves as a geometry container for applications to pack widgets\n       into. It is this frame that is automatically unpacked or packed when\n       the auto option is true. This creates the effect of one page being\n       visible at a time. When a new page is selected, the previously selected\n       page's child site frame is automatically unpacked from the\n       tabnotebook's child site frame and the newly selected page's child site\n       is packed into the tabnotebook's child site frame.\n\n       However, sometimes it is desirable to handle page changes in a\n       different manner. By specifying the auto option as false, child site\n       packing can be disabled and done differently. For example, all widgets\n       might be packed into the first page's child site frame. Then when a new\n       page is selected, the application can reconfigure the widgets and give\n       the appearance that the page was flipped.\n\n       In both cases the command option for a page specifies a Tcl Command to\n       execute when the page is selected. In the case of auto being true, it\n       is between the unpacking of the previously selected page and the\n       packing of the newly selected page.\n\n       Notebook pages can also be controlled with scroll bars or other widgets\n       that obey the scrollcommand protocol. By giving a scrollbar a -command\n       to call the tabnotebook's select method, the tabnotebook can be\n       controlled with a scrollbar.\n\n       The notebook area is implemented with the notebook mega widget.\n\nTABS\n       Tabs appear along the edge of the notebook area. Tabs are drawn to\n       appear attached to their associated page. When a tab is clicked on, the\n       associated page is selected and the tab is drawn as raised above all\n       other tabs and as a seamless part of its notebook page. Tabs can be\n       controlled in their location along the edges, the angle tab sides are\n       drawn with, gap between tabs, starting margin of tabs, internal padding\n       around text labels in a tab, the font, and its label.\n\n       The Tab area is implemented with the tabset mega widget.  See\n       tabset(1). Tabs may be oriented along either the north, south, east, or\n       west sides with the tabPos option. North and south tabs may appear as\n       angled, square, or bevelled. West and east tabs may appear as square or\n       bevelled. By changing tab gaps, tab angles, bevelling, orientations,\n       colors, fonts, start locations, and margins; tabs may appear in a wide\n       variety of styles. For example, it is possible to implement Microsoft-\n       style tabs, Borland property tab styles, or Borland Delphi style tabs\n       all with the same tabnotebook.\n\nWIDGET-SPECIFIC METHODS\n       The iwidgets::tabnotebook command creates a new Tcl command whose name\n       is pathName. This command may be used to invoke various operations on\n       the widget. It has the following general form:\n\n\t      pathName option ?arg arg ...?\n\n       option and the args determine the exact behavior of the command.\n\n       Many of the widget commands for a notebook take as one argument an\n       indicator of which page of the notebook to operate on. These indicators\n       are called indexes and may be specified in any of the following forms:\n\n       number Specifies the page numerically, where 0 corresponds to the first\n\t      page in the notebook, 1 to the second, and so on.\n\n       select Specifies the currently selected page's index. If no page is\n\t      currently selected, the value -1 is returned.\n\n       end    Specifes the last page in the tabnotebook's index. If the\n\t      notebook is empty this will return -1.\n\n       pattern\n\t      If the index doesn't satisfy any of the above forms, then this\n\t      form is used. Pattern is pattern-matched against the label of\n\t      each page in the notebook, in order from the first to the last\n\t      page, until a matching entry is found. The rules of\n\t      Tcl_StringMatch are used.  The following commands are possible\n\t      for tabnotebook widgets:\n\n       pathName add ?option value option value ...?\n\t      Add a new page at the end of the tabnotebook. A new child site\n\t      frame is created. Returns the child site pathName. If additional\n\t      arguments are present, they specify any of the following\n\t      options:\n\n\t      -angle value\n\t\t     Specifes the angle of slope from the inner edge to the\n\t\t     outer edge of the tab. An angle of 0 specifies square\n\t\t     tabs. Valid ranges are 0 to 45 degrees inclusive. Default\n\t\t     is 15 degrees. If this option is specified as an empty\n\t\t     string (the default), then the angle option for the\n\t\t     overall tabnotebook is used. This is generally only set\n\t\t     at the tabnotebook level. Tabs normally will want to\n\t\t     share the same angle value.\n\n\t      -background value\n\t\t     Specifies a background color to use for displaying tabs\n\t\t     when they are selected and for displaying the current\n\t\t     page. If this option is specified as an empty string (the\n\t\t     default), then the background option for the overall\n\t\t     tabnotebook is used.\n\n\t      -bevelamount value\n\t\t     Specifes the size of tab corners. A value of 0 with angle\n\t\t     set to 0 results in square tabs. A bevelAmount of 4,\n\t\t     means that the tab will be drawn with angled corners that\n\t\t     cut in 4 pixels from the edge of the tab.\tThe default is\n\t\t     0. This is generally only set at the tabnotebook level.\n\t\t     Tabs normally will want to share the same bevelAmount.\n\n\t      -bitmap value\n\t\t     If label is a non-empty string, specifies a bitmap to\n\t\t     display in this page's tab. Bitmap may be of any of the\n\t\t     forms accepted by Tk_GetPixmap.\n\n\t      -command value\n\t\t     Specifies a Tcl command to be executed when this page is\n\t\t     selected. This allows the programmer a hook to\n\t\t     reconfigure this page's widgets or any other page's\n\t\t     widgets.\n\n\t\t     If the tabnotebook has the auto option set to true, when\n\t\t     a page is selected this command will be called\n\t\t     immediately after the previously selected page is\n\t\t     unpacked and immediately before this page is selected.\n\t\t     The index value select is valid during this Tcl command.\n\t\t     `index select' will return this page's page number.\n\n\t\t     If the auto option is set to false, when a page is\n\t\t     selected the unpack and pack calls are bypassed. This Tcl\n\t\t     command is still called.\n\n\t      -disabledforeground value\n\t\t     Specifies a foreground color to use for displaying tab\n\t\t     labels when tabs are in their disable state. If this\n\t\t     option is specified as an empty string (the default),\n\t\t     then the disabledforeground option for the overall\n\t\t     tabnotebook is used.\n\n\t      -font value\n\t\t     Specifies the font to use when drawing a text label on a\n\t\t     page tab. If this option is specified as an empty string\n\t\t     then the font option for the overall tabnotebook is\n\t\t     used..\n\n\t      -foreground value\n\t\t     Specifies a foreground color to use for displaying tab\n\t\t     labels when they are selected. If this option is\n\t\t     specified as an empty string (the default), then the\n\t\t     foreground option for the overall tabnotebook is used.\n\n\t      -label value\n\t\t     Specifies a string to display as an identifying label for\n\t\t     a notebook page. This label serves as an additional\n\t\t     identifier used to reference the page. This label may be\n\t\t     used for the index value in widget commands.\n\n\t      -tabbackground value\n\t\t     Specifies a background color to use for displaying a tab\n\t\t     when it is not elected. If this option is specified as an\n\t\t     empty string (the default), then the tabBackground option\n\t\t     for the overall tabnotebook is used.\n\n\t      -tabforeground value\n\t\t     Specifies a foreground color to use for displaying the\n\t\t     tab's text label when it is not selected. If this option\n\t\t     is specified as an empty string (the default), then the\n\t\t     tabForeground option for the overall tabnotebook is used.\n\n\t      -padx value\n\t\t     Specifies a non-negative value indicating how much extra\n\t\t     space to request for a tab around its label in the X-\n\t\t     direction. When computing how large a window it needs,\n\t\t     the tab will add this amount to the width it would\n\t\t     normally need The tab will end up with extra internal\n\t\t     space to the left and right of its text label. This value\n\t\t     may have any of the forms acceptable to Tk_GetPixels. If\n\t\t     this option is specified as an empty string (the\n\t\t     default), then the padX option for the overall\n\t\t     tabnotebook is used\n\n\t      -pady value\n\t\t     Specifies a non-negative value indicating how much extra\n\t\t     space to request for a tab around its label in the Y-\n\t\t     direction. When computing how large a window it needs,\n\t\t     the tab will add this amount to the height it would\n\t\t     normally need The tab will end up with extra internal\n\t\t     space to the top and bottom of its text label. This value\n\t\t     may have any of the forms acceptable to Tk_GetPixels. If\n\t\t     this option is specified as an empty string (the\n\t\t     default), then the padY option for the overall\n\t\t     tabnotebook is used\n\n\t      -state value\n\t\t     Specifies one of two states for the page: normal or\n\t\t     disabled. In normal state unselected tabs are displayed\n\t\t     using the tabforeground and tabbackground option from the\n\t\t     tabnotebook or the page. Selected tabs and pages are\n\t\t     displayed using the foreground and background option from\n\t\t     the tabnotebook or the page. The disabled state means\n\t\t     that the page and its tab is insensitive: it doesn't\n\t\t     respond to mouse button presses or releases. In this\n\t\t     state the entry is displayed according to its\n\t\t     disabledForeground option for the tabnotebook and the\n\t\t     background/tabbackground option from the page or the\n\t\t     tabnotebook.\n\n       pathName childSite ?index?\n\t      If passed no arguments, returns a list of pathNames for all the\n\t      pages in the tabnotebook. If the tab notebook is empty, an empty\n\t      list is returned\n\n\t      If index is passed, it returns the pathName for the page's child\n\t      site frame specified by index. Widgets that are created with\n\t      this pathName will be displayed when the associated page is\n\t      selected. If index is not a valid index, an empty string is\n\t      returned.\n\n       pathName configure ?option? ?value option value ...?\n\t      Query or modify the configuration options of the widget. If no\n\t      option is specified, returns a list describing all of the\n\t      available options for pathName (see Tk_ConfigureInfo for\n\t      information on the format of this list). If option is specified\n\t      with no value, then the command returns a list describing the\n\t      one named option (this list will be identical to the\n\t      corresponding sublist of the value returned if no option is\n\t      specified). If one or more option-value pairs are specified,\n\t      then the command modifies the given widget option(s) to have the\n\t      given value(s); in this case the command returns an empty\n\t      string. Option may have any of the values accepted by the\n\t      iwidgets::tabnotebook command.\n\n       pathName delete index1 ?index2?\n\t      Delete all of the pages between index1 and index2 inclusive.  If\n\t      index2 is omitted then it defaults to index1. Returns an empty\n\t      string.\n\n       pathName index index\n\t      Returns the numerical index corresponding to index.\n\n       pathName insert index ?option value option value ...?\n\t      Insert a new page in the tabnotebook before the page specified\n\t      by index. A new child site frame is created. The additional\n\t      arguments are the same as for the add command. Returns the child\n\t      site pathName.\n\n       pathName next\n\t      Advances the selected page to the next page (order is determined\n\t      by insertion order). If the currently selected page is the last\n\t      page in the notebook, the selection wraps around to the first\n\t      page in the notebook. It behaves as if the user selected the new\n\t      page.\n\n\t      For notebooks with auto set to true the current page's child\n\t      site is unpacked from the notebook's child site frame. Then the\n\t      next page's child site is packed into the notebook's child site\n\t      frame. The Tcl command given with the command option will be\n\t      invoked between these two operations.\n\n\t      For notebooks with auto set to false the Tcl command given with\n\t      the command option will be invoked.\n\n       pathName pageconfigure index ?option? ?value option value ...?\n\t      This command is similar to the configure command, except that it\n\t      applies to the options for an individual page, whereas configure\n\t      applies to the options for the tabnotebook as a whole. Options\n\t      may have any of the values accepted by the add widget command.\n\t      If options are specified, options are modified as indicated in\n\t      the command and the command returns an empty string. If no\n\t      options are specified, returns a list describing the current\n\t      options for page index (see Tk_ConfigureInfo for information on\n\t      the format of this list).\n\n       pathName prev\n\t      Moves the selected page to the previous page (order is\n\t      determined by insertion order). If the currently selected page\n\t      is the first page in the notebook, the selection wraps around to\n\t      the last page in the notebook. It behaves as if the user\n\t      selected the new page.\n\n\t      For notebooks with auto set to true the current page's child\n\t      site is unpacked from the notebook's child site frame. Then the\n\t      previous page's child site is packed into the notebook's child\n\t      site frame.  The Tcl command given with the command option will\n\t      be invoked between these two operations.\n\n\t      For notebooks with auto set to false the Tcl command given with\n\t      the command option will be invoked.\n\n       pathName select index\n\t      Selects the page specified by index as the currently selected\n\t      page.  It behaves as if the user selected the new page.\n\n\t      For notebooks with auto set to true the current page's child\n\t      site is unpacked from the notebook's child site frame. Then the\n\t      index page's child site is packed into the notebook's child site\n\t      frame. The Tcl command given with the command option will be\n\t      invoked between these two operations.\n\n\t      For notebooks with auto set to false the Tcl command given with\n\t      the command option will be invoked.\n\n       pathName view\n\t      Returns the currently selected page. This command is for\n\t      compatibility with the scrollbar widget.\n\n       pathName view index\n\t      Selects the page specified by index as the currently selected\n\t      page.  This command is for compatibility with the scrollbar\n\t      widget.\n\n       pathName view moveto fraction\n\t      Uses the fraction value to determine the corresponding page to\n\t      move to.\tThis command is for compatibility with the scrollbar\n\t      widget.\n\n       pathName view scroll num what\n\t      Uses the num value to determine how many pages to move forward\n\t      or backward (num can be negative or positive). The what argument\n\t      is ignored. This command is for compatibility with the scrollbar\n\t      widget.\n\nCOMPONENTS\n       Generally all behavior of the internal components, tabset and notebook\n       are controlled via the pageconfigure method.  The following section\n       documents these two components.\n\n       Name:   tabset\n       Class:  Tabset\n\n\t      This is the tabset component. It implements the tabs that are\n\t      associated with the notebook component.\n\n\t      See the \"Tabset\" widget manual entry for details on the tabset\n\t      component item.\n\n       Name:   notebook\n       Class:  Notebook\n\n\t      This is the notebook component. It implements the notebook that\n\t      contains the pages of the tabnotebook.\n\n\t      See the \"Notebook\" widget manual entry for details on the\n\t      notebook component item.\n\nEXAMPLE\n       Following is an example that creates a tabnotebook with two pages."
  manpageQuestion1: What is the primary purpose of the 4ccconv command?
  manpageQuestion2: How can I convert a 4-character code to its hexadecimal representation using 4ccconv?
  manpageQuestion3: What is the correct command to convert an unsigned integer to a 4-character code with 4ccconv?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_tabnotebook`.\n\n\n\nManpage text:\n\npackage require Iwidgets 4.0\n\t      # Create the tabnotebook widget and pack it.\n\t\tiwidgets::tabnotebook .tn -width 100 -height 100\n\t\tpack .tn \\\n\t\t      -anchor nw \\\n\t\t      -fill both \\\n\t\t      -expand yes \\\n\t\t      -side left \\\n\t\t      -padx 10 \\\n\t\t      -pady 10\n\n\t      # Add two pages to the tabnotebook,\n\t      # labelled \"Page One\" and \"Page Two\"\n\t\t.tn add -label \"Page One\"\n\t\t.tn add -label \"Page Two\"\n\n\t      # Get the child site frames of these two pages.\n\t\tset page1CS [.tn childsite 0]\n\t\tset page2CS [.tn childsite \"Page Two\"]\n\n\t      # Create buttons on each page of the tabnotebook.\n\t\tbutton $page1CS.b -text \"Button One\"\n\t\tpack $page1CS.b\n\t\tbutton $page2CS.b -text \"Button Two\"\n\t\tpack $page2CS.b\n\n\t      # Select the first page of the tabnotebook.\n\t\t.tn select 0\n\nAUTHOR\n       Bill W. Scott\n\nKEYWORDS\n       tab tabset notebook tabnotebook page\n\nTk\t\t\t\t\t\t      iwidgets::tabnotebook(1)"
  manpageQuestion1: What is the primary purpose of the iwidgets_tabnotebook resource?
  manpageQuestion2: How can you create a tabnotebook widget with specific dimensions and pack it into a window?
  manpageQuestion3: Can you provide an example of adding two pages to a tabnotebook and creating buttons on each page?

