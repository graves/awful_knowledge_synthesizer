- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldapurl`.\n\n\n\nManpage text:\n\nLDAPURL(1)\t\t    General Commands Manual\t\t    LDAPURL(1)\n\nNAME\n       ldapurl - LDAP URL formatting tool\n\nSYNOPSIS\n       ldapurl [-a attrs] [-b_searchbase] [-e [!]ext[=extparam]]\n       [-E [!]ext[=extparam]] [-f_filter] [-H_ldapuri] [-h_ldaphost]\n       [-p_ldapport] [-s {base|one|sub|children}] [-S_scheme]\n\nDESCRIPTION\n       ldapurl is a command that allows to either compose or decompose LDAP\n       URIs.\n\n       When invoked with the -H option, ldapurl extracts the components of the\n       ldapuri option argument, unescaping hex-escaped chars as required.  It\n       basically acts as a frontend to the ldap_url_parse(3) call.  Otherwise,\n       it builds an LDAP URI based on the components passed with the\n       appropriate options, performing the inverse operation.  Option -H is\n       incompatible with options -a, -b, -E, -f, -H, -h, -p, -S, and -s.\n\nOPTIONS\n       -a_attrs\n\t      Set a comma-separated list of attribute selectors.\n\n       -b_searchbase\n\t      Set the searchbase.\n\n       -e [!]ext[=extparam]\n\n       -E [!]ext[=extparam]\n\n\t      Specify general extensions with -e and search extensions with\n\t      -E.  ´!´ indicates criticality.\n\n\t      General extensions:\n\t\t[!]assert=<filter>   (an RFC 4515 Filter)\n\t\t[!]authzid=<authzid> (\"dn:<dn>\" or \"u:<user>\")\n\t\t[!]manageDSAit\n\t\t[!]noop\n\t\tppolicy\n\t\t[!]postread[=<attrs>]\t     (a comma-separated attribute list)\n\t\t[!]preread[=<attrs>] (a comma-separated attribute list)\n\t\tabandon, cancel (SIGINT sends abandon/cancel; not really controls)\n\n\t      Search extensions:\n\t\t[!]domainScope\t\t\t\t     (domain scope)\n\t\t[!]mv=<filter>\t\t\t\t     (matched values filter)\n\t\t[!]pr=<size>[/prompt|noprompt]\t     (paged results/prompt)\n\t\t[!]sss=[-]<attr[:OID]>[/[-]<attr[:OID]>...]  (server side sorting)\n\t\t[!]subentries[=true|false]\t     (subentries)\n\t\t[!]sync=ro[/<cookie>]\t\t\t     (LDAP Sync refreshOnly)\n\t\t\trp[/<cookie>][/<slimit>]     (LDAP Sync refreshAndPersist)\n\n       -f_filter\n\t      Set the URL filter.  No particular check on conformity with RFC\n\t      4515 LDAP filters is performed, but the value is hex-escaped as\n\t      required.\n\n       -H_ldapuri\n\t      Specify URI to be exploded.\n\n       -h_ldaphost\n\t      Set the host.\n\n       -p_ldapport\n\t      Set the TCP port.\n\n       -S_scheme\n\t      Set the URL scheme.  Defaults for other fields, like ldapport,\n\t      may depend on the value of scheme.\n\n       -s {base|one|sub|children}\n\t      Specify the scope of the search to be one of base, one, sub, or\n\t      children to specify a base object, one-level, subtree, or\n\t      children search.\tThe default is sub.  Note: children scope\n\t      requires LDAPv3 subordinate feature extension."
  manpageQuestion1: What is the primary purpose of the ldapurl command?
  manpageQuestion2: How can you use ldapurl to decompose an LDAP URI into its individual components?
  manpageQuestion3: Can you provide an example of constructing an LDAP URL with specific parameters using the ldapurl command?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldapurl`.\n\n\n\nManpage text:\n\nOUTPUT FORMAT\n       If the -H option is used, the ldapuri supplied is exploded in its\n       components, which are printed to standard output in an LDIF-like form.\n\n       Otherwise, the URI built using the values passed with the other options\n       is printed to standard output.\n\nEXAMPLE\n       The following command:\n\n\t   ldapuri -h ldap.example.com -b dc=example,dc=com -s sub -f \"(cn=Some One)\"\n\n       returns\n\n\t   ldap://ldap.example.com:389/dc=example,dc=com??sub?(cn=Some%20One)\n\n       The command:\n\n\t   ldapuri -H ldap://ldap.example.com:389/dc=example,dc=com??sub?(cn=Some%20One)\n\n       returns\n\n\t   scheme: ldap\n\t   host: ldap.example.com\n\t   port: 389\n\t   dn: dc=example,dc=com\n\t   scope: sub\n\t   filter: (cn=Some One)\n\nDIAGNOSTICS\n       Exit status is zero if no errors occur.\tErrors result in a non-zero\n       exit status and a diagnostic message being written to standard error.\n\nSEE ALSO\n       ldap(3), ldap_url_parse(3),\n\nAUTHOR\n       The OpenLDAP Project <http://www.openldap.org/>"
  manpageQuestion1: What is the primary purpose of the ldapurl tool?
  manpageQuestion2: How would you use ldapuri to construct an LDAP URI from command-line options?
  manpageQuestion3: Can you provide an example of using ldapuri with the -H option to extract and display the components of an LDAP URI?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldapurl`.\n\n\n\nManpage text:\n\nACKNOWLEDGEMENTS\n       OpenLDAP Software is developed and maintained by The OpenLDAP Project\n       <http://www.openldap.org/>.  OpenLDAP Software is derived from\n       University of Michigan LDAP 3.3 Release.\n\nOpenLDAP 2.4.28 \t\t  2011/11/24\t\t\t    LDAPURL(1)"
  manpageQuestion1: What is the primary purpose of the ldapurl command?
  manpageQuestion2: How would you use the ldapurl command to parse an LDAP URL and display its components?
  manpageQuestion3: Can you provide an example of using the ldapurl command to validate and display information about an LDAP URL?

