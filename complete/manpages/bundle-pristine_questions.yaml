- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `bundle-pristine`.\n\n\n\nManpage text:\n\nBUNDLE-PRISTINE(1)\t\t\t\t\t    BUNDLE-PRISTINE(1)\n\nNAME\n       bundle-pristine - Restores installed gems to their pristine condition\n\nSYNOPSIS\n       bundle pristine\n\nDESCRIPTION\n       pristine restores the installed gems in the bundle to their pristine\n       condition using the local gem cache from RubyGems. For git gems, a\n       forced checkout will be performed.\n\n       For further explanation, bundle pristine ignores unpacked files on\n       disk. In other words, this command utilizes the local .gem cache or the\n       gem´s git repository as if one were installing from scratch.\n\n       Note: the Bundler gem cannot be restored to its original state with\n       pristine. One also cannot use bundle pristine on gems with a ´path´\n       option in the Gemfile, because bundler has no original copy it can\n       restore from.\n\n       When is it practical to use bundle pristine?\n\n       It comes in handy when a developer is debugging a gem. bundle pristine\n       is a great way to get rid of experimental changes to a gem that one may\n       not want."
  manpageQuestion1: What is the primary purpose of the bundle-pristine command?
  manpageQuestion2: How can you use bundle-pristine to restore a gem to its pristine state?
  manpageQuestion3: What should you be aware of when using bundle-pristine with certain types of gems?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `bundle-pristine`.\n\n\n\nManpage text:\n\nWhy use bundle pristine over gem pristine --all?\n\n       Both commands are very similar. For context: bundle pristine, without\n       arguments, cleans all gems from the lockfile. Meanwhile, gem pristine\n       --all cleans all installed gems for that Ruby version.\n\n       If a developer forgets which gems in their project they might have been\n       debugging, the Rubygems gem pristine [GEMNAME] command may be\n       inconvenient. One can avoid waiting for gem pristine --all, and instead\n       run bundle pristine.\n\n\t\t\t\t November 2018\t\t    BUNDLE-PRISTINE(1)"
  manpageQuestion1: What is the primary purpose of the bundle-pristine command?
  manpageQuestion2: How would you use bundle-pristine to clean all gems in a project's lockfile?
  manpageQuestion3: Can you explain the difference between bundle-pristine and gem pristine --all, and provide an example of when bundle-pristine would be more useful?

