- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `json_xs`.\n\n\n\nManpage text:\n\nJSON_XS(1)\t      User Contributed Perl Documentation\t    JSON_XS(1)\n\n\nNAME\n       json_xs - JSON::XS commandline utility\n\nSYNOPSIS\n\t  json_xs [-v] [-f inputformat] [-t outputformat]\n\nDESCRIPTION\n       json_xs converts between some input and output formats (one of them is\n       JSON).\n\n       The default input format is \"json\" and the default output format is\n       \"json-pretty\".\n\nOPTIONS\n       -v  Be slightly more verbose.\n\n       -f fromformat\n\t   Read a file in the given format from STDIN.\n\n\t   \"fromformat\" can be one of:\n\n\t   json - a json text encoded, either utf-8, utf16-be/le, utf32-be/le\n\t   cbor - CBOR (RFC 7049, CBOR::XS), a kind of binary JSON\n\t   storable - a Storable frozen value\n\t   storable-file - a Storable file (Storable has two incompatible\n\t   formats)\n\t   bencode - use Convert::Bencode, if available (used by torrent\n\t   files, among others)\n\t   clzf - Compress::LZF format (requires that module to be installed)\n\t   eval - evaluate the given code as (non-utf-8) Perl, basically the\n\t   reverse of \"-t dump\"\n\t   yaml - YAML format (requires that module to be installed)\n\t   string - do not attempt to decode the file data\n\t   none - nothing is read, creates an \"undef\" scalar - mainly useful\n\t   with \"-e\"\n       -t toformat\n\t   Write the file in the given format to STDOUT.\n\n\t   \"toformat\" can be one of:\n\n\t   json, json-utf-8 - json, utf-8 encoded\n\t   json-pretty - as above, but pretty-printed\n\t   json-utf-16le, json-utf-16be - little endian/big endian utf-16\n\t   json-utf-32le, json-utf-32be - little endian/big endian utf-32\n\t   cbor - CBOR (RFC 7049, CBOR::XS), a kind of binary JSON\n\t   cbor-packed - CBOR using extensions to make it smaller\n\t   storable - a Storable frozen value in network format\n\t   storable-file - a Storable file in network format (Storable has two\n\t   incompatible formats)\n\t   bencode - use Convert::Bencode, if available (used by torrent\n\t   files, among others)\n\t   clzf - Compress::LZF format\n\t   yaml - YAML::XS format\n\t   dump - Data::Dump\n\t   dumper - Data::Dumper\n\t   string - writes the data out as if it were a string\n\t   none - nothing gets written, mainly useful together with \"-e\"\n\t       Note that Data::Dumper doesn't handle self-referential data\n\t       structures correctly - use \"dump\" instead.\n\n       -e code\n\t   Evaluate perl code after reading the data and before writing it out\n\t   again - can be used to filter, create or extract data. The data\n\t   that has been written is in $_, and whatever is in there is written\n\t   out afterwards.\n\nEXAMPLES\n\t  json_xs -t none <isitreally.json\n\n       \"JSON Lint\" - tries to parse the file isitreally.json as JSON - if it\n       is valid JSON, the command outputs nothing, otherwise it will print an\n       error message and exit with non-zero exit status.\n\n\t  <src.json json_xs >pretty.json\n\n       Prettify the JSON file src.json to dst.json.\n\n\t  json_xs -f storable-file <file\n\n       Read the serialised Storable file file and print a human-readable JSON\n       version of it to STDOUT.\n\n\t  json_xs -f storable-file -t yaml <file\n\n       Same as above, but write YAML instead (not using JSON at all :)\n\n\t  json_xs -f none -e '$_ = [1, 2, 3]'\n\n       Dump the perl array as UTF-8 encoded JSON text.\n\n\t  <torrentfile json_xs -f bencode -e '$_ = join \"\\n\", map @$_, @{$_->{\"announce-list\"}}' -t string\n\n       Print the tracker list inside a torrent file.\n\n\t  lwp-request http://cpantesters.perl.org/show/JSON-XS.json | json_xs\n\n       Fetch the cpan-testers result summary \"JSON::XS\" and pretty-print it.\n\nAUTHOR\n       Copyright (C) 2008 Marc Lehmann <json@schmorp.de>\n\nperl v5.34.0\t\t\t  2018-11-15\t\t\t    JSON_XS(1)"
  manpageQuestion1: What is the primary purpose of the json_xs command-line utility?
  manpageQuestion2: How can you use json_xs to convert a Storable file into a human-readable JSON format?
  manpageQuestion3: Can you provide an example of using json_xs to extract specific data from a torrent file and output it as a string?

