- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `plockstat`.\n\n\n\nManpage text:\n\nPLOCKSTAT(1)\t\t\t\t\t\t\t  PLOCKSTAT(1)\n\nNAME\n       plockstat - front-end to DTrace to print statistics about POSIX mutexes\n       and read/write locks\n\nSYNOPSIS\n       plockstat [-vACHV] [-n count] [-s depth] [-e secs] [-x opt[=val]]\n       command [arg...]\n\n       plockstat [-vACHV] [-n count] [-s depth] [-e secs] [-x opt[=val]]\n       -p pid\n\nOVERVIEW\n       The plockstat command is a front-end to DTrace that can be used to\n       print statistics about POSIX mutexes and read/write locks.\n\n       Since OS X 10.11, in order to use this, your process must be run with\n       DYLD_LIBRARY_PATH set to contain /usr/lib/system/introspection:\n\n\t       DYLD_LIBRARY_PATH=/usr/lib/system/introspection\n\n       Which contains the necessary static DTrace probes.\n\n\nOPTIONS\n       -v     print a message when tracing starts\n\n       -A     trace contention and hold events (same as -CH)\n\n       -C     trace contention events for mutexes and rwlocks\n\n       -H     trace hold events for mutexes and rwlocks\n\n       -V     print the dtrace script to run\n\n       -n count\n\t      display only 'count' entries for each event type\n\n       -s depth\n\t      show stack trace upto 'depth' entries\n\n       -e secs\n\t      exit after specified seconds\n\n       -x arg[=val]\n\t      enable a DTrace runtime option or a D compiler option\n\n       -p pid attach and trace the specified process id\n\nSEE ALSO\n       dtrace(1)\n\n1.0\t\t\t\t   July 2007\t\t\t  PLOCKSTAT(1)"
  manpageQuestion1: What is the primary purpose of the plockstat command?
  manpageQuestion2: How can you use plockstat to trace contention events for mutexes and read/write locks in a specific process?
  manpageQuestion3: What command would you use to display only the first 5 entries for each event type while tracing hold events for mutexes and read/write locks?

