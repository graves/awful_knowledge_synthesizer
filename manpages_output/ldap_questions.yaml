- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap`.\n\n\n\nManpage text:\n\nLDAP(3) \t\t   Library Functions Manual\t\t       LDAP(3)\n\nNAME\n       ldap - OpenLDAP Lightweight Directory Access Protocol API\n\nLIBRARY\n       OpenLDAP LDAP (libldap, -lldap)\n\nSYNOPSIS\n       #include <ldap.h>\n\nDESCRIPTION\n       The Lightweight Directory Access Protocol (LDAP) (RFC 4510) provides\n       access to X.500 directory services.  These services may be stand-alone\n       or part of a distributed directory service.  This client API supports\n       LDAP over TCP (RFC 4511), LDAP over TLS/SSL, and LDAP over IPC (UNIX\n       domain sockets).  This API supports SASL (RFC 4513) and Start TLS (RFC\n       4513) as well as a number of protocol extensions.  This API is loosely\n       based upon IETF/LDAPEXT C LDAP API draft specification, a (orphaned)\n       work in progress.\n\n       The OpenLDAP Software package includes a stand-alone server in\n       slapd(8), various LDAP clients, and an LDAP client library used to\n       provide programmatic access to the LDAP protocol. This man page gives\n       an overview of the LDAP library routines.\n\n       Both synchronous and asynchronous APIs are provided.  Also included are\n       various routines to parse the results returned from these routines.\n       These routines are found in the -lldap library.\n\n       The basic interaction is as follows.  A session handle is created using\n       ldap_initialize(3) and set the protocol version to 3 by calling\n       ldap_set_option(3).  The underlying session is established first\n       operation is issued.  This would generally be a Start TLS or Bind\n       operation, or a Search operation to read attributes of the Root DSE.  A\n       Start TLS operation is performed by calling ldap_start_tls_s(3).  A\n       LDAP bind operation is performed by calling ldap_sasl_bind(3) or one of\n       its friends.  A Search operation is performed by calling\n       ldap_search_ext_s(3) or one of its friends.\n\n       Subsequently, additional operations are performed by calling one of the\n       synchronous or asynchronous routines (e.g., ldap_compare_ext_s(3) or\n       ldap_compare_ext(3) followed by ldap_result(3)).  Results returned from\n       these routines are interpreted by calling the LDAP parsing routines\n       such as ldap_parse_result(3).  The LDAP association and underlying\n       connection is terminated by calling ldap_unbind_ext(3).\tErrors can be\n       interpreted by calling ldap_err2string(3).\n\nLDAP versions\n       This library supports version 3 of the Lightweight Directory Access\n       Protocol (LDAPv3) as defined in RFC 4510.  It also supports a variant\n       of version 2 of LDAP as defined by U-Mich LDAP and, to some degree, RFC\n       1777.  Version 2 (all variants) are considered obsolete.  Version 3\n       should be used instead.\n\n       For backwards compatibility reasons, the library defaults to version 2.\n       Hence, all new applications (and all actively maintained applications)\n       should use ldap_set_option(3) to select version 3.  The library manual\n       pages assume version 3 has been selected.\n\nINPUT and OUTPUT PARAMETERS\n       All character string input/output is expected to be/is UTF-8 encoded\n       Unicode (version 3.2).\n\n       Distinguished names (DN) (and relative distinguished names (RDN) to be\n       passed to the LDAP routines should conform to RFC 4514 UTF-8 string\n       representation.\n\n       Search filters to be passed to the search routines are to be\n       constructed by hand and should conform to RFC 4515 UTF-8 string\n       representation.\n\n       LDAP URLs to be passed to routines are expected to conform to RFC 4516\n       format.\tThe ldap_url(3) routines can be used to work with LDAP URLs.\n\n       LDAP controls to be passed to routines can be manipulated using the\n       ldap_controls(3) routines.\n\nDISPLAYING RESULTS\n       Results obtained from the search routines can be output by hand, by\n       calling ldap_first_entry(3) and ldap_next_entry(3) to step through the\n       entries returned, ldap_first_attribute(3) and ldap_next_attribute(3) to\n       step through an entry's attributes, and ldap_get_values(3) to retrieve\n       a given attribute's values.  Attribute values may or may not be\n       displayable.\n\nUTILITY ROUTINES\n       Also provided are various utility routines.  The ldap_sort(3) routines\n       are used to sort the entries and values returned via the ldap search\n       routines.\n\nDEPRECATED INTERFACES\n       A number of interfaces are now considered deprecated.  For instance,\n       ldap_add(3) is deprecated in favor of ldap_add_ext(3).  Deprecated\n       interfaces generally remain in the library.  The macro LDAP_DEPRECATED\n       can be defined to a non-zero value (e.g., -DLDAP_DEPRECATED=1) when\n       compiling program designed to use deprecated interfaces.  It is\n       recommended that developers writing new programs, or updating old\n       programs, avoid use of deprecated interfaces.  Over time, it is\n       expected that documentation (and, eventually, support) for deprecated\n       interfaces to be eliminated.\n\nBER LIBRARY\n       Also included in the distribution is a set of lightweight Basic\n       Encoding Rules routines.  These routines are used by the LDAP library\n       routines to encode and decode LDAP protocol elements using the\n       (slightly simplified) Basic Encoding Rules defined by LDAP.  They are\n       not normally used directly by an LDAP application program except in the\n       handling of controls and extended operations.  The routines provide a\n       printf and scanf-like interface, as well as lower-level access.\tThese\n       routines are discussed in lber-decode(3), lber-encode(3),\n       lber-memory(3), and lber-types(3).\n\nINDEX\n       ldap_initialize(3)  initialize the LDAP library without opening a\n\t\t\t   connection to a server\n\n       ldap_result(3)\t   wait for the result from an asynchronous operation\n\n       ldap_abandon_ext(3) abandon (abort) an asynchronous operation\n\n       ldap_add_ext(3)\t   asynchronously add an entry\n\n       ldap_add_ext_s(3)   synchronously add an entry\n\n       ldap_sasl_bind(3)   asynchronously bind to the directory\n\n       ldap_sasl_bind_s(3) synchronously bind to the directory\n\n       ldap_unbind_ext(3)  synchronously unbind from the LDAP server and close\n\t\t\t   the connection\n\n       ldap_unbind(3) and ldap_unbind_s(3) are\n\t\t\t   equivalent to ldap_unbind_ext(3)\n\n       ldap_memfree(3)\t   dispose of memory allocated by LDAP routines.\n\n       ldap_compare_ext(3) asynchronously compare to a directory entry\n\n       ldap_compare_ext_s(3)\n\t\t\t   synchronously compare to a directory entry\n\n       ldap_delete_ext(3)  asynchronously delete an entry\n\n       ldap_delete_ext_s(3)\n\t\t\t   synchronously delete an entry\n\n       ld_errno(3)\t   LDAP error indication\n\n       ldap_errlist(3)\t   list of LDAP errors and their meanings\n\n       ldap_err2string(3)  convert LDAP error indication to a string\n\n       ldap_extended_operation(3)\n\t\t\t   asynchronously perform an arbitrary extended\n\t\t\t   operation\n\n       ldap_extended_operation_s(3)\n\t\t\t   synchronously perform an arbitrary extended\n\t\t\t   operation\n\n       ldap_first_attribute(3)\n\t\t\t   return first attribute name in an entry\n\n       ldap_next_attribute(3)\n\t\t\t   return next attribute name in an entry\n\n       ldap_first_entry(3) return first entry in a chain of search results\n\n       ldap_next_entry(3)  return next entry in a chain of search results\n\n       ldap_count_entries(3)\n\t\t\t   return number of entries in a search result\n\n       ldap_get_dn(3)\t   extract the DN from an entry\n\n       ldap_get_values_len(3)\n\t\t\t   return an attribute's values with lengths\n\n       ldap_value_free_len(3)\n\t\t\t   free memory allocated by ldap_get_values_len(3)\n\n       ldap_count_values_len(3)\n\t\t\t   return number of values\n\n       ldap_modify_ext(3)  asynchronously modify an entry\n\n       ldap_modify_ext_s(3)\n\t\t\t   synchronously modify an entry\n\n       ldap_mods_free(3)   free array of pointers to mod structures used by\n\t\t\t   ldap_modify_ext(3)\n\n       ldap_rename(3)\t   asynchronously rename an entry\n\n       ldap_rename_s(3)    synchronously rename an entry\n\n       ldap_msgfree(3)\t   free results allocated by ldap_result(3)\n\n       ldap_msgtype(3)\t   return the message type of a message from\n\t\t\t   ldap_result(3)\n\n       ldap_msgid(3)\t   return the message id of a message from\n\t\t\t   ldap_result(3)\n\n       ldap_search_ext(3)  asynchronously search the directory\n\n       ldap_search_ext_s(3)\n\t\t\t   synchronously search the directory\n\n       ldap_is_ldap_url(3) check a URL string to see if it is an LDAP URL\n\n       ldap_url_parse(3)   break up an LDAP URL string into its components\n\n       ldap_sort_entries(3)\n\t\t\t   sort a list of search results\n\n       ldap_sort_values(3) sort a list of attribute values\n\n       ldap_sort_strcasecmp(3)\n\t\t\t   case insensitive string comparison\n\nSEE ALSO\n       ldap.conf(5), slapd(8),\n       draft-ietf-ldapext-ldap-c-api-xx.txt <http://www.ietf.org>\n\nACKNOWLEDGEMENTS\n       OpenLDAP Software is developed and maintained by The OpenLDAP Project\n       <http://www.openldap.org/>.  OpenLDAP Software is derived from\n       University of Michigan LDAP 3.3 Release.\n\n       These API manual pages are loosely based upon descriptions provided in\n       the IETF/LDAPEXT C LDAP API Internet Draft, a (orphaned) work in\n       progress."
  manpageQuestion1: What is the primary purpose of the ldap library?
  manpageQuestion2: How would you use the ldap library to perform a search operation on an LDAP directory?
  manpageQuestion3: Can you provide an example of using the ldap library to bind to an LDAP server with SASL authentication?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ldap`.\n\n\n\nManpage text:\n\nOpenLDAP 2.4.28 \t\t  2011/11/24\t\t\t       LDAP(3)"
  manpageQuestion1: What is the primary purpose of the ldap command?
  manpageQuestion2: How can you search for entries in an LDAP directory using the ldap command?
  manpageQuestion3: What is the syntax for binding to an LDAP server with the ldap command?

