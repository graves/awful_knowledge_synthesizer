- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_disjointlistbox`.\n\n\n\nManpage text:\n\niwidgets::disjointlistbox(1)\t[incr Widgets]\t  iwidgets::disjointlistbox(1)\n\n______________________________________________________________________________\n\nNAME\n       iwidgets::disjointlistbox - Create and manipulate a disjointlistbox\n       widget\n\nSYNOPSIS\n       iwidgets::disjointlistbox pathName ?options?\n\nINHERITANCE\n       itk::Widget <- iwidgets::Disjointlistbox\n\nSTANDARD OPTIONS\n\n       activeBackground    selectBorderWidth   selectForeground\n       activeForeground    activeRelief        background\n       borderWidth\t   buttonPlacement     clientData\n       cursor\t\t   foreground\t       highlightColor\n       highlightThickness  disabledForeground  elementBorderWidth\n\n       See the \"options\" manual entry for details on the standard options.\n\nASSOCIATED OPTIONS\n       lhsButtonLabel rhsButtonLabel\n\n       See the \"button\" widget manual entry for details on the above\n       associated options.\n\n       labelFont lhsLabelText rhsLabelText\n\n       See the \"label\" widget manual entry for details on the above associated\n       options.\n\n       jump troughColor\n\n       See the \"scrollbar\" widget class manual entry for details on the above\n       associated options.\n\n       textBackground textFont\n       lhsItems rhsItems\n\n       See the \"scrolledlistbox\" widget manual entry for details on the above\n       associated options.\n\nWIDGET-SPECIFIC OPTIONS\n       Name:\t       buttonPlacement\n       Class:\t       ButtonPlacement\n       Command-Line Switch:\t      -buttonplacement\n\n\t      Specifies the placement of the insertion and removal buttons\n\t      relative to the scrolledlistbox widgetsn, bottom, or center.\n\t      The default is bottom.\n\n       Name:\t       lhsLabelText\n       Class:\t       LabelText\n       Command-Line Switch:\t      -lhslabeltext\n\n\t      Specifies the text for the label of the lhs scrolledlistbox.\n\t      The default is \"Available\".\n\n       Name:\t       rhsLabelText\n       Class:\t       LabelText\n       Command-Line Switch:\t      -rhslabeltext\n\n\t      Specifies the text for the label of the rhs scrolledlistbox.\n\t      The default is \"Available\".\n\n       Name:\t       lhsButtonLabel\n       Class:\t       LabelText\n       Command-Line Switch:\t      -lhsbuttonlabel\n\n\t      Specifies the text for the button of the lhs scrolledlistbox.\n\t      The default is \"Insert >>\".\n\n       Name:\t       rhsButtonLabel\n       Class:\t       LabelText\n       Command-Line Switch:\t      -rhsbuttonlabel\n\n\t      Specifies the text for the button of the rhs scrolledlistbox.\n\t      The default is \"<< Remove\".\n\n       Name:\t       lhsSortOption\n       Class:\t       LhsSortOption\n       Command-Line Switch:\t      -lhssortoption\n\n\t      Specifies the sort function to be applied to the lhs\n\t      scrolledlistbox after items are inserted. Accepts the same sort\n\t      options as the scrolledlistbox sort method (Tcl's lsort\n\t      command). If \"none\" is specified, the inserted items are\n\t      appended to the end of the list, and no sorting is performed.\n\t      The default is \"increasing\".\n\n       Name:\t       rhsSortOption\n       Class:\t       RhsSortOption\n       Command-Line Switch:\t      -rhssortoption\n\n\t      Specifies the sort function to be applied to the rhs\n\t      scrolledlistbox after items are inserted. Accepts the same sort\n\t      options as the scrolledlistbox sort method (Tcl's lsort\n\t      command). If \"none\" is specified, the inserted items are\n\t      appended to the end of the list, and no sorting is performed.\n\t      The default is \"increasing\".\n\n______________________________________________________________________________\n\nDESCRIPTION\n       The iwidgets::disjointlistbox command creates a disjoint pair of\n       listboxs similar to the OSF/Motif \"Book\" printing dialog of the\n       \"FrameMaker\" program.  It is implementation constists of a two\n       Scrolledlistboxs, 2 buttons, and 2 labels.\n\n       The disjoint behavior of this widget exists between the interaction of\n       the two Scrolledlistboxes with one another.  That is, a given instance\n       of a Disjointlistbox will never exist, without the aid of a hack\n       magician, which has Scrolledlistbox widgets with items in common.  That\n       means the relationship between the two is maintained similar to that of\n       disjoint sets.\n\n       Users may transfer items between the two Listbox widgets using the the\n       two buttons.\n\n       Options exists which include the ability to configure the \"items\"\n       displayed by the 2 Scrolledlistboxes and to control the placement of\n       the insertion and removal buttons.\n\nMETHODS\n       The iwidgets::disjointlistbox command creates a new Tcl command whose\n       name is pathName.  This command may be used to invoke various\n       operations on the widget.  It has the following general form:\n\n\t      pathName option ?arg arg ...?\n\n       Option and the args determine the exact behavior of the command.  The\n       following commands are possible for disjointlistbox widgets:"
  manpageQuestion1: What is the primary purpose of the iwidgets::disjointlistbox widget?
  manpageQuestion2: How can you configure the labels for the left and right scrolled listboxes in an iwidgets::disjointlistbox?
  manpageQuestion3: Can you provide an example of using the iwidgets::disjointlistbox command to create a widget with custom button labels and default sort options?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_disjointlistbox`.\n\n\n\nManpage text:\n\nWIDGET-SPECIFIC METHODS\n       pathName cget option\n\t      Returns the current value of the configuration option given by\n\t      option.  Option may have any of the values accepted by the\n\t      iwidgets::disjointlistbox command.\n\n       pathName configure ?option? ?value option value ...?\n\t      Query or modify the configuration options of the widget.\tIf no\n\t      option is specified, returns a list describing all of the\n\t      available options for pathName (see Tk_ConfigureInfo for\n\t      information on the format of this list).\tIf option is specified\n\t      with no value, then the command returns a list describing the\n\t      one named option (this list will be identical to the\n\t      corresponding sublist of the value returned if no option is\n\t      specified).  If one or more option-value pairs are specified,\n\t      then the command modifies the given widget option(s) to have the\n\t      given value(s);  in this case the command returns an empty\n\t      string.  Option may have any of the values accepted by the\n\t      iwidgets::disjointlistbox command.\n\n       pathName setlhs\n\t      Set the current contents of the left-most Scrolledlistbox with\n\t      the input list of items.\tRemoves all (if any) items from the\n\t      right-most Scrolledlistbox which exist in the input list option\n\t      to maintain the disjoint property between the two\n\n       pathName setrhs\n\t      Set the current contents of the right-most Scrolledlistbox with\n\t      the input list of items.\tRemoves all (if any) items from the\n\t      left-most Scrolledlistbox which exist in the input list option\n\t      to maintain the disjoint property between the two\n\n       pathName getlhs\n\t      Returns the current contents of the left-most Scrolledlistbox\n\n       pathName getrhs\n\t      Returns the current contents of the right-most Scrolledlistbox\n\n       pathName insertlhs\n\t      Add the input list of items to the current contents of the left-\n\t      most Scrolledlistbox.  Removes all (if any) items from the\n\t      right-most Scrolledlistbox which exist in the input list option\n\t      to maintain the disjoint property between the two\n\n       pathName insertrhs\n\t      Add the input list of items to the current contents of the\n\t      right-most Scrolledlistbox.  Removes all (if any) items from the\n\t      left-most Scrolledlistbox which exist in the input list option\n\t      to maintain the disjoint property between the two.\n\nCOMPONENTS\n       Name:\t       lhs\n       Class:\t       Scrolledlistbox\n\n\t      The lhs component is the scrolledlistbox for the rhs button.\n\t      See the \"scrolledlistbox\" widget manual entry for details on the\n\t      lhs component item.\n\n       Name:\t       rhs\n       Class:\t       Scrolledlistbox\n\n\t      The rhs component is the scrolledlistbox for the rhs button.\n\t      See the \"scrolledlistbox\" widget manual entry for details on the\n\t      rhs component item.\n\n       Name:\t       lhsbutton\n       Class:\t       utton\n\n\t      The lhsbutton component is the button for users to remove\n\t      selected items from the lhs Scrolledlistbox.  See the \"button\"\n\t      widget manual entry for details  on the lhs button component.\n\n       Name:\t       rhsbutton\n       Class:\t       Button\n\n\t      The rhsbutton component is the button for users to remove\n\t      selected items from the rhs Scrolledlistbox.  See the \"button\"\n\t      widget manual entry for details  on the rhs button component.\n\n       Name:\t       lhsCount\n       Class:\t       Label\n\n\t      The lhsCount component is the label for displaying a count of\n\t      the current items in the Scrolledlistbox.  See the \"Label\"\n\t      widget manual entry for details  on the lhsCount label\n\t      component.\n\n       Name:\t       rhsCount\n       Class:\t       Label\n\n\t      The rhsCount component is the label for displaying a count of\n\t      the current items in the Scrolledlistbox.  See the \"Label\"\n\t      widget manual entry for details  on the rhsCount label\n\t      component.\n\nEXAMPLE\n\n\t      package require Iwidgets 4.0\n\t      iwidgets::disjointlistbox .dlb\n\t      pack .dlb -padx 10 -pady 10 -fill both -expand yes"
  manpageQuestion1: What is the primary purpose of the iwidgets::disjointlistbox tool?
  manpageQuestion2: How would you use the iwidgets::disjointlistbox to set the contents of the left-most Scrolledlistbox with a list of items?
  manpageQuestion3: Can you provide an example of using the iwidgets::disjointlistbox to add a list of items to the right-most Scrolledlistbox while maintaining the disjoint property?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_disjointlistbox`.\n\n\n\nManpage text:\n\nAUTHOR(S)\n       John A. Tucker\n\n       Anthony Parent\n\nKEYWORDS\n       disjointlistbox, widget\n\nTk\t\t\t\t\t\t  iwidgets::disjointlistbox(1)"
  manpageQuestion1: What is the primary purpose of the iwidgets_disjointlistbox resource?
  manpageQuestion2: How would you use the iwidgets_disjointlistbox to create a list box that allows users to select multiple non-overlapping items?
  manpageQuestion3: Can you provide an example of configuring the iwidgets_disjointlistbox to display a list of items and restrict user selection to only one item at a time?

