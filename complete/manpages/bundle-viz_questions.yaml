- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `bundle-viz`.\n\n\n\nManpage text:\n\nBUNDLE-VIZ(1)\t\t\t\t\t\t\t BUNDLE-VIZ(1)\n\nNAME\n       bundle-viz - Generates a visual dependency graph for your Gemfile\n\nSYNOPSIS\n       bundle viz [--file=FILE] [--format=FORMAT] [--requirements] [--version]\n       [--without=GROUP GROUP]\n\nDESCRIPTION\n       viz generates a PNG file of the current Gemfile(5) as a dependency\n       graph. viz requires the ruby-graphviz gem (and its dependencies).\n\n       The associated gems must also be installed via bundle install(1)\n       bundle-install.1.html.\n\nOPTIONS\n       --file, -f\n\t      The name to use for the generated file. See --format option\n\n       --format, -F\n\t      This is output format option. Supported format is png, jpg, svg,\n\t      dot ...\n\n       --requirements, -R\n\t      Set to show the version of each required dependency.\n\n       --version, -v\n\t      Set to show each gem version.\n\n       --without, -W\n\t      Exclude gems that are part of the specified named group.\n\n\n\t\t\t\t November 2018\t\t\t BUNDLE-VIZ(1)"
  manpageQuestion1: What is the primary purpose of the bundle-viz tool?
  manpageQuestion2: How would you use bundle-viz to generate a PNG visualization of your Gemfile's dependencies with the default settings?
  manpageQuestion3: Can you provide an example of using bundle-viz to generate a dependency graph in SVG format that excludes gems from the 'production' group?

