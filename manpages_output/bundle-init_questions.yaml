- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `bundle-init`.\n\n\n\nManpage text:\n\nBUNDLE-INIT(1)\t\t\t\t\t\t\tBUNDLE-INIT(1)\n\nNAME\n       bundle-init - Generates a Gemfile into the current working directory\n\nSYNOPSIS\n       bundle init [--gemspec=FILE]\n\nDESCRIPTION\n       Init generates a default [Gemfile(5)][Gemfile(5)] in the current\n       working directory. When adding a [Gemfile(5)][Gemfile(5)] to a gem with\n       a gemspec, the --gemspec option will automatically add each dependency\n       listed in the gemspec file to the newly created\n       [Gemfile(5)][Gemfile(5)].\n\nOPTIONS\n       --gemspec\n\t      Use the specified .gemspec to create the\n\t      [Gemfile(5)][Gemfile(5)]\n\nFILES\n       Included in the default [Gemfile(5)][Gemfile(5)] generated is the line\n       # frozen_string_literal: true. This is a magic comment supported for\n       the first time in Ruby 2.3. The presence of this line results in all\n       string literals in the file being implicitly frozen.\n\nSEE ALSO\n       Gemfile(5) http://bundler.io/man/gemfile.5.html\n\n\t\t\t\t November 2018\t\t\tBUNDLE-INIT(1)"
  manpageQuestion1: What is the primary purpose of the bundle-init command?
  manpageQuestion2: How would you use bundle-init to generate a Gemfile based on a specific .gemspec file?
  manpageQuestion3: Can you provide an example of using bundle-init to create a Gemfile with the default settings?

