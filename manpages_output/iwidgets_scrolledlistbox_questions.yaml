- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_scrolledlistbox`.\n\n\n\nManpage text:\n\niwidgets::scrolledlistbox(1)\t[incr Widgets]\t  iwidgets::scrolledlistbox(1)\n\n______________________________________________________________________________\n\nNAME\n       iwidgets::scrolledlistbox - Create and manipulate scrolled listbox\n       widgets\n\nSYNOPSIS\n       iwidgets::scrolledlistbox pathName ?options?\n\nINHERITANCE\n       itk::Widget <- iwidgets::Labeledwidget <- iwidgets::Scrolledwidget <-\n       iwidgets::Scrolledlistbox\n\nSTANDARD OPTIONS\n\n       activeBackground  background\t   borderWidth\t      cursor\n       exportSelection\t foreground\t   highlightColor     highlightThickness\n       relief\t\t selectBackground  selectBorderWidth  selectForeground\n\n       See the \"options\" manual entry for details on the standard options.\n\nASSOCIATED OPTIONS\n       selectMode      listvariable\n\n       See the \"listbox\" widget manual entry for details on the above\n       associated options.\n\n       activeRelief    elementBorderwidth\t      jumptroughColor\n\n       See the \"scrollbar\" widget manual entry for details on the above\n       associated options.\n\nINHERITED OPTIONS\n       disabledForeground\t      labelBitmap     labelFontlabelImage\n       labelMargin     labelPos       labelText       labelVariable\n       state\t       sticky\n\n       See the \"labeledwidget\" class manual entry for details on the inherited\n       options.\n\nWIDGET-SPECIFIC OPTIONS\n       Name:\t       dblClickCommand\n       Class:\t       Command\n       Command-Line Switch:\t      -dblclickcommand\n\n\t      Specifies a Tcl command procedure which is called when an item\n\t      is double clicked.  Typically this occurs when mouse button 1 is\n\t      double clicked over an item.  Selection policy does not matter.\n\n       Name:\t       height\n       Class:\t       Height\n       Command-Line Switch:\t      -height\n\n\t      Specifies the height of the scrolled list box as an entire unit.\n\t      The value may be specified in any of the forms acceptable to\n\t      Tk_GetPixels.  Any additional space needed to display the other\n\t      components such as labels, margins, and scrollbars force the\n\t      listbox to be compressed.  A value of zero along with the same\n\t      value for the width causes the value given for the visibleitems\n\t      option to be applied which administers geometry constraints in a\n\t      different manner.  The default height is zero.\n\n       Name:\t       hscrollMode\n       Class:\t       ScrollMode\n       Command-Line Switch:\t      -hscrollmode\n\n\t      Specifies the the display mode to be used for the horizontal\n\t      scrollbar: static, dynamic, or none.  In static mode, the scroll\n\t      bar is displayed at all times.  Dynamic mode displays the scroll\n\t      bar as required, and none disables the scroll bar display.  The\n\t      default is static.\n\n       Name:\t       sbWidth\n       Class:\t       Width\n       Command-Line Switch:\t      -sbwidth\n\n\t      Specifies the width of the scrollbar in any of the forms\n\t      acceptable to Tk_GetPixels.  The default width is 15 pixels..\n\n       Name:\t       scrollMargin\n       Class:\t       Margin\n       Command-Line Switch:\t      -scrollmargin\n\n\t      Specifies the distance between the listbox and scrollbar in any\n\t      of the forms acceptable to Tk_GetPixels.\tThe default is 3\n\t      pixels.\n\n       Name:\t       selectionCommand\n       Class:\t       Command\n       Command-Line Switch:\t      -selectioncommand\n\n\t      Specifies a Tcl command procedure which is called when an item\n\t      is selected.  Selection policy does not matter.\n\n       Name:\t       state\n       Class:\t       State\n       Command-Line Switch:\t      -state\n\n\t      Specifies one of two states for the listbox: normal or disabled.\n\t      If the listbox is disabled then selection is ignored.  The\n\t      default is normal.\n\n       Name:\t       textBackground\n       Class:\t       Background\n       Command-Line Switch -textbackground\n\n\t      Specifies the background color for the listbox.  This allows the\n\t      background within the listbox to be different from the normal\n\t      background color.\n\n       Name:\t       textFont\n       Class:\t       Font\n       Command-Line Switch:\t      -textfont\n\n\t      Specifies the font to be used for text in the listbox.  This\n\t      allows for the font associated with text internal to the\n\t      scrolled listbox to be different than the font for labels.\n\n       Name:\t       visibleitems\n       Class:\t       VisibleItems\n       Command-Line Switch:\t      -visibleitems\n\n\t      Specifies the widthxheight in characters and lines for the\n\t      listbox.\tThis option is only administered if the width and\n\t      height options are both set to zero, otherwise they take\n\t      precedence.  The default value is 20x10.\tWith the visibleitems\n\t      option engaged, geometry constraints are maintained only on the\n\t      listbox.\tThe size of the other components such as labels,\n\t      margins, and scroll bars, are additive and independent,\n\t      effecting the overall size of the scrolled list box.  In\n\t      contrast, should the width and height options have non zero\n\t      values, they are applied to the scrolled list box as a whole.\n\t      The listbox is compressed or expanded to maintain the geometry\n\t      constraints.\n\n       Name:\t       vscrollMode\n       Class:\t       ScrollMode\n       Command-Line Switch:\t      -vscrollmode\n\n\t      Specifies the the display mode to be used for the vertical\n\t      scrollbar: static, dynamic, or none.  In static mode, the scroll\n\t      bar is displayed at all times.  Dynamic mode displays the scroll\n\t      bar as required, and none disables the scroll bar display.  The\n\t      default is static.\n\n       Name:\t       width\n       Class:\t       Width\n       Command-Line Switch:\t      -width\n\n\t      Specifies the width of the scrolled list box as an entire unit.\n\t      The value may be specified in any of the forms acceptable to\n\t      Tk_GetPixels.  Any additional space needed to display the other\n\t      components such as labels, margins, and scrollbars force the\n\t      listbox to be compressed.  A value of zero along with the same\n\t      value for the height causes the value given for the visibleitems\n\t      option to be applied which administers geometry constraints in a\n\t      different manner.  The default width is zero.\n______________________________________________________________________________"
  manpageQuestion1: What is the primary purpose of the iwidgets::scrolledlistbox widget?
  manpageQuestion2: How would you configure the iwidgets::scrolledlistbox to have a height of 100 pixels and a scroll margin of 5 pixels?
  manpageQuestion3: Can you provide an example of using the iwidgets::scrolledlistbox with a selection command that prints the selected item to the console?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_scrolledlistbox`.\n\n\n\nManpage text:\n\nDESCRIPTION\n       The iwidgets::scrolledlistbox command creates a scrolled listbox with\n       additional options to manage horizontal and vertical scrollbars.  This\n       includes options to control which scrollbars are displayed and the\n       method, i.e. statically or dynamically.\n\n\nMETHODS\n       The iwidgets::scrolledlistbox command creates a new Tcl command whose\n       name is pathName.  This command may be used to invoke various\n       operations on the widget.  It has the following general form:\n\n\t      pathName option ?arg arg ...?\n\n       Option and the args determine the exact behavior of the command.\n\n       Many of the widget commands for a scrolledlistbox take as one argument\n       an indicator of which entry of the list box to operate on.  These\n       indicators are called indexes and may be specified in any of the\n       following forms:\n\n       number\t   Specifies the element as a numerical index, where 0\n\t\t   corresponds to the first element in the listbox.\n\n       active\t   Indicates the element that has the location cursor.\tThis\n\t\t   element will be displayed with an underline when the\n\t\t   listbox has the keyboard focus, and it is specified with\n\t\t   the activate widget command.\n\n       anchor\t   Indicates the anchor point for the selection, which is set\n\t\t   with the selection anchor widget command.\n\n       end\t   Indicates the end of the listbox.  For some commands this\n\t\t   means just after the last element; for other commands it\n\t\t   means the last element.\n\n       @x,y\t   Indicates the element that covers the point in the listbox\n\t\t   window specified by x and y (in pixel coordinates).\tIf no\n\t\t   element covers that point, then the closest element to that\n\t\t   point is used.\n\n       pattern\t   If the index doesn't satisfy one of the above forms then\n\t\t   this form is used.  Pattern is pattern-matched against the\n\t\t   items in the list box, in order from the top down, until a\n\t\t   matching entry is found.  The rules of Tcl_StringMatch are\n\t\t   used.\n\n       The following widget commands are possible for scrolledlistbox widgets:"
  manpageQuestion1: What is the primary purpose of the iwidgets_scrolledlistbox resource?
  manpageQuestion2: How would you use the iwidgets_scrolledlistbox command to set the active element to the second item in a listbox?
  manpageQuestion3: Can you provide an example of using the iwidgets_scrolledlistbox command to select an item based on its position in the listbox?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_scrolledlistbox`.\n\n\n\nManpage text:\n\nASSOCIATED METHODS\n       activate        bbox\t      curselection    delete\n       get\t       index\t      insert\t      itemconfigure\n       nearest\t       scan\t      see\t      selection\n       size\t       xview\t      yview\n\n       See the \"listbox\" manual entry for details on the associated methods.\n\n\nWIDGET-SPECIFIC METHODS\n       pathName cget option\n\t      Returns the current value of the configuration option given by\n\t      option.  Option may have any of the values accepted by the\n\t      iwidgets::scrolledlistbox command.\n\n       pathName clear\n\t      Clears the listbox of all items.\n\n       pathName configure ?option? ?value option value ...?\n\t      Query or modify the configuration options of the widget.\tIf no\n\t      option is specified, returns a list describing all of the\n\t      available options for pathName (see Tk_ConfigureInfo for\n\t      information on the format of this list).\tIf option is specified\n\t      with no value, then the command returns a list describing the\n\t      one named option (this list will be identical to the\n\t      corresponding sublist of the value returned if no option is\n\t      specified).  If one or more option-value pairs are specified,\n\t      then the command modifies the given widget option(s) to have the\n\t      given value(s);  in this case the command returns an empty\n\t      string.  Option may have any of the values accepted by the\n\t      iwidgets::scrolledlistbox command.\n\n       pathName getcurselection\n\t      Returns the contents of the listbox element indicated by the\n\t      current selection indexes.  Short cut version of get and\n\t      curselection command combination.\n\n       pathName justify direction\n\t      Justifies the list contents via teh scroll bars in one of four\n\t      directions: left, right, top, or bottom.\n\n       pathName selecteditemcount\n\t      Returns the number of items currently selected in the list.\n\n       pathName sort order\n\t      Sort the current list in any of the forms accepted by Tcl's\n\t      lsort command.  Also accepts either ascending or descending\n\t      order."
  manpageQuestion1: What is the primary purpose of the iwidgets_scrolledlistbox resource?
  manpageQuestion2: How can you clear all items from an iwidgets_scrolledlistbox widget using its associated methods?
  manpageQuestion3: Can you explain how to configure the iwidgets_scrolledlistbox widget to sort its list in ascending order using the pathName method?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_scrolledlistbox`.\n\n\n\nManpage text:\n\nCOMPONENTS\n       Name:\t       listbox\n       Class:\t       listbox\n\n\t      The listbox component is the listbox widget.  See the \"listbox\"\n\t      widget manual entry for details on the listbox component item.\n\n       Name:\t       horizsb\n       Class:\t       Scrollbar\n\n\t      The horizsb component is the horizontal scroll bar.  See the\n\t      \"scrollbar\" widget manual entry for details on the horizsb\n\t      component item.\n\n       Name:\t       vertsb\n       Class:\t       Scrollbar\n\n\t      The vertsb component is the vertical scroll bar.\tSee the\n\t      \"scrollbar\" widget manual entry for details on the vertsb\n\t      component item.\n\n\nEXAMPLE\n\n\t       package require Iwidgets 4.0\n\t       option add *textBackground white\n\t       proc selCmd {} {\n\t\t  puts stdout \"[.slb getcurselection]\"\n\t       }\n\t       proc defCmd {} {\n\t\t  puts stdout \"Double Click\"\n\t\t  return [selCmd]\n\t       }\n\t       iwidgets::scrolledlistbox .slb -selection single \\\n\t\t  -vscrollmode static -hscrollmode dynamic -labeltext \"List\" \\\n\t\t  -selectioncommand selCmd -dblclickcommand defCmd\n\t       pack .slb -padx 10 -pady 10 -fill both -expand yes\n\t       .slb insert end {Hello {Out There} World}"
  manpageQuestion1: What is the primary purpose of the iwidgets_scrolledlistbox resource?
  manpageQuestion2: How would you use the iwidgets_scrolledlistbox to create a scrollable listbox with horizontal scrolling enabled and a label?
  manpageQuestion3: Can you provide an example of configuring the iwidgets_scrolledlistbox to handle selection commands and double-click events?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_scrolledlistbox`.\n\n\n\nManpage text:\n\nAUTHOR\n       Mark L. Ulferts\n\nKEYWORDS\n       scrolledlistbox, listbox, widget\n\nTk\t\t\t\t\t\t  iwidgets::scrolledlistbox(1)"
  manpageQuestion1: What is the primary purpose of the iwidgets_scrolledlistbox resource?
  manpageQuestion2: How would you use the iwidgets_scrolledlistbox to create a scrollable listbox widget in a Tcl/Tk application?
  manpageQuestion3: Can you provide an example of configuring the iwidgets_scrolledlistbox to have a specific number of visible items and scrollbars?

