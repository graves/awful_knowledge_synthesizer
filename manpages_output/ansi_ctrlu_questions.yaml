- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ansi_ctrlu`.\n\n\n\nManpage text:\n\nterm::ansi::ctrl::unix(n)      Terminal control      term::ansi::ctrl::unix(n)\n\n______________________________________________________________________________\n\nNAME\n       term::ansi::ctrl::unix - Control operations and queries\n\nSYNOPSIS\n       package require Tcl  8.4\n\n       package require term::ansi::ctrl::unix  ?0.1?\n\n       ::term::ansi::ctrl::unix::import ?ns? ?arg...?\n\n       ::term::ansi::ctrl::unix::raw\n\n       ::term::ansi::ctrl::unix::raw\n\n       ::term::ansi::ctrl::unix::columns\n\n       ::term::ansi::ctrl::unix::rows\n\n______________________________________________________________________________\n\nDESCRIPTION\n       WARNING: This package is unix-specific and depends on the availability\n       of two unix system commands for terminal control, i.e. stty and tput,\n       both of which have to be found in the $PATH. If any of these two\n       commands is missing the loading of the package will fail.\n\n       The package provides commands to switch the standard input of the\n       current process between raw and cooked input modes, and to query the\n       size of terminals, i.e. the available number of columns and lines.\n\nAPI\n   INTROSPECTION\n       ::term::ansi::ctrl::unix::import ?ns? ?arg...?\n\t      This command imports some or all attribute commands into the\n\t      namespace ns. This is by default the namespace ctrl. Note that\n\t      this is relative namespace name, placing the imported command\n\t      into a child of the current namespace. By default all commands\n\t      are imported, this can howver be restricted by listing the names\n\t      of the wanted commands after the namespace argument.\n\n   OPERATIONS\n       ::term::ansi::ctrl::unix::raw\n\t      This command switches the standard input of the current process\n\t      to raw input mode. This means that from then on all characters\n\t      typed by the user are immediately reported to the application\n\t      instead of waiting in the OS buffer until the Enter/Return key\n\t      is received.\n\n       ::term::ansi::ctrl::unix::raw\n\t      This command switches the standard input of the current process\n\t      to cooked input mode. This means that from then on all\n\t      characters typed by the user are kept in OS buffers for editing\n\t      until the Enter/Return key is received.\n\n       ::term::ansi::ctrl::unix::columns\n\t      This command queries the terminal connected to the standard\n\t      input for the number of columns available for display.\n\n       ::term::ansi::ctrl::unix::rows\n\t      This command queries the terminal connected to the standard\n\t      input for the number of rows (aka lines) available for display.\n\nBUGS, IDEAS, FEEDBACK\n       This document, and the package it describes, will undoubtedly contain\n       bugs and other problems.  Please report such in the category term of\n       the Tcllib SF Trackers\n       [http://sourceforge.net/tracker/?group_id=12883].  Please also report\n       any ideas for enhancements you may have for either package and/or\n       documentation.\n\nKEYWORDS\n       ansi, columns, control, cooked, input mode, lines, raw, rows, terminal\n\nCATEGORY\n       Terminal control\n\nCOPYRIGHT\n       Copyright (c) 2006 Andreas Kupries <andreas_kupries@users.sourceforge.net>"
  manpageQuestion1: What is the primary purpose of the term::ansi::ctrl::unix package?
  manpageQuestion2: How can you switch the standard input of a Tcl script to raw mode using this package?
  manpageQuestion3: What command can be used to determine the number of columns available on a terminal connected to standard input?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ansi_ctrlu`.\n\n\n\nManpage text:\n\nterm\t\t\t\t      0.1\t     term::ansi::ctrl::unix(n)"
  manpageQuestion1: What is the primary purpose of the ansi_ctrlu resource?
  manpageQuestion2: How would you use ansi_ctrlu to convert a string containing ANSI escape codes into a raw form?
  manpageQuestion3: Can you provide an example of using ansi_ctrlu to decode a raw string back into ANSI escape codes?

