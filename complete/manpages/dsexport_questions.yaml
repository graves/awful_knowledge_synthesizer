- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dsexport`.\n\n\n\nManpage text:\n\ndsexport(1)\t\t    General Commands Manual\t\t   dsexport(1)\n\nNAME\n     dsexport – export records from OpenDirectory\n\nSYNOPSIS\n     dsexport [--N] [-r record_list] [-e exclude_attributes]\n\t      [-a address -u username [-p password]] output_file node_path\n\t      record_type\n\nDESCRIPTION\n     The dsexport utility exports records from Open Directory.\n\n     The first argument is the path to the output file.  If the file already\n     exists it will be overwritten.\n\n     The second argument is the path to the OpenDirectory node from which the\n     records will be read.\n\n     The third argument is the type of record to export.  If the record type\n     does not begin with ‘dsRecTypeStandard:’ or ‘dsRecTypeNative:’, the\n     dsexport utility will determine if the node supports a standard attribute\n     by the specified name; otherwise, dsexport will assume that the record\n     type is native.  A warning will be printed if the record type is\n     converted.  Standard record types can be listed using the following\n     command: ‘dscl -raw . -list /’."
  manpageQuestion1: What is the primary purpose of the dsexport tool?
  manpageQuestion2: How would you use dsexport to export all user records from an OpenDirectory node located at /Network/Servers/MyServer and save them to a file named users.ldif?
  manpageQuestion3: Can you provide an example of using dsexport to export only the 'username' and 'realname' attributes from a specific record type, excluding other attributes, to an output file?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dsexport`.\n\n\n\nManpage text:\n\nOPTIONS\n     The options are as follows:\n\n     --N     Export all attributes, including native attributes.  By default,\n\t     dsexport only exports standard attributes.\n\n     -r record_list\n\t     Comma-separated list of records to export from the specified\n\t     node.  The -r option may be used multiple times to specify\n\t     additional records to export.  If the -r option is not specified,\n\t     dsexport will attempt to export all records.\n\n     -e exclude\n\t     Comma-separated list of attributes that should not be exported.\n\t     The -e option may be used multiple times to specify additional\n\t     attributes to exclude.  The following attributes are always\n\t     excluded: ‘dsAttrTypeStandard:AppleMetaNodeLocation’,\n\t     ‘dsAttrTypeStandard:RecordType’, ‘dsAttrTypeNative:objectClass’.\n\n     -a address\n\t     Address of the desired proxy machine.\n\n     -u username\n\t     Username to use for the proxy connection\n\n     -p password\n\t     Password to use for the proxy connection.\tIf the -p option is\n\t     not specified, dsexport will interactively prompt for the\n\t     password."
  manpageQuestion1: What is the primary purpose of the dsexport tool?
  manpageQuestion2: How can you use dsexport to export all records from a node while excluding specific attributes?
  manpageQuestion3: Can you provide an example of using dsexport to export a specific record from a node with proxy authentication?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dsexport`.\n\n\n\nManpage text:\n\nNOTES\n     When using an LDAP node, please be aware that dsexport can only export as\n     many records as the LDAP server is willing to return.  If the LDAP server\n     has several thousand users, you may want to raise the maximum number of\n     search results that the server returns.  This can be done in Server Admin\n     (my.server.com>OpenDirectory>Settings>Protocols tab).  By default this is\n     set to 11000 results.\n\nEXAMPLES\n     Export all user records from the local node to ‘export.out’:\n\n\t   $ dsexport export.out /Local/Default dsRecTypeStandard:Users\n\n     Export the group records for ‘admin’ and ‘staff’ from the LDAPv3 node on\n     a proxy machine ‘proxy.machine.com’:\n\n\t   $ dsexport export.out /LDAPv3/127.0.0.1 dsRecTypeStandard:Groups -r\n\t   admin,staff -a proxy.machine.com -u diradmin -p password\n\n     Export augmented users from the LDAPv3 node, including native attributes\n     but excluding the PasswordPlus attribute:\n\n\t   $ dsexport augments.out /LDAPv3/127.0.0.1\n\t   dsRecTypeStandard:Augments --N -e \"dsAttrTypeStandard:PasswordPlus\""
  manpageQuestion1: What is the primary purpose of the dsexport tool?
  manpageQuestion2: How would you use dsexport to export all user records from the local node to a file named 'export.out'?
  manpageQuestion3: Can you provide an example of using dsexport to export group records for the 'admin' and 'staff' groups from an LDAPv3 node on a proxy machine?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dsexport`.\n\n\n\nManpage text:\n\nEXIT STATUS\n     The dsexport utility exits 0 on success, and >0 if an error occurs.\n\nSEE ALSO\n     dscl(1), dsimport(1), DirectoryService(8)\n\nmacOS 15.3\t\t       20 November 2008 \t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the dsexport tool?
  manpageQuestion2: How would you use dsexport to export user account information from a macOS system?
  manpageQuestion3: Can you provide an example of using dsexport to export a specific directory service entry with the key 'com.apple.user.info'?

