- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `auto_master`.\n\n\n\nManpage text:\n\nAUTO_MASTER(5)\t\t      File Formats Manual\t\tAUTO_MASTER(5)\n\nNAME\n     auto_master – automounter master map\n\nDESCRIPTION\n     The auto_master file contains a list of the directories that are to be\n     automounted.  Associated with each directory is the name of a map that\n     lists the locations of the filesystems to be automounted there.  The\n     default map looks like this:\n\n\t   #\n\t   # Automounter master map\n\t   #\n\t   +auto_master \t   # Use directory service\n\t   #/net\t\t   -hosts\t   -nobrowse,hidefromfinder,nosuid\n\t   /home\t\t   auto_home\t   -nobrowse,hidefromfinder\n\t   /Network/Servers\t   -fstab\n\t   /-\t\t\t   -static\n\n     A “#” is the comment character. All characters from it to the end of line\n     are ignored.  A line beginning with “+” and followed by a name, indicates\n     the name of a file or map accessible from a Directory Service source such\n     as NIS or LDAP; the master map entries in that file or map are included\n     at this point in the master map.  A line that specifies a map to be\n     mounted has the format:"
  manpageQuestion1: What is the primary purpose of the auto_master file in the context of automounting on a macOS system?
  manpageQuestion2: How would you configure the auto_master file to automount the /home directory using the auto_home map with specific options?
  manpageQuestion3: Can you provide an example of how to include a Directory Service map, such as NIS or LDAP, into the auto_master file?

- prompt: |-
    You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `auto_master`.



    Manpage text:

    mountpoint map -options

         where mountpoint is the directory on which the map is to be mounted, map
         is the name of the map to be mounted, and options is an optional, comma-
         separated list of default mount options to be used by any entries in the
         map that do not have their own mount options.  The nobrowse option is
         used on maps that have the potential to produce entries too numerous for
         browsing to be practical. This option as used in the master map is
         distinct from nobrowse used as a Mac OS X mount option, which affects the
         visibility of the mount to the Finder.  The hidefromfinder option is used
         on maps that shouldn't show up as folders in the Finder; it causes the
         UF_HIDDEN flag to be set on the root directory of the map.

         A map name beginning with / is the pathname of a file containing the map,
         otherwise the name represents a map to be found as a file in /etc or to
         be read from Directory Service (and thus from whatever sources Directory
         Service uses, such as NIS or LDAP servers).
  manpageQuestion1: What is the primary purpose of the auto_master resource in macOS?
  manpageQuestion2: How can you configure auto_master to mount a custom map located in /etc/mymap.conf with default options?
  manpageQuestion3: What is the difference between the nobrowse and hidefromfinder options in the auto_master context?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `auto_master`.\n\n\n\nManpage text:\n\nNote that, in order to get automounter maps from NIS, the \"BSD Flat File\n     and NIS\" plugin must, in the Directory Utility application, be enabled\n     and configured to \"Use NIS domain for authentication\".\n\n     If more than one entry in the master map has the same mountpoint then all\n     but the first are ignored.  For instance, in the following master map:\n\n\t   /shared\t   my_auto_shared\n\t   +auto_master\n\n     The /shared entry overrides any /shared specification imported from the\n     network auto_master.\n\nAUTOMOUNTER MAPS\n     Automounter maps associate directories with the locations of filesystems\n     that are to be mounted when the directory is accessed.  Map entries have\n     the general form:\n\n\t   key location\n\n     These map entries may be represented by lines in a file, NIS or LDAP\n     tables indexed by the key, or from output of an executable map.  Most\n     commonly, the location is simply the name of an NFS server and the path\n     to an exported file system, e.g.\n\n\t   local   mynfs:/export/local"
  manpageQuestion1: What is the primary purpose of the auto_master resource?
  manpageQuestion2: How would you configure the auto_master map to use NIS for automounter maps?
  manpageQuestion3: Can you provide an example of a typical entry in the auto_master map file and explain its components?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `auto_master`.\n\n\n\nManpage text:\n\nA location can also represent multiple mounts, where each is associated\n     with a relative path, for example:\n\n\t   pkg\t   \\\n\t\t   /data   mynfs:/export/pkg/data \\\n\t\t   /bin    mynfs:/export/pkg/bin  \\\n\t\t   /man    mynfs:/export/pkg/man\n\n     Reference to this entry will provide access to any of three exported file\n     systems from the server, each via its own subdirectory.  Each of these\n     sub-mounts will be done only when referenced.  Note the use of a\n     backslash to escape the newline so that the automounter will read these\n     lines as a single map entry.\n\n     The location can be preceded by a comma-separated list of mount options\n     with a prepended “-”.  For example:\n\n\t   bin\t   -ro,nosuid  mynfs:/export/bin\n\n     For file system types other than NFS, the mount option -fstype=⟨type⟩ can\n     be used to specify the file system type.  The location would be in the\n     form expected by the mount command for that file system type.  For\n     example:\n\n\t   smb\t   -fstype=smb //guest@smbserver/share\n\t   afp\t   -fstype=afp afp://;AUTH=NO%20USER%20AUTHENT@afpserver/share"
  manpageQuestion1: What is the primary purpose of the auto_master resource?
  manpageQuestion2: How would you configure auto_master to mount an SMB file system at /smb with read-only and nosuid options?
  manpageQuestion3: Can you provide an example of using auto_master to mount an AFP file system with specific authentication settings?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `auto_master`.\n\n\n\nManpage text:\n\nIf the location is a URL, with a scheme specifying AFP, NFS, or SMB,\n     then, if no file system type is specified, the directory referred to by\n     that URL will be mounted using mount_url(8).  For example:\n\n\t   nfsurl  nfs://nfsserver/path/to/mount\n\t   smburl  smb://guest@smbserver/share\n\t   afpurl  afp://;AUTH=NO%20USER%20AUTHENT@afpserver/share\n\nReplicated mounts\n     More than one location can be specified in a map entry.  At the time the\n     mount is done, the automounter will choose one of those locations to\n     mount.  Locations not responding to an NFS null request at that time will\n     not be considered, so that servers that are unavailable will not be\n     chosen.  Servers that are on the same subnet as the client will be chosen\n     in preference to servers on different subnets.\n\n     By default, in each of those sets of servers, the server with the\n     shortest response time to the aforementioned NFS null request will be\n     chosen.  A location can be given a weighting factor; the higher the\n     weighting factor, the lower the preference for that server.  For example,\n     with an entry such as"
  manpageQuestion1: What is the primary purpose of the auto_master resource?
  manpageQuestion2: How can you configure auto_master to mount a SMB share from a remote server?
  manpageQuestion3: What is the process for setting up replicated mounts with auto_master to ensure fault tolerance?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `auto_master`.\n\n\n\nManpage text:\n\ndata    net1a:/data net1b:/data net1c(1):/otherdata\n\n     if either host net1a or net1b is available, the one with the shortest\n     response time will be chosen; host net1c will be chosen only if it is\n     available and neither hosts net1a nor net1b are available.\n\n     If all locations have the same path, a comma-separated list of hosts\n     followed by the path can be used:\n\n\t   data    net1a,net1b,net1c(1):/data\n\n     If a server that has been mounted becomes unavailable, the NFS client\n     will not automatically fail over to another server; the mount must be\n     unmounted and remounted in order for failover to occur.\n\nDirect Map\n     A direct map associates filesystem locations directly with directories.\n     The entry key is the full path name of a directory.  For example:\n\n\t   /usr/local\t   eng4:/export/local\n\t   /src \t   eng4:/export/src\n\n     Since the direct map as a whole isn't associated with a single directory,\n     it is specified in the master map with a dummy directory name of /-."
  manpageQuestion1: What is the primary purpose of the auto_master resource?
  manpageQuestion2: How would you configure the auto_master resource to use multiple hosts for a data path with failover capabilities?
  manpageQuestion3: Can you provide an example of a direct map configuration in the auto_master resource?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `auto_master`.\n\n\n\nManpage text:\n\nIndirect Map\n     An indirect map is used where a large number of entries are to be\n     associated with a single directory.  Each map entry key is the simple\n     name of a directory entry.  A good example of this is the auto_home map\n     which determines the entries under the /home directory.  For example:\n\n\t   bill    argon:/export/home/bill\n\t   brent   depot:/export/home/brent\n\t   guy\t   depot:/export/home/guy\n\nExecutable Map\n     An executable map is an indirect map represented by a file that has its\n     execute bit set.  Instead of reading entries from the file directly, the\n     automounter executes the program or script passing the key as an argument\n     and receiving the location string on stdout.  If the automounter needs to\n     enumerate map keys for a directory listing, it invokes the map with no\n     arguments and expects a newline-separated list of keys on stdout.\n\n     If an error occurs, the executable map must return a non-zero exit status\n     and no output.\n\n     For example, a map that, when bound to an Open Directory server, has one\n     entry for every user, with the key being the user's login name and the\n     entry being the URL of the user's home directory, could be implemented as"
  manpageQuestion1: What is the primary purpose of the auto_master resource in macOS?
  manpageQuestion2: How can you use an executable map with auto_master to dynamically generate directory entries based on user login names?
  manpageQuestion3: What is the typical use case for an indirect map in the context of automounting on macOS?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `auto_master`.\n\n\n\nManpage text:\n\n#!/bin/sh\n\t   if [ $# = 0 ]; then # List keys\n\t\t   dscl /Search -list Users\n\t\t   exit\n\t   fi\n\t   # Return location\n\t   homedirloc=`dscl /Search -read Users/$1 HomeDirectory`\n\t   case \"$homedirloc\" in\n\n\t   \"No such key: HomeDirectory\"*)\n\t\t   homedirloc=`dscl /Search -read Users/$1 NFSHomeDirectory`\n\t\t   case \"$homedirloc\" in\n\n\t\t   \"NFSHomeDirectory: /Network/Servers/\"*)\n\t\t\t   #\n\t\t\t   # NFS home directory\n\t\t\t   #\n\t\t\t   echo \"$homedirloc\" | sed 's;NFSHomeDirectory: /Network/Servers//]*/;1:/2;'\n\t\t\t   ;;\n\n\t\t   *)\n\t\t\t   #\n\t\t\t   # Unknown\n\t\t\t   #\n\t\t\t   exit 1\n\t\t\t   ;;\n\t\t   esac\n\t\t   ;;\n\n\t   \"HomeDirectory: <home_dir><url>smb://\"*)\n\t\t   #\n\t\t   # SMB home directory\n\t\t   #\n\t\t   echo \"$homedirloc\" | sed -e 's;HomeDirectory: <home_dir><url>;;' -e 's;</url><path>;/;' -e 's;</path></home_dir>;;'\n\t\t   ;;\n\n\t   *)\n\t\t   #\n\t\t   # Unknown\n\t\t   #\n\t\t   exit 1\n\t\t   ;;\n\t   esac\n\n     (this is a simplified example; it does not handle users who do not have a\n     network home directory, but includes them in the directory listing)."
  manpageQuestion1: What is the primary purpose of the auto_master resource?
  manpageQuestion2: How can you use auto_master to retrieve the home directory of a user, such as 'johndoe', on a macOS system?
  manpageQuestion3: Can you explain how auto_master handles cases where a user has an NFS home directory?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `auto_master`.\n\n\n\nManpage text:\n\nSubstituting the map key entry\n     If a location in a map entry contains an ampersand (&), the ampersand\n     will be replaced by the value of the key for the map entry.  For example,\n     a map entry of\n\n\t   bill    argon:/export/home/&\n\n     is equivalent to a map entry of\n\n\t   bill    argon:/export/home/bill\n\nWildcards\n     If the key in an indirect map entry is an asterisk (*), that entry will\n     match any name that isn't matched by any other entry.  For example, a map\n     with\n\n\t   bill    argon:/export/home/bill\n\t   *\t   depot:/export/home/&\n\n     as entries will mount argon:/export/home/bill on bill and will mount\n     depot:/export/home/{user} on {user} for all other values of {user}.\n\nVariables\n     A location string in a map can contain references to variables.  A\n     reference to a variable consists of dollar sign ($) followed by the name\n     of the variable.  A variable name is a sequence of alphanumeric\n     characters and underscores; the name of the variable can be contained in\n     curly braces to separate the variable reference from any alphanumeric\n     characters or underscores following it.  There are some predefined\n     variables:"
  manpageQuestion1: What is the primary purpose of the auto_master resource?
  manpageQuestion2: How can you use auto_master to substitute a key entry with the value of a variable?
  manpageQuestion3: Can you provide an example of using auto_master with wildcards to handle unmatched names?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `auto_master`.\n\n\n\nManpage text:\n\nARCH    System architecture (\"macintosh\" on Macintoshes).\n\n\t   CPU\t   Processor type, as reported by uname -p (\"powerpc\" on\n\t\t   PowerPC Macintoshes, \"i386\" on Intel Macintoshes).\n\n\t   HOST    This machine's host name.\n\n\t   OSNAME  Operating system name, as reported by uname -s (\"Darwin\" in\n\t\t   OS X).\n\n\t   OSREL   Operating system release, as reported by uname -r (for\n\t\t   example, 9.3.0 in Mac OS X 10.5.3).\n\n\t   OSVERS  Operating system version, as reported by uname -v (this\n\t\t   string is a long string with spaces in Mac OS X, and is not\n\t\t   very useful in automounter maps).\n\n     For example, a direct map entry such as\n\n\t   /usr/local/bin  -ro\t   server:/export/bin/$OSNAME/$CPU\n\n     would mount on /usr/local/bin a directory from the specified server\n     containing executable images appropriate to the operating system and CPU\n     type of the machine.\n\n     In addition, any environment variable set in the environment of\n     automountd(8) can be used as a variable name; those variables can be set\n     with the AUTOMOUNTD_ENV parameter in the autofs.conf(5) file."
  manpageQuestion1: What is the primary purpose of the auto_master resource?
  manpageQuestion2: How would you use the auto_master resource to configure a mount point that serves executable files based on the system's CPU type and OS name?
  manpageQuestion3: Can you provide an example of using the auto_master resource to dynamically mount a directory based on the host's operating system release?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `auto_master`.\n\n\n\nManpage text:\n\nQuoting\n     Special characters, such as white space characters, a dollar sign, or an\n     ampersand can be quoted by escaping them with a backslash (\\); this\n     prevents white space from being interpreted as a field separator,\n     prevents a dollar sign from being interpreted as the beginning of a\n     variable name, and prevents an ampersand from being interpreted as the\n     key field for the entry in which it occurs.  A sequence of characters can\n     also be quoted by enclosing it in double-quotes (\").\n\nSpecial Maps\n     The special maps have reserved names and are built into the automounter.\n\n     -fstab  This map would normally be mounted on /Network/Servers.  The key\n\t     is the host name of a server; the contents of the map entry are\n\t     generated from corresponding entries in fstab(5) data (as\n\t     provided by getfsent(3)) that have the net option and that\n\t     specify mounts from that server.  An entry of the form\n\n\t\t   server:/path mountpoint fstype options 0 0\n\n\t     will be mounted in server/path under the mount point of the\n\t     -fstab map, using the specified fstype file system type and the\n\t     specified options.  The mountpoint is ignored."
  manpageQuestion1: What is the primary purpose of the auto_master resource?
  manpageQuestion2: How would you configure the -fstab special map in auto_master to mount files from a server named 'example.com'?
  manpageQuestion3: Can you provide an example of using quotes to escape special characters in an auto_master configuration?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `auto_master`.\n\n\n\nManpage text:\n\n-hosts  This map would normally be mounted on /net.  The key is the host\n\t     name of an NFS server; the contents of the map are generated from\n\t     the list of file systems exported by that server.\tFor example, a\n\t     server that exports three NFS filesystems might have an\n\t     equivalent map entry of:\n\n\t\t   myserv  \\\n\t\t\t   /export/home    myserv:/export/home \\\n\t\t\t   /export/local   myserv:/export/local \\\n\t\t\t   /export/pkg\t   myserv:/export/pkg\n\n\t     To access the first mount, the path would be\n\t     /net/myserv/export/home if the map was associated with /net.\n\n     -null   This map has no entries.  It is used to disable entries that\n\t     occur later in the auto_master file.  For example:\n\n\t\t   /shared\t   -null\n\t\t   +auto_master\n\n\t     The -null entry disables any /shared entry in +auto_master.\n\n     -static\n\t     This map is a direct map, so the mount point must be specified as\n\t     /-.  The contents are generated from all entries in fstab(5) data\n\t     (as provided by getfsent(3)) that do not have the net option.  An\n\t     fstab(5) entry of the form"
  manpageQuestion1: What is the primary purpose of the auto_master resource in macOS?
  manpageQuestion2: How would you use the -null option in auto_master to disable specific entries?
  manpageQuestion3: Can you provide an example of using the -static option in auto_master to mount filesystems from fstab?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `auto_master`.\n\n\n\nManpage text:\n\nserver:/path mountpoint fstype options rw 0 0\n\n\t     will generate a direct map entry of the form\n\n\t\t   mountpoint options server:/path\n\nFILES\n     /etc/auto_master  The master map file.\n\nSEE ALSO\n     automount(8), automountd(8), autofsd(8), autofs.conf(5), fstab(5),\n     getfsent(3), DirectoryService(8)\n\nDarwin\t\t\t\tApril 20, 2007\t\t\t\tDarwin"
  manpageQuestion1: What is the primary purpose of the auto_master resource?
  manpageQuestion2: How would you configure auto_master to mount a network share at /mnt/network using the NFS filesystem type?
  manpageQuestion3: Can you provide an example of how to define a mapping in auto_master to automatically mount a remote directory under /home/user/remote_data?

