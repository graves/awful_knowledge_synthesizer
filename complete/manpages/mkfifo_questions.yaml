- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mkfifo`.\n\n\n\nManpage text:\n\nMKFIFO(1)\t\t    General Commands Manual\t\t     MKFIFO(1)\n\nNAME\n     mkfifo – make fifos\n\nSYNOPSIS\n     mkfifo [-m mode] fifo_name ...\n\nDESCRIPTION\n     The mkfifo utility creates the fifos requested, in the order specified.\n\n     The options are as follows:\n\n     -m      Set the file permission bits of the created fifos to the\n\t     specified mode, ignoring the umask(2) of the calling process.\n\t     The mode argument takes any format that can be specified to the\n\t     chmod(1) command.\tIf a symbolic mode is specified, the op\n\t     symbols ‘+’ (plus) and ‘-’ (hyphen) are interpreted relative to\n\t     an assumed initial mode of “a=rw” (read and write permissions for\n\t     all).\n\n     If the -m option is not specified, fifos are created with mode 0666\n     modified by the umask(2) of the calling process.  The mkfifo utility\n     requires write permission in the parent directory.\n\nEXIT STATUS\n     The mkfifo utility exits 0 on success, and >0 if an error occurs.\n\nSEE ALSO\n     mkdir(1), rm(1), umask(1), mkfifo(2), mknod(2), umask(2), compat(5),\n     mknod(8)"
  manpageQuestion1: What is the primary purpose of the mkfifo command?
  manpageQuestion2: How would you use mkfifo to create a named pipe with specific permissions, such as 644?
  manpageQuestion3: Can you provide an example of using mkfifo to create a fifo in the current directory without specifying a mode?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mkfifo`.\n\n\n\nManpage text:\n\nSTANDARDS\n     The mkfifo utility is expected to be IEEE Std 1003.2 (“POSIX.2”)\n     compliant.\n\nHISTORY\n     The mkfifo command appeared in 4.4BSD.\n\nmacOS 15.3\t\t\tJanuary 5, 1994 \t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the mkfifo command?
  manpageQuestion2: How would you use mkfifo to create a named pipe called 'my_fifo'?
  manpageQuestion3: What is the significance of the mkfifo command in the context of inter-process communication on macOS?

