- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `socket`.\n\n\n\nManpage text:\n\nSOCKET(2)\t\t      System Calls Manual\t\t     SOCKET(2)\n\nNAME\n     socket – create an endpoint for communication\n\nSYNOPSIS\n     #include <sys/socket.h>\n\n     int\n     socket(int domain, int type, int protocol);\n\nDESCRIPTION\n     socket() creates an endpoint for communication and returns a descriptor.\n\n     The domain parameter specifies a communications domain within which\n     communication will take place; this selects the protocol family which\n     should be used.  These families are defined in the include file\n     ⟨sys/socket.h⟩.  The currently understood formats are\n\n\t   PF_LOCAL\t   Host-internal protocols, formerly called PF_UNIX,\n\t   PF_UNIX\t   Host-internal protocols, deprecated, use PF_LOCAL,\n\t   PF_INET\t   Internet version 4 protocols,\n\t   PF_ROUTE\t   Internal Routing protocol,\n\t   PF_KEY\t   Internal key-management function,\n\t   PF_INET6\t   Internet version 6 protocols,\n\t   PF_SYSTEM\t   System domain,\n\t   PF_NDRV\t   Raw access to network device,\n\t   PF_VSOCK\t   VM Sockets protocols"
  manpageQuestion1: What is the primary purpose of the socket system call?
  manpageQuestion2: How would you create a TCP socket in IPv4 using the socket system call?
  manpageQuestion3: Can you provide an example of using the socket system call to create a Unix domain socket?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `socket`.\n\n\n\nManpage text:\n\nThe socket has the indicated type, which specifies the semantics of\n     communication.  Currently defined types are:\n\n\t   SOCK_STREAM\n\t   SOCK_DGRAM\n\t   SOCK_RAW\n\n     A SOCK_STREAM type provides sequenced, reliable, two-way connection based\n     byte streams.  An out-of-band data transmission mechanism may be\n     supported.  A SOCK_DGRAM socket supports datagrams (connectionless,\n     unreliable messages of a fixed (typically small) maximum length).\n     SOCK_RAW sockets provide access to internal network protocols and\n     interfaces.  The type SOCK_RAW, which is available only to the super-\n     user.\n\n     The protocol specifies a particular protocol to be used with the socket.\n     Normally only a single protocol exists to support a particular socket\n     type within a given protocol family.  However, it is possible that many\n     protocols may exist, in which case a particular protocol must be\n     specified in this manner.\tThe protocol number to use is particular to\n     the “communication domain” in which communication is to take place; see\n     protocols(5)."
  manpageQuestion1: What is the primary purpose of the socket system call in macOS?
  manpageQuestion2: How would you create a SOCK_STREAM socket for TCP communication in macOS?
  manpageQuestion3: Can you explain how to use the socket system call with a SOCK_RAW type and specify a protocol for raw network access?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `socket`.\n\n\n\nManpage text:\n\nSockets of type SOCK_STREAM are full-duplex byte streams, similar to\n     pipes.  A stream socket must be in a connected state before any data may\n     be sent or received on it.  A connection to another socket is created\n     with a connect(2) or connectx(2) call.  Once connected, data may be\n     transferred using read(2) and write(2) calls or some variant of the\n     send(2) and recv(2) calls.  When a session has been completed a close(2)\n     may be performed.\tOut-of-band data may also be transmitted as described\n     in send(2) and received as described in recv(2).\n\n     The communications protocols used to implement a SOCK_STREAM insure that\n     data is not lost or duplicated.  If a piece of data for which the peer\n     protocol has buffer space cannot be successfully transmitted within a\n     reasonable length of time, then the connection is considered broken and\n     calls will indicate an error with -1 returns and with ETIMEDOUT as the\n     specific code in the global variable errno.  The protocols optionally\n     keep sockets “warm” by forcing transmissions roughly every minute in the\n     absence of other activity.  An error is then indicated if no response can\n     be elicited on an otherwise idle connection for a extended period (e.g. 5\n     minutes).\tA SIGPIPE signal is raised if a process sends on a broken\n     stream; this causes naive processes, which do not handle the signal, to\n     exit."
  manpageQuestion1: What is the primary purpose of the socket resource in macOS?
  manpageQuestion2: How would you create a connected SOCK_STREAM socket and send data to another process using the socket resource?
  manpageQuestion3: What are the common error conditions that can occur when using SOCK_STREAM sockets for communication?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `socket`.\n\n\n\nManpage text:\n\nSOCK_DGRAM and SOCK_RAW sockets allow sending of datagrams to\n     correspondents named in send(2) calls.  Datagrams are generally received\n     with recvfrom(2), which returns the next datagram with its return\n     address.\n\n     An fcntl(2) call can be used to specify a process group to receive a\n     SIGURG signal when the out-of-band data arrives.  It may also enable non-\n     blocking I/O and asynchronous notification of I/O events via SIGIO.\n\n     The operation of sockets is controlled by socket level options.  These\n     options are defined in the file ⟨sys/socket.h⟩.  Setsockopt(2) and\n     getsockopt(2) are used to set and get options, respectively.\n\nRETURN VALUES\n     A -1 is returned if an error occurs, otherwise the return value is a\n     descriptor referencing the socket.\n\nERRORS\n     The socket() system call fails if:\n\n     [EACCES]\t\tPermission to create a socket of the specified type\n\t\t\tand/or protocol is denied.\n\n     [EAFNOSUPPORT]\tThe specified address family is not supported."
  manpageQuestion1: What is the primary purpose of the socket resource in macOS?
  manpageQuestion2: How can you use the socket() system call to create a datagram socket in macOS?
  manpageQuestion3: What are the common system call errors that can occur when using the socket() function on macOS?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `socket`.\n\n\n\nManpage text:\n\n[EMFILE]\t\tThe per-process descriptor table is full.\n\n     [ENFILE]\t\tThe system file table is full.\n\n     [ENOBUFS]\t\tInsufficient buffer space is available.  The socket\n\t\t\tcannot be created until sufficient resources are\n\t\t\tfreed.\n\n     [ENOMEM]\t\tInsufficient memory was available to fulfill the\n\t\t\trequest.\n\n     [EPROTONOSUPPORT]\tThe protocol type or the specified protocol is not\n\t\t\tsupported within this domain.\n\n     [EPROTOTYPE]\tThe socket type is not supported by the protocol.\n\n     If a new protocol family is defined, the socreate process is free to\n     return any desired error code.  The socket() system call will pass this\n     error code along (even if it is undefined).\n\nLEGACY SYNOPSIS\n     #include <sys/types.h>\n     #include <sys/socket.h>\n\n     The include file <sys/types.h> is necessary.\n\nSEE ALSO\n     accept(2), bind(2), connect(2), connectx(2), disconnectx(2),\n     getsockname(2), getsockopt(2), ioctl(2), listen(2), read(2), recv(2),\n     select(2), send(2), shutdown(2), socketpair(2), write(2), getprotoent(3),\n     inet(4), inet6(4), unix(4), compat(5)"
  manpageQuestion1: What is the primary purpose of the socket system call?
  manpageQuestion2: What error code would be returned if an application tries to create a socket with a protocol that is not supported in the specified domain?
  manpageQuestion3: What error code is generated when there is not enough memory available to create a socket?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `socket`.\n\n\n\nManpage text:\n\nAn Introductory 4.3 BSD Interprocess Communication Tutorial, reprinted in\n     UNIX Programmer's Supplementary Documents Volume 1.\n\n     BSD Interprocess Communication Tutorial, reprinted in UNIX Programmer's\n     Supplementary Documents Volume 1.\n\nHISTORY\n     The socket() function call appeared in 4.2BSD.\n\nmacOS 15.3\t\t\tMarch 18, 2015\t\t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the socket resource in macOS?
  manpageQuestion2: How can you create a socket in macOS using the socket resource?
  manpageQuestion3: What is the function of the socket() system call in macOS?

