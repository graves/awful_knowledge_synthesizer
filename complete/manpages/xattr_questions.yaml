- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `xattr`.\n\n\n\nManpage text:\n\nXATTR(1)\t\t    General Commands Manual\t\t      XATTR(1)\n\nNAME\n     xattr – display and manipulate extended attributes\n\nSYNOPSIS\n     xattr [-lrsvx] file ...\n     xattr -p [-lrsvx] attr_name file ...\n     xattr -w [-rsx] attr_name attr_value file ...\n     xattr -d [-rsv] attr_name file ...\n     xattr -c [-rsv] file ...\n     xattr -h | --help\n\nDESCRIPTION\n     The xattr command can be used to display, modify or remove the extended\n     attributes of one or more files, including directories and symbolic\n     links.  Extended attributes are arbitrary metadata stored with a file,\n     but separate from the filesystem attributes (such as modification time or\n     file size).  The metadata is often a null-terminated UTF-8 string, but\n     can also be arbitrary binary data.\n\n     One or more files may be specified on the command line.  For the first\n     two forms of the command, when there are more than one file, the file\n     name is displayed along with the actual results.  When only one file is\n     specified, the display of the file name is usually suppressed (unless the\n     -v option described below, is also specified)."
  manpageQuestion1: What is the primary purpose of the xattr command?
  manpageQuestion2: How can you use xattr to display all extended attributes of a file named 'example.txt'?
  manpageQuestion3: Can you provide an example of using xattr to set a custom extended attribute named 'user.custom_info' with the value '42' on a file called 'data.bin'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `xattr`.\n\n\n\nManpage text:\n\nIn the first form of the command (without any other mode option\n     specified), the names of all extended attributes are listed.  Attribute\n     names can also be displayed using “ls -l@”.\n\n     In the second form, using the -p option (“print”), the value associated\n     with the given attribute name is displayed.  Attribute values are usually\n     displayed as strings.  However, if nils are detected in the data, the\n     value is displayed in a hexadecimal representation.\n\n     The third form, with the -w option (“write”), causes the given attribute\n     name to be assigned the given value.\n\n     The fourth form, with the -d option (“delete”), causes the given\n     attribute name (and associated value), to be removed.\n\n     In the fifth form, with the -c option (“clear”), causes all attributes\n     (including their associated values), to be removed.\n\n     Finally, the last form, with either the -h or --help option, displays a\n     short help message and exits immediately.\n\nOPTIONS\n     -l  By default, the first two command forms either displays just the\n\t attribute names or values, respectively.  The -l option causes both\n\t the attribute names and corresponding values to be displayed.\tFor\n\t hexadecimal display of values, the output is preceeded with the\n\t hexadecimal offset values and followed by ASCII display, enclosed by\n\t “|”."
  manpageQuestion1: What is the primary purpose of the xattr command?
  manpageQuestion2: How would you use xattr to display all extended attributes of a file?
  manpageQuestion3: Can you provide an example of using xattr to remove all extended attributes from a file?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `xattr`.\n\n\n\nManpage text:\n\n-r  If a file argument is a directory, act as if the entire contents of\n\t the directory recursively were also specified (so that every file in\n\t the directory tree is acted upon).\n\n     -s  If a file argument is a symbolic link, act on the symbolic link\n\t itself, rather than the file that the symbolic link points at.\n\n     -v  Force the file name to be displayed, even for a single file.\n\n     -x  Force the attribute value to be displayed in the hexadecimal\n\t representation.\n\n\t The -w option normally assumes the input attribute value is a string.\n\t Specifying the -x option causes xattr to expect the input in\n\t hexadecimal (whitespace is ignored).  The xxd(1) command can be used\n\t to create hexadecimal representations from existing binary data, to\n\t pass to xattr.\n\nEXIT STATUS\n     The xattr command exits with zero status on success.  On error, non-zero\n     is returned, and an error message is printed to the standard error.  For\n     system call errors, both the error code and error string are printed (see\n     getxattr(2), listxattr(2), removexattr(2) and setxattr(2) for a complete\n     list of possible error codes)."
  manpageQuestion1: What is the primary purpose of the xattr command?
  manpageQuestion2: How can you use the -x flag with xattr to display a binary attribute in hexadecimal format?
  manpageQuestion3: What is the effect of using the -r flag with xattr when operating on a directory?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `xattr`.\n\n\n\nManpage text:\n\nSome attribute data may have a fixed length that is enforced by the\n     system.  For example,\n\n\t   % xattr -w com.apple.FinderInfo 0 foo\n\t   xattr: [Errno 34] Result too large: 'foo'\n\n     The com.apple.FinderInfo attribute must be 32 bytes in length.\n\nEXAMPLES\n     This example copies the com.apple.FinderInfo attribute from the /usr\n     directory to the MyDir directory:\n\n\t   % xattr -px com.apple.FinderInfo /usr\n\t   00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00\n\t   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n\t   % xattr -l MyDir\n\t   % xattr -wx com.apple.FinderInfo \\\n\t     \"`xattr -px com.apple.FinderInfo /usr`\" MyDir\n\t   % xattr -l MyDir\n\t   com.apple.FinderInfo:\n\t   00000000  00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  |........@.......|\n\t   00000010  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  |................|\n\t   00000020\n\nSEE ALSO\n     ls(1), xxd(1), getxattr(2), listxattr(2), removexattr(2), setxattr(2)\n\nmacOS 15.3\t\t       November 29, 2010\t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the xattr command?
  manpageQuestion2: How can you copy the com.apple.FinderInfo attribute from one file to another using xattr?
  manpageQuestion3: What is the correct way to set an attribute with a fixed length using xattr?

