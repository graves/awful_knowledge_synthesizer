- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `kextload`.\n\n\n\nManpage text:\n\nKEXTLOAD(8)\t\t    System Manager's Manual\t\t   KEXTLOAD(8)\n\nNAME\n     kextload â€“ load kernel extensions (kexts) into the kernel\n\nSYNOPSIS\n     kextload [options] [--] [kext ...]\n\nDEPRECATED\n     The kextload utility has been deprecated.\tPlease use the kmutil(8)\n     equivalent: kmutil load.\n\nDESCRIPTION\n     The kextload program is used to explicitly load kernel extensions\n     (kexts).  For most kexts, kextload must run as the superuser (root).\n     Kexts installed under /System/ with an OSBundleAllowUserLoad property set\n     to true may be loaded via kextload by non-root users.\n\n     Notice: On Mac OS X 10.6 (Snow Leopard), the developer functionality of\n     kextload has moved to the new program kextutil(8); all developer-related\n     options have been removed from kextload and are no longer recognized.  On\n     Mac OS X 10.6 (Snow Leopard), kextload simply forwards a load request to\n     kextd(8), which performs all communication with the kernel.\n\n     kextload is a formal interface for kext loading in all versions of Darwin\n     OS and macOS.  Software and installers can rely on its presence and\n     invoke it in order to load kexts.\tNote that long options are present as\n     of Mac OS X 10.6 (Snow Leopard)."
  manpageQuestion1: What is the primary purpose of the kextload command?
  manpageQuestion2: How would you use kextload to load a kernel extension (kext) as a non-root user?
  manpageQuestion3: Can you provide an example of using kextload to load a kernel extension from a specific file path?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `kextload`.\n\n\n\nManpage text:\n\nMac OS X 10.6 (Snow Leopard) introduces C functions for loading kexts:\n     KextManagerLoadKextWithIdentifier() and KextManagerLoadKextWithURL(),\n     which are described in Apple's developer documentation.\n\nARGUMENTS AND OPTIONS\n     kext     The pathname of a kext bundle to load.  The kext's plugins are\n\t      available for dependency resolution.  Kexts can also be\n\t      specified by CFBundleIdentifier with the -bundle-id option.\n\n     -b identifier, -bundle-id identifier\n\t      Look up the kext whose CFBundleIdentifier is identifier within\n\t      the set of known kexts and load it.  The kext of the highest\n\t      CFBundleVersion with the given identifier is used; in the case\n\t      of version ties, the last such kext specified on the command\n\t      line is used.  See the -dependency and -repository options for\n\t      more information.\n\n     -d kext, -dependency kext\n\t      Add kext and its plugins to the set of known kexts for resolving\n\t      dependencies.  This is useful for adding a single kext from a\n\t      directory while excluding the others.  See the -repository\n\t      option for more information."
  manpageQuestion1: What is the primary purpose of the kextload command?
  manpageQuestion2: How can you use kextload to load a kext bundle identified by its CFBundleIdentifier?
  manpageQuestion3: Can you provide an example of using kextload to load a kext from a specific directory while considering its dependencies?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `kextload`.\n\n\n\nManpage text:\n\n-h, -help\n\t      Print a help message describing each option flag and exit with a\n\t      success result, regardless of any other options on the command\n\t      line.\n\n     -q, -quiet\n\t      Quiet mode; print no informational or error messages.\n\n     -r directory, -repository directory\n\t      Use directory as a repository of kexts.  This adds to the set of\n\t      known kexts for resolving dependencies or looking up by\n\t      CFBundleIdentifier when using the -bundle-id option.  This is\n\t      not recursive; only kexts directly within the directory, and\n\t      their plugins, are scanned.  See also the -dependency option.\n\n     -v [0-6 | 0x####], -verbose [0-6 | 0x####]\n\t      Verbose mode; print information about program operation.\tHigher\n\t      levels of verbosity include all lower levels.  You can specify a\n\t      level from 0-6, or a bitmask of flags as a hexadecimal number\n\t      prefixed with 0x (as described in kext_logging(8)). Because\n\t      kextload messages kextd(8), to perform the actual work of\n\t      loading, the decimal levels 1-6 generally have little effect.\n\t      You may wish to use kextutil(8) if you want verbose output about\n\t      the kext loading operation."
  manpageQuestion1: What is the primary purpose of the kextload command?
  manpageQuestion2: How can you use kextload to load a kernel extension in quiet mode while specifying a custom repository directory?
  manpageQuestion3: What is the most common way to enable detailed verbose logging when using kextload?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `kextload`.\n\n\n\nManpage text:\n\n--       End of all options. Only kext names follow.\n\nEXAMPLES\n     To load a kext, run kextload and supply a kext bundle name; no options\n     are required:\n\n\tkextload TabletDriver.kext\n\n     Alternatively, you can use the -bundle-id (-b) option to specify a kext\n     by its CFBundleIdentifier:\n\n\tkextload -bundle-id com.mycompany.driver.TabletDriver\n\n     With no additional options kextload looks in the extensions directories\n     (/System/Library/Extensions/ and /Library/Extensions/) for a kext with\n     the given CFBundleIdentifier.  Adding repository directories with the\n     -repository option or individual kexts with the -dependency option\n     expands the set of kexts that kextload looks among for dependency\n     resolution and for loading by bundle identifier:\n\n\tkextload -repository /Applications/MyApp.app/Contents/Resources \\\n\t    TabletDriver.kext\n\nFILES\n     /System/Library/Extensions/  The standard system repository of kernel\n\t\t\t\t  extensions\n     /Library/Extensions/\t  The standard repository of non Apple kernel\n\t\t\t\t  extensions"
  manpageQuestion1: What is the primary purpose of the kextload command?
  manpageQuestion2: How would you use kextload to load a kernel extension named 'TabletDriver.kext' using its bundle identifier?
  manpageQuestion3: Can you provide an example of using kextload to load a kernel extension from a custom repository directory?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `kextload`.\n\n\n\nManpage text:\n\nDIAGNOSTICS\n     kextload exits with a zero status if all kexts specified load\n     successfully (or are already loaded).  If any kext fails to load,\n     kextload prints an error message for that kext, continues trying to load\n     any remaining kexts, then exits with a nonzero status.\n\n     For a kext to be loadable, it must be valid, authenticated, and all\n     dependencies of the kext must be available and loadable.  A valid kext\n     has a well formed bundle, info dictionary, and an executable built for\n     the running kernel's architecture.  An authentic kext's component files,\n     not including plugins, are owned by root:wheel, with permissions\n     nonwritable by group and other.  If your kext fails to load, try using\n     kextutil(8) to examine the kext for problems.\n\nSEE ALSO\n     kmutil(8), kernelmanagerd(8), kextcache(8), kextd(8), kextstat(8),\n     kextunload(8), kextutil(8), kext_logging(8)\n\nDarwin\t\t\t       November 14, 2012\t\t\tDarwin"
  manpageQuestion1: What is the primary purpose of the kextload command?
  manpageQuestion2: How can you use kextload to load a kernel extension (kext) into the macOS kernel?
  manpageQuestion3: What should you do if a kext fails to load with kextload?

