- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `slapd-relay`.\n\n\n\nManpage text:\n\nSLAPD-RELAY(5)\t\t      File Formats Manual\t\tSLAPD-RELAY(5)\n\nNAME\n       slapd-relay - relay backend to slapd\n\nSYNOPSIS\n       /etc/openldap/slapd.conf\n\nDESCRIPTION\n       The primary purpose of this slapd(8) backend is to map a naming context\n       defined in a database running in the same slapd(8) instance into a\n       virtual naming context, with attributeType and objectClass\n       manipulation, if required.  It requires the slapo-rwm(5) overlay.\n\n       This backend and the above mentioned overlay are experimental.\n\nCONFIGURATION\n       The following slapd.conf directives apply to the relay backend\n       database.  That is, they must follow a \"database relay\" line and come\n       before any subsequent \"backend\" or \"database\" lines.  Other database\n       options are described in the slapd.conf(5) manual page; only the suffix\n       directive is allowed by the relay backend.\n\n       relay <real naming context>\n\t      The naming context of the database that is presented under a\n\t      virtual naming context.  The presence of this directive implies\n\t      that one specific database, i.e. the one serving the real naming\n\t      context, will be presented under a virtual naming context."
  manpageQuestion1: What is the primary purpose of the slapd-relay backend?
  manpageQuestion2: How would you configure the slapd-relay backend to map a virtual naming context 'cn=virtual' to a real naming context 'cn=real'?
  manpageQuestion3: What is the correct syntax for specifying a real naming context in the slapd-relay configuration?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `slapd-relay`.\n\n\n\nManpage text:\n\nMASSAGING\n       The relay database does not automatically rewrite the naming context of\n       requests and responses.\tFor this purpose, the slapo-rwm(5) overlay\n       must be explicitly instantiated, and configured as appropriate.\n       Usually, the rwm-suffixmassage directive suffices if only naming\n       context rewriting is required.\n\n\nACCESS RULES\n       One important issue is that access rules are based on the identity that\n       issued the operation.  After massaging from the virtual to the real\n       naming context, the frontend sees the operation as performed by the\n       identity in the real naming context.  Moreover, since back-relay\n       bypasses the real database frontend operations by short-circuiting\n       operations through the internal backend API, the original database\n       access rules do not apply but in selected cases, i.e. when the backend\n       itself applies access control.  As a consequence, the instances of the\n       relay database must provide own access rules that are consistent with\n       those of the original database, possibly adding further specific\n       restrictions.  So, access rules in the relay database must refer to\n       identities in the real naming context.  Examples are reported in the\n       EXAMPLES section."
  manpageQuestion1: What is the primary purpose of the slapd-relay resource?
  manpageQuestion2: How should access rules be configured in the relay database to ensure consistency with the original database's access control?
  manpageQuestion3: What is required to ensure that naming context rewriting works correctly in the slapd-relay setup?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `slapd-relay`.\n\n\n\nManpage text:\n\nSCENARIOS\n       If no relay directive is given, the relay database does not refer to\n       any specific database, but the most appropriate one is looked-up after\n       rewriting the request DN for the operation that is being handled.\n\n       This allows to write carefully crafted rewrite rules that cause some of\n       the requests to be directed to one database, and some to another; e.g.,\n       authentication can be mapped to one database, and searches to another,\n       or different target databases can be selected based on the DN of the\n       request, and so.\n\n       Another possibility is to map the same operation to different databases\n       based on details of the virtual naming context, e.g. groups on one\n       database and persons on another.\n\nEXAMPLES\n       To implement a plain virtual naming context mapping that refers to a\n       single database, use\n\n\t database\t\t relay\n\t suffix \t\t \"dc=virtual,dc=naming,dc=context\"\n\t relay\t\t\t \"dc=real,dc=naming,dc=context\"\n\t overlay\t\t rwm\n\t rwm-suffixmassage\t \"dc=real,dc=naming,dc=context\""
  manpageQuestion1: What is the primary purpose of the slapd-relay resource?
  manpageQuestion2: How can you configure slapd-relay to direct requests for a specific virtual naming context to a particular database?
  manpageQuestion3: Can you provide an example of using slapd-relay to map authentication requests to one database and search requests to another?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `slapd-relay`.\n\n\n\nManpage text:\n\nTo implement a plain virtual naming context mapping that looks up the\n       real naming context for each operation, use\n\n\t database\t\t relay\n\t suffix \t\t \"dc=virtual,dc=naming,dc=context\"\n\t overlay\t\t rwm\n\t rwm-suffixmassage\t \"dc=real,dc=naming,dc=context\"\n\n       This is useful, for instance, to relay different databases that share\n       the terminal portion of the naming context (the one that is rewritten).\n\n       To implement the old-fashioned suffixalias, e.g. mapping the virtual to\n       the real naming context, but not the results back from the real to the\n       virtual naming context, use\n\n\t database\t\t relay\n\t suffix \t\t \"dc=virtual,dc=naming,dc=context\"\n\t relay\t\t\t \"dc=real,dc=naming,dc=context\"\n\t overlay\t\t rwm\n\t rwm-rewriteEngine\t on\n\t rwm-rewriteContext\t default\n\t rwm-rewriteRule\t \"dc=virtual,dc=naming,dc=context\"\n\t\t\t\t \"dc=real,dc=naming,dc=context\" \":@\"\n\t rwm-rewriteContext\t searchFilter\n\t rwm-rewriteContext\t searchEntryDN\n\t rwm-rewriteContext\t searchAttrDN\n\t rwm-rewriteContext\t matchedDN"
  manpageQuestion1: What is the primary purpose of the slapd-relay resource?
  manpageQuestion2: How would you configure slapd-relay to map a virtual naming context "dc=virtual,dc=naming,dc=context" to a real naming context "dc=real,dc=naming,dc=context"?
  manpageQuestion3: What configuration settings are required to enable the relay function in slapd-relay for suffix aliasing?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `slapd-relay`.\n\n\n\nManpage text:\n\nNote that the slapo-rwm(5) overlay is instantiated, but the rewrite\n       rules are written explicitly, rather than automatically as with the\n       rwm-suffixmassage statement, to map all the virtual to real naming\n       context data flow, but none of the real to virtual.\n\n       Access rules:\n\n\t database\t\t bdb\n\t suffix \t\t \"dc=example,dc=com\"\n\t # skip...\n\t access to dn.subtree=\"dc=example,dc=com\"\n\t\t by dn.exact=\"cn=Supervisor,dc=example,dc=com\" write\n\t\t by * read\n\n\t database\t\t relay\n\t suffix \t\t \"o=Example,c=US\"\n\t relay\t\t\t \"dc=example,dc=com\"\n\t overlay\t\t rwm\n\t rwm-suffixmassage\t \"dc=example,dc=com\"\n\t # skip ...\n\t access to dn.subtree=\"o=Example,c=US\"\n\t\t by dn.exact=\"cn=Supervisor,dc=example,dc=com\" write\n\t\t by dn.exact=\"cn=Relay Supervisor,dc=example,dc=com\" write\n\t\t by * read\n\n       Note that, in both databases, the identities (the <who> clause) are in\n       the real naming context, i.e.  `dc=example,dc=com', while the targets\n       (the <what> clause) are in the real and in the virtual naming context,\n       respectively."
  manpageQuestion1: What is the primary purpose of the slapd-relay resource?
  manpageQuestion2: How would you configure the slapd-relay to map virtual naming context 'o=Example,c=US' to real naming context 'dc=example,dc=com'?
  manpageQuestion3: Can you explain how the access control rules differ between the 'bdb' and 'relay' databases in the slapd-relay configuration?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `slapd-relay`.\n\n\n\nManpage text:\n\nACCESS CONTROL\n       The relay backend does not honor any of the access control semantics\n       described in slapd.access(5); all access control is delegated to the\n       relayed database(s).  Only read (=r) access to the entry pseudo-\n       attribute and to the other attribute values of the entries returned by\n       the search operation is honored, which is performed by the frontend.\n\nFILES\n       /etc/openldap/slapd.conf\n\t      default slapd configuration file\n\nSEE ALSO\n       slapd.conf(5), slapd-config(5), slapo-rwm(5), slapd(8).\n\nOpenLDAP 2.4.28 \t\t  2011/11/24\t\t\tSLAPD-RELAY(5)"
  manpageQuestion1: What is the primary purpose of the slapd-relay resource?
  manpageQuestion2: How would you configure the slapd-relay to delegate access control to a remote LDAP server?
  manpageQuestion3: Can you describe the file configuration used for setting up the slapd-relay service?

