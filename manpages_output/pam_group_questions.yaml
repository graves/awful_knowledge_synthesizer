- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `pam_group`.\n\n\n\nManpage text:\n\npam_group(8)\t\t    System Manager's Manual\t\t  pam_group(8)\n\nNAME\n     pam_group – Group PAM module\n\nSYNOPSIS\n     [service-name] function-class control-flag pam_group [options]\n\nDESCRIPTION\n     The Group PAM module supports the account management function class.  In\n     terms of the function-class parameter, this is the “account” class.\n\n     The Group account management module permits or denies users based on\n     their membership to a particular group (or groups) specified with the\n     group option.  If no groups are specified the default group (“wheel”)\n     will be used.\n\n     The following options may be passed to this account management module:\n\n     deny    Reverse the meaning of the test, i.e., reject the applicant if\n\t     and only if he or she is a member of the specified group.\tThis\n\t     can be useful to exclude certain groups of users from certain\n\t     services.\n\n     fail_safe\n\t     If the specified group does not exist, or has no members, act as\n\t     if it does exist and the applicant is a member."
  manpageQuestion1: What is the primary purpose of the pam_group module?
  manpageQuestion2: How would you configure the pam_group module to deny access to users who are members of the 'sudo' group for a specific service?
  manpageQuestion3: Can you provide an example of using the pam_group module with the fail_safe option to ensure access is granted if the specified group does not exist?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `pam_group`.\n\n\n\nManpage text:\n\ngroup=groupname\n\t     Specify the name of the group to check.  This can be a comma-\n\t     separated list (i.e. “group=admin,wheel”).\n\n     root_only\n\t     Skip this module entirely if the target account is not the\n\t     superuser account.\n\n     ruser   Check the membership of the applicant (PAM_RUSER), rather than\n\t     the target account (PAM_USER)\n\nSEE ALSO\n     pam_get_item(3), pam.conf(5), pam(8), DirectoryService(8)\n\nAUTHORS\n     The pam_group module and this manual page were developed for the FreeBSD\n     Project by ThinkSec AS and NAI Labs, the Security Research Division of\n     Network Associates, Inc. under DARPA/SPAWAR contract N66001-01-C-8035\n     (“CBOSS”), as part of the DARPA CHATS research program.\n\nmacOS 15.3\t\t       February 7, 2009 \t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the pam_group resource?
  manpageQuestion2: How would you configure pam_group to check multiple groups, such as 'admin' and 'wheel', in a macOS system?
  manpageQuestion3: Can you explain how to use the root_only flag with pam_group to ensure that only the superuser account is checked?

