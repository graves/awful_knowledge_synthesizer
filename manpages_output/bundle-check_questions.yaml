- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `bundle-check`.\n\n\n\nManpage text:\n\nBUNDLE-CHECK(1) \t\t\t\t\t       BUNDLE-CHECK(1)\n\nNAME\n       bundle-check - Verifies if dependencies are satisfied by installed gems\n\nSYNOPSIS\n       bundle check [--dry-run] [--gemfile=FILE] [--path=PATH]\n\nDESCRIPTION\n       check searches the local machine for each of the gems requested in the\n       Gemfile. If all gems are found, Bundler prints a success message and\n       exits with a status of 0.\n\n       If not, the first missing gem is listed and Bundler exits status 1.\n\nOPTIONS\n       --dry-run\n\t      Locks the [Gemfile(5)][Gemfile(5)] before running the command.\n\n       --gemfile\n\t      Use the specified gemfile instead of the\n\t      [Gemfile(5)][Gemfile(5)].\n\n       --path Specify a different path than the system default ($BUNDLE_PATH\n\t      or $GEM_HOME). Bundler will remember this value for future\n\t      installs on this machine.\n\n\n\t\t\t\t November 2018\t\t       BUNDLE-CHECK(1)"
  manpageQuestion1: What is the primary purpose of the bundle-check command?
  manpageQuestion2: How would you use bundle-check to verify dependencies for a custom Gemfile located at /path/to/app/Gemfile?
  manpageQuestion3: Can you provide an example of using bundle-check with the --dry-run option to check dependencies without modifying the Gemfile?

