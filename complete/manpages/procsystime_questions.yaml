- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `procsystime`.\n\n\n\nManpage text:\n\nprocsystime(1m) \t\t USER COMMANDS\t\t       procsystime(1m)\n\nNAME\n       procsystime - analyse system call times. Uses DTrace.\n\nSYNOPSIS\n       procsystime [-acehoT] [ -p PID | -n name | command ]\n\nDESCRIPTION\n       procsystime prints details on system call times for processes, both the\n       elapsed times and on-cpu times can be printed.\n\n       The elapsed times are interesting, to help identify syscalls that take\n       some time to complete (during which the process may have slept). CPU\n       time helps us identify syscalls that are consuming CPU cycles to run.\n\n       Since this uses DTrace, only users with root privileges can run this\n       command.\n\nOPTIONS\n       -a     print all data\n\n       -c     print syscall counts\n\n       -e     print elapsed times, ns\n\n       -o     print CPU times, ns\n\n       -T     print totals\n\n       -p PID examine this PID\n\n       -n name\n\t      examine processes which have this name\n\nEXAMPLES\n       Print elapsed times for PID 1871,\n\t      # procsystime -p 1871\n\n       Print elapsed times for processes called \"tar\",\n\t      # procsystime -n tar\n\n       Print CPU times for \"tar\" processes,\n\t      # procsystime -on tar\n\n       Print syscall counts for \"tar\" processes,\n\t      # procsystime -cn tar\n\n       Print elapsed and CPU times for \"tar\" processes,\n\t      # procsystime -eon tar\n\n       print all details for \"bash\" processes,\n\t      # procsystime -aTn bash\n\n       run and print details for \"df -h\",\n\t      # procsystime df -h\n\nFIELDS\n       SYSCALL\n\t      System call name\n\n       TIME (ns)\n\t      Total time, nanoseconds\n\n       COUNT  Number of occurrences\n\nDOCUMENTATION\n       See the DTraceToolkit for further documentation under the Docs\n       directory. The DTraceToolkit docs may include full worked examples with\n       verbose descriptions explaining the output.\n\nEXIT\n       procsystime will sample until Ctrl-C is hit.\n\nAUTHOR\n       Brendan Gregg [Sydney, Australia]\n\nSEE ALSO\n       dtruss(1M), dtrace(1M), truss(1)"
  manpageQuestion1: What is the primary purpose of the procsystime tool?
  manpageQuestion2: How can you use procsystime to analyze the system call times of a process named 'nginx'?
  manpageQuestion3: Can you provide an example of using procsystime to print both elapsed and CPU times for all 'bash' processes?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `procsystime`.\n\n\n\nManpage text:\n\nversion 1.00\t\t      September 22, 2005\t       procsystime(1m)"
  manpageQuestion1: What is the primary purpose of the procsystime command?
  manpageQuestion2: How can you use procsystime to display the system time in a specific format?
  manpageQuestion3: Can you provide an example of using procsystime to retrieve and display the current system time in a custom format?

