- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `radiobutton`.\n\n\n\nManpage text:\n\nradiobutton(n)\t\t     Tk Built-In Commands\t\tradiobutton(n)\n\n______________________________________________________________________________\n\nNAME\n       radiobutton - Create and manipulate radiobutton widgets\n\nSYNOPSIS\n       radiobutton pathName ?options?\n\nSTANDARD OPTIONS\n       -activebackground     -disabledforeground  -padx\n       -activeforeground     -font\t\t  -pady\n       -anchor\t\t     -foreground\t  -relief\n       -background\t     -highlightbackground -takefocus\n       -bitmap\t\t     -highlightcolor\t  -text\n       -borderwidth\t     -highlightthickness  -textvariable\n       -compound\t     -image\t\t  -underline\n       -cursor\t\t     -justify\t\t  -wraplength\n\n       See the options manual entry for details on the standard options.\n\nWIDGET-SPECIFIC OPTIONS\n       [-command command] Specifies a Tcl command to associate with the\n       button.\tThis command is typically invoked when mouse button 1 is\n       released over the button window.  The button's global variable\n       (-variable option) will be updated before the command is invoked.\n       [-height height] Specifies a desired height for the button.  If an\n       image or bitmap is being displayed in the button then the value is in\n       screen units (i.e. any of the forms acceptable to Tk_GetPixels); for\n       text it is in lines of text.  If this option is not specified, the\n       button's desired height is computed from the size of the image or\n       bitmap or text being displayed in it.  [-indicatoron indicatorOn]\n       Specifies whether or not the indicator should be drawn.\tMust be a\n       proper boolean value.  If false, the relief option is ignored and the\n       widget's relief is always sunken if the widget is selected and raised\n       otherwise.  [-selectcolor selectColor] Specifies a background color to\n       use when the button is selected.  If indicatorOn is true then the color\n       applies to the indicator.  Under Windows, this color is used as the\n       background for the indicator regardless of the select state.  If\n       indicatorOn is false, this color is used as the background for the\n       entire widget, in place of background or activeBackground, whenever the\n       widget is selected.  If specified as an empty string then no special\n       color is used for displaying when the widget is selected.\n       [-offrelief offRelief] Specifies the relief for the checkbutton when\n       the indicator is not drawn and the checkbutton is off.  The default\n       value is “raised”.  By setting this option to “flat” and setting\n       -indicatoron to false and -overrelief to “raised”, the effect is\n       achieved of having a flat button that raises on mouse-over and which is\n       depressed when activated.  This is the behavior typically exhibited by\n       the Align-Left, Align-Right, and Center radiobuttons on the toolbar of\n       a word-processor, for example.  [-overrelief overRelief] Specifies an\n       alternative relief for the radiobutton, to be used when the mouse\n       cursor is over the widget.  This option can be used to make toolbar\n       buttons, by configuring -relief flat -overrelief raised.  If the value\n       of this option is the empty string, then no alternative relief is used\n       when the mouse cursor is over the radiobutton.  The empty string is the\n       default value.  [-selectimage selectImage] Specifies an image to\n       display (in place of the image option) when the radiobutton is\n       selected.  This option is ignored unless the image option has been\n       specified.  [-state state] Specifies one of three states for the\n       radiobutton:  normal, active, or disabled.  In normal state the\n       radiobutton is displayed using the foreground and background options.\n       The active state is typically used when the pointer is over the\n       radiobutton.  In active state the radiobutton is displayed using the\n       activeForeground and activeBackground options.  Disabled state means\n       that the radiobutton should be insensitive:  the default bindings will\n       refuse to activate the widget and will ignore mouse button presses.  In\n       this state the disabledForeground and background options determine how\n       the radiobutton is displayed.  [-tristateimage tristateImage] Specifies │\n       an image to display (in place of the image option) when the radiobutton │\n       is selected.  This option is ignored unless the image option has been   │\n       specified.  [-tristatevalue tristateValue] Specifies the value that     │\n       causes the radiobutton to display the multi-value selection, also known\n       as the tri-state mode.  Defaults to “”.\t[-value value] Specifies value\n       to store in the button's associated variable whenever this button is\n       selected.  [-variable variable] Specifies name of global variable to\n       set whenever this button is selected.  Changes in this variable also\n       cause the button to select or deselect itself.  Defaults to the value\n       selectedButton.\t[-width width] Specifies a desired width for the\n       button.\tIf an image or bitmap is being displayed in the button, the\n       value is in screen units (i.e. any of the forms acceptable to\n       Tk_GetPixels); for text it is in characters.  If this option is not\n       specified, the button's desired width is computed from the size of the\n       image or bitmap or text being displayed in it.\n______________________________________________________________________________"
  manpageQuestion1: What is the primary purpose of the radiobutton command in Tk?
  manpageQuestion2: How would you create a radiobutton widget that changes color when selected and has a specific text label?
  manpageQuestion3: Can you provide an example of using the radiobutton command to set up a group of mutually exclusive options with a variable to track the selected value?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `radiobutton`.\n\n\n\nManpage text:\n\nDESCRIPTION\n       The radiobutton command creates a new window (given by the pathName\n       argument) and makes it into a radiobutton widget.  Additional options,\n       described above, may be specified on the command line or in the option\n       database to configure aspects of the radiobutton such as its colors,\n       font, text, and initial relief.\tThe radiobutton command returns its\n       pathName argument.  At the time this command is invoked, there must not\n       exist a window named pathName, but pathName's parent must exist.\n\n       A radiobutton is a widget that displays a textual string, bitmap or\n       image and a diamond or circle called an indicator.  If text is\n       displayed, it must all be in a single font, but it can occupy multiple\n       lines on the screen (if it contains newlines or if wrapping occurs\n       because of the wrapLength option) and one of the characters may\n       optionally be underlined using the underline option.  A radiobutton has\n       all of the behavior of a simple button: it can display itself in either\n       of three different ways, according to the state option; it can be made\n       to appear raised, sunken, or flat; it can be made to flash; and it\n       invokes a Tcl command whenever mouse button 1 is clicked over the check\n       button."
  manpageQuestion1: What is the primary purpose of the radiobutton command?
  manpageQuestion2: How would you create a radiobutton widget with the text 'Yes' and set its initial relief to raised?
  manpageQuestion3: Can you provide an example of using the radiobutton command to create a widget that displays a bitmap image and has an underlined text label?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `radiobutton`.\n\n\n\nManpage text:\n\nIn addition, radiobuttons can be selected.  If a radiobutton is\n       selected, the indicator is normally drawn with a selected appearance,\n       and a Tcl variable associated with the radiobutton is set to a\n       particular value (normally 1).  Under Unix, the indicator is drawn with\n       a sunken relief and a special color.  Under Windows, the indicator is\n       drawn with a round mark inside.\tIf the radiobutton is not selected,\n       then the indicator is drawn with a deselected appearance, and the\n       associated variable is set to a different value (typically 0).  The\n       indicator is drawn without a round mark inside.\tTypically, several\n       radiobuttons share a single variable and the value of the variable\n       indicates which radiobutton is to be selected.  When a radiobutton is\n       selected it sets the value of the variable to indicate that fact;  each\n       radiobutton also monitors the value of the variable and automatically\n       selects and deselects itself when the variable's value changes.\tIf the │\n       variable's value matches the tristateValue, then the radiobutton is     │\n       drawn using the tri-state mode.\tThis mode is used to indicate mixed or │\n       multiple values.  (This is used when the radiobutton represents the     │\n       state of multiple items.)  By default the variable selectedButton is\n       used;  its contents give the name of the button that is selected, or\n       the empty string if no button associated with that variable is\n       selected.  The name of the variable for a radiobutton, plus the\n       variable to be stored into it, may be modified with options on the\n       command line or in the option database.\tConfiguration options may also\n       be used to modify the way the indicator is displayed (or whether it is\n       displayed at all).  By default a radiobutton is configured to select\n       itself on button clicks."
  manpageQuestion1: What is the primary purpose of the radiobutton resource?
  manpageQuestion2: How can you configure a radiobutton to use a different variable for tracking its selected state?
  manpageQuestion3: What is the behavior of a radiobutton when the variable's value matches the tristateValue?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `radiobutton`.\n\n\n\nManpage text:\n\nWIDGET COMMAND\n       The radiobutton command creates a new Tcl command whose name is\n       pathName.  This command may be used to invoke various operations on the\n       widget.\tIt has the following general form:\n\t      pathName option ?arg arg ...?\n       Option and the args determine the exact behavior of the command.  The\n       following commands are possible for radiobutton widgets:\n\n       pathName cget option\n\t      Returns the current value of the configuration option given by\n\t      option.  Option may have any of the values accepted by the\n\t      radiobutton command.\n\n       pathName configure ?option? ?value option value ...?\n\t      Query or modify the configuration options of the widget.\tIf no\n\t      option is specified, returns a list describing all of the\n\t      available options for pathName (see Tk_ConfigureInfo for\n\t      information on the format of this list).\tIf option is specified\n\t      with no value, the command returns a list describing the one\n\t      named option (this list will be identical to the corresponding\n\t      sublist of the value returned if no option is specified).  If\n\t      one or more option-value pairs are specified, the command\n\t      modifies the given widget option(s) to have the given value(s);\n\t      in this case the command returns an empty string.  Option may\n\t      have any of the values accepted by the radiobutton command."
  manpageQuestion1: What is the primary purpose of the radiobutton command in Tcl?
  manpageQuestion2: How can you retrieve the current value of a specific configuration option for a radiobutton widget?
  manpageQuestion3: Can you provide an example of how to configure a radiobutton widget with multiple options using the configure command?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `radiobutton`.\n\n\n\nManpage text:\n\npathName deselect\n\t      Deselects the radiobutton and sets the associated variable to an\n\t      empty string.  If this radiobutton was not currently selected,\n\t      the command has no effect.\n\n       pathName flash\n\t      Flashes the radiobutton.\tThis is accomplished by redisplaying\n\t      the radiobutton several times, alternating between active and\n\t      normal colors.  At the end of the flash the radiobutton is left\n\t      in the same normal/active state as when the command was invoked.\n\t      This command is ignored if the radiobutton's state is disabled.\n\n       pathName invoke\n\t      Does just what would have happened if the user invoked the\n\t      radiobutton with the mouse: selects the button and invokes its\n\t      associated Tcl command, if there is one.\tThe return value is\n\t      the return value from the Tcl command, or an empty string if\n\t      there is no command associated with the radiobutton.  This\n\t      command is ignored if the radiobutton's state is disabled.\n\n       pathName select\n\t      Selects the radiobutton and sets the associated variable to the\n\t      value corresponding to this widget."
  manpageQuestion1: What is the primary purpose of the radiobutton resource in macOS?
  manpageQuestion2: How would you use the 'invoke' command on a radiobutton to trigger its associated Tcl command?
  manpageQuestion3: Can you provide an example of using the 'select' command on a radiobutton to set its state and associated variable?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `radiobutton`.\n\n\n\nManpage text:\n\nBINDINGS\n       Tk automatically creates class bindings for radiobuttons that give them\n       the following default behavior:\n\n       [1]    On Unix systems, a radiobutton activates whenever the mouse\n\t      passes over it and deactivates whenever the mouse leaves the\n\t      radiobutton.  On Mac and Windows systems, when mouse button 1 is\n\t      pressed over a radiobutton, the button activates whenever the\n\t      mouse pointer is inside the button, and deactivates whenever the\n\t      mouse pointer leaves the button.\n\n       [2]    When mouse button 1 is pressed over a radiobutton it is invoked\n\t      (it becomes selected and the command associated with the button\n\t      is invoked, if there is one).\n\n       [3]    When a radiobutton has the input focus, the space key causes the\n\t      radiobutton to be invoked.\n\n       If the radiobutton's state is disabled then none of the above actions\n       occur:  the radiobutton is completely non-responsive.\n\n       The behavior of radiobuttons can be changed by defining new bindings\n       for individual widgets or by redefining the class bindings."
  manpageQuestion1: What is the primary purpose of the radiobutton resource in Tk?
  manpageQuestion2: How does a radiobutton behave on Unix systems when the mouse interacts with it?
  manpageQuestion3: What actions trigger a radiobutton to be invoked when it has the input focus?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `radiobutton`.\n\n\n\nManpage text:\n\nSEE ALSO\n       checkbutton(n), labelframe(n), listbox(n), options(n), scale(n),\n       ttk::radiobutton(n)\n\nKEYWORDS\n       radiobutton, widget\n\nTk\t\t\t\t      4.4\t\t\tradiobutton(n)"
  manpageQuestion1: What is the primary purpose of the radiobutton resource in macOS?
  manpageQuestion2: How would you create a radiobutton widget with specific text and variable in Tk?
  manpageQuestion3: Can you explain how to associate a radiobutton with a specific value or variable in Tk?

