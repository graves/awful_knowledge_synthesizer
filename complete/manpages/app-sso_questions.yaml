- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `app-sso`.\n\n\n\nManpage text:\n\napp-sso(1)\t\t    General Commands Manual\t\t    app-sso(1)\n\nNAME\n     app-sso â€“ A tool used to control and get information about the Kerberos\n     SSO extension.\n\nSYNOPSIS\n     app-sso [command]\n\n\t     Commands:\n\t\t   -a, --authenticate REALM [options ...]\n\t\t\t -u, --username USERNAME\n\t\t\t -f, --force\n\t\t\t -q, --quiet\n\t\t   -d, --logout REALM\n\t\t   -c, --changepassword REALM\n\t\t   -l, --listrealms\n\t\t   -i, --realminfo REALM\n\t\t\t -v, --verbose\n\t\t   -i, --sitecode REALM\n\t\t\t -v, --verbose\n\t\t   -r, --reset REALM\n\t\t   -k, --keychainoption REALM\n\t\t   -j, --json REALM\n\t\t   -h, --help REALM\n\n\nDESCRIPTION\n     app-sso is used to control and get information about the Kerberos Single\n     Sign-on (SSO) extension via the command line. The Kerberos SSO extension\n     simplifies using Kerberos authentication with an Active Directory based\n     Kerberos realm. It also allows the user to use Active Directory specific\n     functions such as password changes and password expiration notifications.\n\n     Note that app-sso cannot be used to completely configure the Kerberos SSO\n     extension. Configuring the Kerberos SSO extension requires a user\n     approved MDM enrollment, as well as an MDM solution that can build and\n     deliver an appropriately configured Extensible SSO configuration profile\n     payload. See your MDM vendor's documentation for additional information.\n\nCOMMANDS\n     -a, --authenticate REALM\n\t      Display the login dialog for the specified realm, or if the user\n\t      has already configured the Kerberos SSO extension, acquire a new\n\t      credential. Returns success upon acquiring a new credential or\n\t      if the user already has a valid credential.\n\n\t      -u, --username\n\t\t       The username for authentication. The user will not be\n\t\t       able to change this username on the login screen.\n\n\t      -f, --force\n\t\t       Display the login screen even if the user is already\n\t\t       authenticated.\n\n\t      -q, --quiet\n\t\t       Suppress the information that is normally printed after\n\t\t       authentication.\n\n     -d, --logout REALM\n\t      Logs out any user logged into the specified realm.\n\n     -c, --changepassword REALM\n\t      Displays the \"Change Password\" dialog for the specified realm.\n\n     -l, --listrealms\n\t      Prints the list of configured realms.\n\n     -i, --realminfo REALM\n\t      Print information about the currently configured realm. This\n\t      includes information such as the current site code, network home\n\t      directory and date the user's password expires.\n\n\t      -v, --verbose\n\t\t       Print the complete site code cache in the results.\n\n     -s, --sitecode REALM\n\t      Perform a site lookup for the specified realm.\n\n\t      -v, --verbose\n\t\t       Print the complete site code cache in the results.\n\n     -r, --reset [REALM]\n\t      Reset the cache for the specified realm. If a realm isn't\n\t      specified, reset caches for all realms.\n\n     -k, --keychainoption REALM\n\t      Resets the \"login automatically\" option for the specified realm.\n\n     -p, --proceedusersetup REALM\n\t      Allow user setup to proceed if you are using \"delayUserSetup\" in\n\t      your configuration profile.\n\n     -t, --sharedsettings REALM\n\t      Prints the kerberos settings that are shared with other\n\t      processes for the specified realm. For diagnostic purposes only,\n\t      not intended for scripting.\n\n     -j, --json\n\t      Format the output of this command as JSON instead of property\n\t      list format.\n\n     -h, --help\n\t      Print a synopsis of the above document.\n\nEXAMPLES\n     Print infomation about the PRETENDCO.COM realm:\n\t      app-sso -i PRETENDCO.COM\n\n     Authenticate to the PRETENDCO.COM realm as jappleseed:\n\t      app-sso -a PRETENDCO.COM -u jappleseed\n\nKerberos Extension UI Options\n     startInSmartCardMode\n\t  The default behavior of the KerberosExtension is to start in the UI\n\t  mode last used by the user.  To force it to start in SmartCard mode,\n\t  run this defaults command:\n\n\t\tdefaults write com.apple.AppSSOKerberos.KerberosExtension\n\t\tstartInSmartCardMode -bool true\n\n     allowSmartCard\n\t   The default behavior of the KerberosExtension is to show both\n\t  password and SmartCard authentication in the UI.  To hide\n\t  SmartCards, run this defaults command:\n\n\t\tdefaults write com.apple.AppSSOKerberos.KerberosExtension\n\t\tallowSmartCard -bool false\n\n     allowPassword\n\t   The default behavior of the KerberosExtension is to show both\n\t  password and SmartCard authentication in the UI.  To hide passwords,\n\t  run this defaults command:\n\n\t\tdefaults write com.apple.AppSSOKerberos.KerberosExtension\n\t\tallowPassword -bool false\n\n     identityIssuerAutoSelectFilter\n\t   The default behavior of the KerberosExtension is to auto select an\n\t  available identity if one is available.  If more than one is\n\t  available, then the identityIssuerAutoSelectFilter can be used to\n\t  filter the issuer names.  If one is left, then it will be auto\n\t  selected.  The value should include any wild cards.  To enable it,\n\t  run this defaults command with the correct filter value:\n\n\t\tdefaults write com.apple.AppSSOKerberos.KerberosExtension identityIssuerAutoSelectFilter 'Apple CA*'\n\nmacOS\t\t\t       January 28, 2020 \t\t\t macOS"
  manpageQuestion1: What is the primary purpose of the app-sso tool?
  manpageQuestion2: How would you use app-sso to authenticate to the PRETENDCO.COM realm with the username jappleseed?
  manpageQuestion3: Can you provide an example of using app-sso to list all configured realms?

