- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `split`.\n\n\n\nManpage text:\n\nSPLIT(1)\t\t    General Commands Manual\t\t      SPLIT(1)\n\nNAME\n     split – split a file into pieces\n\nSYNOPSIS\n     split [-cd] [-l line_count] [-a suffix_length] [file [prefix]]\n     split [-cd] -b byte_count[K|k|M|m|G|g] [-a suffix_length] [file [prefix]]\n     split [-cd] -n chunk_count [-a suffix_length] [file [prefix]]\n     split [-cd] -p pattern [-a suffix_length] [file [prefix]]\n\nDESCRIPTION\n     The split utility reads the given file and breaks it up into files of\n     1000 lines each (if no options are specified), leaving the file\n     unchanged.  If file is a single dash (‘-’) or absent, split reads from\n     the standard input.\n\n     The options are as follows:\n\n     -a suffix_length\n\t     Use suffix_length letters to form the suffix of the file name.\n\n     -b byte_count[K|k|M|m|G|g]\n\t     Create split files byte_count bytes in length.  If k or K is\n\t     appended to the number, the file is split into byte_count\n\t     kilobyte pieces.  If m or M is appended to the number, the file\n\t     is split into byte_count megabyte pieces.\tIf g or G is appended\n\t     to the number, the file is split into byte_count gigabyte pieces."
  manpageQuestion1: What is the primary purpose of the split command?
  manpageQuestion2: How would you use the split command to divide a file into 5 equal parts?
  manpageQuestion3: Can you provide an example of using the split command to split a file into 100-line chunks with custom suffixes?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `split`.\n\n\n\nManpage text:\n\n-c      Continue creating files and do not overwrite existing output\n\t     files.\n\n     -d      Use a numeric suffix instead of a alphabetic suffix.\n\n     -l line_count\n\t     Create split files line_count lines in length.\n\n     -n chunk_count\n\t     Split file into chunk_count smaller files.  The first n - 1 files\n\t     will be of size (size of file / chunk_count ) and the last file\n\t     will contain the remaining bytes.\n\n     -p pattern\n\t     The file is split whenever an input line matches pattern, which\n\t     is interpreted as an extended regular expression.\tThe matching\n\t     line will be the first line of the next output file.  This option\n\t     is incompatible with the -b and -l options.\n\n     If additional arguments are specified, the first is used as the name of\n     the input file which is to be split.  If a second additional argument is\n     specified, it is used as a prefix for the names of the files into which\n     the file is split.  In this case, each file into which the file is split\n     is named by the prefix followed by a lexically ordered suffix using\n     suffix_length characters in the range “a-z”.  If -a is not specified, two\n     letters are used as the initial suffix."
  manpageQuestion1: What is the primary purpose of the split command?
  manpageQuestion2: How can you use the split command to divide a file into chunks of 100 lines each?
  manpageQuestion3: Can you provide an example of using the split command with the -n option to divide a file into 5 equal parts?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `split`.\n\n\n\nManpage text:\n\nIf the prefix argument is not specified, the file is split into lexically\n     ordered files named with the prefix “x” and with suffixes as above.\n\n     By default, split will overwrite any existing output files.  If the -c\n     flag is specified, split will instead create files with names that do not\n     already exist.\n\nENVIRONMENT\n     The LANG, LC_ALL, LC_CTYPE and LC_COLLATE environment variables affect\n     the execution of split as described in environ(7).\n\nEXIT STATUS\n     The split utility exits 0 on success, and >0 if an error occurs.\n\nEXAMPLES\n     Split input into as many files as needed, so that each file contains at\n     most 2 lines:\n\n\t   $ echo -e \"first line\\nsecond line\\nthird line\\nforth line\" | split -l2\n\n     Split input in chunks of 10 bytes using numeric prefixes for file names.\n     This generates two files of 10 bytes (x00 and x01) and a third file (x02)\n     with the remaining 2 bytes:\n\n\t   $ echo -e \"This is 22 bytes long\" | split -d -b10\n\n     Split input generating 6 files:"
  manpageQuestion1: What is the primary purpose of the split command?
  manpageQuestion2: How would you use the split command to divide a file into multiple files, each containing no more than 2 lines?
  manpageQuestion3: Can you provide an example of using the split command to divide input into chunks of 10 bytes with numeric prefixes for file names?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `split`.\n\n\n\nManpage text:\n\n$ echo -e \"This is 22 bytes long\" | split -n 6\n\n     Split input creating a new file every time a line matches the regular\n     expression for a “t” followed by either “a” or “u” thus creating two\n     files:\n\n\t   $ echo -e \"stack\\nstock\\nstuck\\nanother line\" | split -p 't[au]'\n\nSEE ALSO\n     csplit(1), re_format(7)\n\nSTANDARDS\n     The split utility conforms to IEEE Std 1003.1-2001 (“POSIX.1”).\n\nHISTORY\n     A split command appeared in Version 3 AT&T UNIX.\n\n     Before FreeBSD 14, pattern and line matching only operated on lines\n     shorter than 65,536 bytes.\n\nmacOS 15.3\t\t\t May 26, 2023\t\t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the split command?
  manpageQuestion2: How can I use the split command to divide a text input into multiple files based on specific pattern matches?
  manpageQuestion3: Can you provide an example of using the split command to create multiple files by splitting a text input into parts based on line endings or specific characters?

