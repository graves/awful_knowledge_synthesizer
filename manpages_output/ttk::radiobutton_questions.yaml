- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ttk::radiobutton`.\n\n\n\nManpage text:\n\nttk::radiobutton(n)\t       Tk Themed Widget \t   ttk::radiobutton(n)\n\n______________________________________________________________________________\n\nNAME\n       ttk::radiobutton - Mutually exclusive option widget\n\nSYNOPSIS\n       ttk::radiobutton pathName ?options?\n______________________________________________________________________________\n\nDESCRIPTION\n       ttk::radiobutton widgets are used in groups to show or change a set of\n       mutually-exclusive options.  Radiobuttons are linked to a Tcl variable,\n       and have an associated value; when a radiobutton is clicked, it sets\n       the variable to its associated value.\n\nSTANDARD OPTIONS\n       -class\t\t     -compound\t\t  -cursor\n       -image\t\t     -state\t\t  -style\n       -takefocus\t     -text\t\t  -textvariable\n       -underline\t     -width\n\n       See the ttk_widget manual entry for details on the standard options.\n\nWIDGET-SPECIFIC OPTIONS\n       [-command command] A Tcl script to evaluate whenever the widget is\n       invoked.  [-value Value] The value to store in the associated -variable\n       when the widget is selected.  [-variable variable] The name of a global\n       variable whose value is linked to the widget.  Default value is\n       ::selectedButton."
  manpageQuestion1: What is the primary purpose of the ttk::radiobutton widget?
  manpageQuestion2: How would you create a group of mutually exclusive radio buttons in Tk using the ttk::radiobutton command?
  manpageQuestion3: Can you provide an example of using the ttk::radiobutton command to link a radio button to a Tcl variable and set its associated value?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ttk::radiobutton`.\n\n\n\nManpage text:\n\nWIDGET COMMAND\n       In addition to the standard cget, configure, identify, instate, and\n       state commands, radiobuttons support the following additional widget\n       commands:\n\n       pathname invoke\n\t      Sets the -variable to the -value, selects the widget, and\n\t      evaluates the associated -command.  Returns the result of the\n\t      -command, or the empty string if no -command is specified.\n\nWIDGET STATES\n       The widget does not respond to user input if the disabled state is set.\n       The widget sets the selected state whenever the linked -variable is set\n       to the widget's -value, and clears it otherwise.  The widget sets the\n       alternate state whenever the linked -variable is unset.\t(The alternate\n       state may be used to indicate a “tri-state” or “indeterminate”\n       selection.)\n\nSTANDARD STYLES\n       Ttk::radiobutton widgets support the Toolbutton style in all standard\n       themes, which is useful for creating widgets for toolbars.\n\nSEE ALSO\n       ttk::widget(n), ttk::checkbutton(n), radiobutton(n)"
  manpageQuestion1: What is the primary purpose of the ttk::radiobutton widget?
  manpageQuestion2: How can you use the pathname command with a ttk::radiobutton to trigger its associated action?
  manpageQuestion3: What is the function of the alternate state in a ttk::radiobutton widget?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ttk::radiobutton`.\n\n\n\nManpage text:\n\nKEYWORDS\n       widget, button, option\n\nTk\t\t\t\t      8.5\t\t   ttk::radiobutton(n)"
  manpageQuestion1: What is the primary purpose of the ttk::radiobutton widget?
  manpageQuestion2: How would you create a group of radio buttons in Tkinter using ttk::radiobutton?
  manpageQuestion3: Can you provide an example of how to configure the text and variable for a ttk::radiobutton widget?

