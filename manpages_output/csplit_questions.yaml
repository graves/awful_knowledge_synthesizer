- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `csplit`.\n\n\n\nManpage text:\n\nCSPLIT(1)\t\t    General Commands Manual\t\t     CSPLIT(1)\n\nNAME\n     csplit – split files based on context\n\nSYNOPSIS\n     csplit [-ks] [-f prefix] [-n number] file args ...\n\nDESCRIPTION\n     The csplit utility splits file into pieces using the patterns args.  If\n     file is a dash (‘-’), csplit reads from standard input.\n\n     Files are created with a prefix of “xx” and two decimal digits.  The size\n     of each file is written to standard output as it is created.  If an error\n     occurs whilst files are being created, or a HUP, INT, or TERM signal is\n     received, all files previously written are removed.\n\n     The options are as follows:\n\n     -f prefix\n\t     Create file names beginning with prefix, instead of “xx”.\n\n     -k      Do not remove previously created files if an error occurs or a\n\t     HUP, INT, or TERM signal is received.\n\n     -n number\n\t     Create file names beginning with number of decimal digits after\n\t     the prefix, instead of 2.\n\n     -s      Do not write the size of each output file to standard output as\n\t     it is created."
  manpageQuestion1: What is the primary purpose of the csplit command?
  manpageQuestion2: How can you use csplit to split a file into sections based on specific patterns and save the output files with a custom prefix?
  manpageQuestion3: Can you provide an example of using csplit to split a file into multiple parts with 3-digit numbering after the prefix?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `csplit`.\n\n\n\nManpage text:\n\nThe args operands may be a combination of the following patterns:\n\n     /regexp/[[+|-]offset]\n\t     Create a file containing the input from the current line to (but\n\t     not including) the next line matching the given basic regular\n\t     expression.  An optional offset from the line that matched may be\n\t     specified.\n\n     %regexp%[[+|-]offset]\n\t     Same as above but a file is not created for the output.\n\n     line_no\n\t     Create containing the input from the current line to (but not\n\t     including) the specified line number.\n\n     {num}   Repeat the previous pattern the specified number of times.  If it\n\t     follows a line number pattern, a new file will be created for\n\t     each line_no lines, num times.  The first line of the file is\n\t     line number 1 for historic reasons.\n\n     After all the patterns have been processed, the remaining input data (if\n     there is any) will be written to a new file.\n\n     Requesting to split at a line before the current line number or past the\n     end of the file will result in an error."
  manpageQuestion1: What is the primary purpose of the csplit command?
  manpageQuestion2: How can you use csplit to split a file into sections based on lines matching the regular expression /pattern/ and save each section to a separate file?
  manpageQuestion3: Can you provide an example of using csplit with the line number option to divide a file into three parts, each containing 10 lines?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `csplit`.\n\n\n\nManpage text:\n\nENVIRONMENT\n     The LANG, LC_ALL, LC_COLLATE and LC_CTYPE environment variables affect\n     the execution of csplit as described in environ(7).\n\nEXIT STATUS\n     The csplit utility exits 0 on success, and >0 if an error occurs.\n\nEXAMPLES\n     Split the mdoc(7) file foo.1 into one file for each section (up to 21\n     plus one for the rest, if any):\n\n\t   csplit -k foo.1 '%^\\.Sh%' '/^\\.Sh/' '{20}'\n\n     Split standard input after the first 99 lines and every 100 lines\n     thereafter:\n\n\t   csplit -k - 100 '{19}'\n\nSEE ALSO\n     sed(1), split(1), re_format(7)\n\nSTANDARDS\n     The csplit utility conforms to IEEE Std 1003.1-2001 (“POSIX.1”).\n\nHISTORY\n     A csplit command appeared in PWB UNIX.\n\nBUGS\n     Input lines are limited to LINE_MAX (2048) bytes in length.\n\nmacOS 15.3\t\t       February 6, 2014 \t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the csplit command?
  manpageQuestion2: How can you use csplit to divide a file into sections, such as splitting the mdoc file foo.1 into multiple files based on section markers?
  manpageQuestion3: What command would you use with csplit to split standard input into parts after the first 99 lines and every 100 lines thereafter?

