- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ssh-add`.\n\n\n\nManpage text:\n\nSSH-ADD(1)\t\t    General Commands Manual\t\t    SSH-ADD(1)\n\nNAME\n     ssh-add – adds private key identities to the OpenSSH authentication agent\n\nSYNOPSIS\n     ssh-add [-CcDdKkLlqvXx] [-E fingerprint_hash] [-H hostkey_file]\n\t     [-h destination_constraint] [-S provider] [-t life] [file ...]\n     ssh-add -s pkcs11 [-Cv] [certificate ...]\n     ssh-add -e pkcs11\n     ssh-add -T pubkey ...\n\nDESCRIPTION\n     ssh-add adds private key identities to the authentication agent,\n     ssh-agent(1).  When run without arguments, it adds the files\n     ~/.ssh/id_rsa, ~/.ssh/id_ecdsa, ~/.ssh/id_ecdsa_sk, ~/.ssh/id_ed25519 and\n     ~/.ssh/id_ed25519_sk.  After loading a private key, ssh-add will try to\n     load corresponding certificate information from the filename obtained by\n     appending -cert.pub to the name of the private key file.  Alternative\n     file names can be given on the command line.\n\n     If any file requires a passphrase, ssh-add asks for the passphrase from\n     the user.\tThe passphrase is read from the user's tty.  ssh-add retries\n     the last passphrase if multiple identity files are given."
  manpageQuestion1: What is the primary purpose of the ssh-add command?
  manpageQuestion2: How would you use ssh-add to add a private key file named id_rsa to the SSH authentication agent?
  manpageQuestion3: Can you provide an example of using ssh-add to load a PKCS#11 module and add its associated certificate to the agent?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ssh-add`.\n\n\n\nManpage text:\n\nThe authentication agent must be running and the SSH_AUTH_SOCK\n     environment variable must contain the name of its socket for ssh-add to\n     work.\n\n     The options are as follows:\n\n     -C      When loading keys into or deleting keys from the agent, process\n\t     certificates only and skip plain keys.\n\n     -c      Indicates that added identities should be subject to confirmation\n\t     before being used for authentication.  Confirmation is performed\n\t     by ssh-askpass(1).  Successful confirmation is signaled by a zero\n\t     exit status from ssh-askpass(1), rather than text entered into\n\t     the requester.\n\n     -D      Deletes all identities from the agent.\n\n     -d      Instead of adding identities, removes identities from the agent.\n\t     If ssh-add has been run without arguments, the keys for the\n\t     default identities and their corresponding certificates will be\n\t     removed.  Otherwise, the argument list will be interpreted as a\n\t     list of paths to public key files to specify keys and\n\t     certificates to be removed from the agent.  If no public key is\n\t     found at a given path, ssh-add will append .pub and retry.  If\n\t     the argument list consists of “-” then ssh-add will read public\n\t     keys to be removed from standard input."
  manpageQuestion1: What is the primary purpose of the ssh-add command?
  manpageQuestion2: How can I delete all identities from the SSH agent using ssh-add?
  manpageQuestion3: What is the function of the -c flag in the ssh-add command?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ssh-add`.\n\n\n\nManpage text:\n\n-E fingerprint_hash\n\t     Specifies the hash algorithm used when displaying key\n\t     fingerprints.  Valid options are: “md5” and “sha256”.  The\n\t     default is “sha256”.\n\n     -e pkcs11\n\t     Remove keys provided by the PKCS#11 shared library pkcs11.\n\n     -H hostkey_file\n\t     Specifies a known hosts file to look up hostkeys when using\n\t     destination-constrained keys via the -h flag.  This option may be\n\t     specified multiple times to allow multiple files to be searched.\n\t     If no files are specified, ssh-add will use the default\n\t     ssh_config(5) known hosts files: ~/.ssh/known_hosts,\n\t     ~/.ssh/known_hosts2, /etc/ssh/ssh_known_hosts, and\n\t     /etc/ssh/ssh_known_hosts2.\n\n     -h destination_constraint\n\t     When adding keys, constrain them to be usable only through\n\t     specific hosts or to specific destinations.\n\n\t     Destination constraints of the form ‘[user@]dest-hostname’ permit\n\t     use of the key only from the origin host (the one running\n\t     ssh-agent(1)) to the listed destination host, with optional user\n\t     name."
  manpageQuestion1: What is the primary purpose of the ssh-add command?
  manpageQuestion2: How can you use ssh-add to add a private key and restrict its usage to specific destination hosts?
  manpageQuestion3: Can you provide an example of using ssh-add with the -H option to specify a custom known hosts file for hostkey lookup?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ssh-add`.\n\n\n\nManpage text:\n\nConstraints of the form ‘src-hostname>[user@]dst-hostname’ allow\n\t     a key available on a forwarded ssh-agent(1) to be used through a\n\t     particular host (as specified by ‘src-hostname’) to authenticate\n\t     to a further host, specified by ‘dst-hostname’.\n\n\t     Multiple destination constraints may be added when loading keys.\n\t     When attempting authentication with a key that has destination\n\t     constraints, the whole connection path, including ssh-agent(1)\n\t     forwarding, is tested against those constraints and each hop must\n\t     be permitted for the attempt to succeed.  For example, if key is\n\t     forwarded to a remote host, ‘host-b’, and is attempting\n\t     authentication to another host, ‘host-c’, then the operation will\n\t     be successful only if ‘host-b’ was permitted from the origin host\n\t     and the subsequent ‘host-b>host-c’ hop is also permitted by\n\t     destination constraints.\n\n\t     Hosts are identified by their host keys, and are looked up from\n\t     known hosts files by ssh-add.  Wildcards patterns may be used for\n\t     hostnames and certificate host keys are supported.  By default,\n\t     keys added by ssh-add are not destination constrained."
  manpageQuestion1: What is the primary purpose of the ssh-add command?
  manpageQuestion2: How can you configure ssh-add to restrict key usage to specific hosts during authentication?
  manpageQuestion3: Can you explain how destination constraints work in the context of ssh-add?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ssh-add`.\n\n\n\nManpage text:\n\nDestination constraints were added in OpenSSH release 8.9.\n\t     Support in both the remote SSH client and server is required when\n\t     using destination-constrained keys over a forwarded ssh-agent(1)\n\t     channel.\n\n\t     It is also important to note that destination constraints can\n\t     only be enforced by ssh-agent(1) when a key is used, or when it\n\t     is forwarded by a cooperating ssh(1).  Specifically, it does not\n\t     prevent an attacker with access to a remote SSH_AUTH_SOCK from\n\t     forwarding it again and using it on a different host (but only to\n\t     a permitted destination).\n\n     -K      Load resident keys from a FIDO authenticator.\n\n     -k      When loading keys into or deleting keys from the agent, process\n\t     plain private keys only and skip certificates.\n\n     -L      Lists public key parameters of all identities currently\n\t     represented by the agent.\n\n     -l      Lists fingerprints of all identities currently represented by the\n\t     agent.\n\n     -q      Be quiet after a successful operation."
  manpageQuestion1: What is the primary purpose of the ssh-add command?
  manpageQuestion2: How can you use ssh-add to load keys from a FIDO authenticator?
  manpageQuestion3: What is the function of the -l flag in ssh-add?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ssh-add`.\n\n\n\nManpage text:\n\n-S provider\n\t     Specifies a path to a library that will be used when adding FIDO\n\t     authenticator-hosted keys, overriding the default of using the\n\t     internal USB HID support.\n\n     -s pkcs11\n\t     Add keys provided by the PKCS#11 shared library pkcs11.\n\t     Certificate files may optionally be listed as command-line\n\t     arguments.  If these are present, then they will be loaded into\n\t     the agent using any corresponding private keys loaded from the\n\t     PKCS#11 token.\n\n     -T pubkey ...\n\t     Tests whether the private keys that correspond to the specified\n\t     pubkey files are usable by performing sign and verify operations\n\t     on each.\n\n     -t life\n\t     Set a maximum lifetime when adding identities to an agent.  The\n\t     lifetime may be specified in seconds or in a time format\n\t     specified in sshd_config(5).\n\n     -v      Verbose mode.  Causes ssh-add to print debugging messages about\n\t     its progress.  This is helpful in debugging problems.  Multiple\n\t     -v options increase the verbosity.  The maximum is 3."
  manpageQuestion1: What is the primary purpose of the ssh-add command?
  manpageQuestion2: How would you use ssh-add to add keys from a PKCS#11 library and test if their corresponding public keys are usable?
  manpageQuestion3: Can you provide an example of using ssh-add to set a maximum lifetime for added identities?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ssh-add`.\n\n\n\nManpage text:\n\n-X      Unlock the agent.\n\n     -x      Lock the agent with a password.\n\n     --apple-use-keychain\n\t     When adding identities, each passphrase will also be stored in\n\t     the user's keychain.  When removing identities with -d, each\n\t     passphrase will be removed from it.\n\n     --apple-load-keychain\n\t     Add identities to the agent using any passphrase stored in the\n\t     user's keychain.\n\nENVIRONMENT\n     DISPLAY, SSH_ASKPASS and SSH_ASKPASS_REQUIRE\n\t     If ssh-add needs a passphrase, it will read the passphrase from\n\t     the current terminal if it was run from a terminal.  If ssh-add\n\t     does not have a terminal associated with it but DISPLAY and\n\t     SSH_ASKPASS are set, it will execute the program specified by\n\t     SSH_ASKPASS (by default “ssh-askpass”) and open an X11 window to\n\t     read the passphrase.  This is particularly useful when calling\n\t     ssh-add from a .xsession or related script.\n\n\t     SSH_ASKPASS_REQUIRE allows further control over the use of an\n\t     askpass program.  If this variable is set to “never” then ssh-add\n\t     will never attempt to use one.  If it is set to “prefer”, then\n\t     ssh-add will prefer to use the askpass program instead of the TTY\n\t     when requesting passwords.  Finally, if the variable is set to\n\t     “force”, then the askpass program will be used for all passphrase\n\t     input regardless of whether DISPLAY is set."
  manpageQuestion1: What is the primary purpose of the ssh-add command?
  manpageQuestion2: How can you use ssh-add to lock the agent with a password?
  manpageQuestion3: What is the effect of using the --apple-use-keychain option with ssh-add?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ssh-add`.\n\n\n\nManpage text:\n\nSSH_AUTH_SOCK\n\t     Identifies the path of a UNIX-domain socket used to communicate\n\t     with the agent.\n\n     SSH_SK_PROVIDER\n\t     Specifies a path to a library that will be used when loading any\n\t     FIDO authenticator-hosted keys, overriding the default of using\n\t     the built-in USB HID support.\n\n     APPLE_SSH_ADD_BEHAVIOR\n\t     Enables or disables the older processing of the -A and -K options\n\t     used in earlier macOS releases.  These options have been renamed\n\t     --apple-load-keychain and --apple-use-keychain respectively.\n\t     However, -A and -K still behave as in earlier releases except in\n\t     the following circumstances.  If a security provider was\n\t     specified with -S or SSH_SK_PROVIDER, or if\n\t     APPLE_SSH_ADD_BEHAVIOR is set to the value “openssh”, then\n\t     ssh-add uses standard OpenSSH behavior: the -A flag is not\n\t     recognized and the -K flag behaves as documented in the\n\t     DESCRIPTION section above.\n\n\t     Otherwise, ssh-add -A and -K will behave as in earlier macOS\n\t     releases. A warning will be output to standard error unless\n\t     APPLE_SSH_ADD_BEHAVIOR is set to the value “macos”.  Note: Future\n\t     releases of macOS will not support neither -A nor -K without\n\t     setting this environment variable."
  manpageQuestion1: What is the primary purpose of the ssh-add command?
  manpageQuestion2: How can you configure ssh-add to use a custom FIDO authenticator-hosted key library?
  manpageQuestion3: What is the effect of setting the APPLE_SSH_ADD_BEHAVIOR environment variable to 'macos'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ssh-add`.\n\n\n\nManpage text:\n\nFILES\n     ~/.ssh/id_ecdsa\n     ~/.ssh/id_ecdsa_sk\n     ~/.ssh/id_ed25519\n     ~/.ssh/id_ed25519_sk\n     ~/.ssh/id_rsa\n\t     Contains the ECDSA, authenticator-hosted ECDSA, Ed25519,\n\t     authenticator-hosted Ed25519 or RSA authentication identity of\n\t     the user.\n\n     Identity files should not be readable by anyone but the user.  Note that\n     ssh-add ignores identity files if they are accessible by others.\n\nEXIT STATUS\n     Exit status is 0 on success, 1 if the specified command fails, and 2 if\n     ssh-add is unable to contact the authentication agent.\n\nSEE ALSO\n     ssh(1), ssh-agent(1), ssh-askpass(1), ssh-keygen(1), sshd(8)\n\nAUTHORS\n     OpenSSH is a derivative of the original and free ssh 1.2.12 release by\n     Tatu Ylonen.  Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos, Theo\n     de Raadt and Dug Song removed many bugs, re-added newer features and\n     created OpenSSH.  Markus Friedl contributed the support for SSH protocol\n     versions 1.5 and 2.0.\n\nmacOS 15.3\t\t\t June 17, 2024\t\t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the ssh-add command?
  manpageQuestion2: How can you use ssh-add to add an RSA private key to the SSH agent?
  manpageQuestion3: What is the correct command to remove all identities from the SSH agent using ssh-add?

