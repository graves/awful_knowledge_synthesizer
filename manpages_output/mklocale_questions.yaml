- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mklocale`.\n\n\n\nManpage text:\n\nMKLOCALE(1)\t\t    General Commands Manual\t\t   MKLOCALE(1)\n\nNAME\n     mklocale – make LC_CTYPE locale files\n\nSYNOPSIS\n     mklocale [-d] < src-file > language/LC_CTYPE\n     mklocale [-d] -o language/LC_CTYPE src-file\n\nDESCRIPTION\n     The mklocale utility reads a LC_CTYPE source file from standard input and\n     produces a LC_CTYPE binary file on standard output suitable for placement\n     in /usr/share/locale/language/LC_CTYPE.\n\n     The format of src-file is quite simple.  It consists of a series of lines\n     which start with a keyword and have associated data following.  C style\n     comments are used to place comments in the file.\n\n     Following options are available:\n\n     -d      Turns on debugging messages.\n\n     -o      Specify output file.\n\n     Besides the keywords which will be listed below, the following are valid\n     tokens in src-file:\n\n     RUNE\t  A RUNE may be any of the following:\n\n\t\t  'x'\t\t   The ASCII character x.\n\n\t\t  '\\x'\t\t   The ANSI C character \\x where \\x is one of\n\t\t\t\t   \\a, \\b, \\f, \\n, \\r, \\t, or \\v."
  manpageQuestion1: What is the primary purpose of the mklocale command?
  manpageQuestion2: How would you use mklocale to generate a LC_CTYPE binary file from a source file with debugging output enabled?
  manpageQuestion3: Can you provide an example of using mklocale to specify a custom output file for the LC_CTYPE binary?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mklocale`.\n\n\n\nManpage text:\n\n0x[0-9a-z]*\t   A hexadecimal number representing a rune\n\t\t\t\t   code.\n\n\t\t  0[0-7]*\t   An octal number representing a rune code.\n\n\t\t  [1-9][0-9]*\t   A decimal number representing a rune code.\n\n     STRING\t  A string enclosed in double quotes (\").\n\n     THRU\t  Either ... or -.  Used to indicate ranges.\n\n     literal\t  The follow characters are taken literally:\n\n\t\t  <([\t   Used to start a mapping.  All are equivalent.\n\n\t\t  >)]\t   Used to end a mapping.  All are equivalent.\n\n\t\t  :\t   Used as a delimiter in mappings.\n\n     Key words which should only appear once are:\n\n     ENCODING\t    Followed by a STRING which indicates the encoding\n\t\t    mechanism to be used for this locale.  The current\n\t\t    encodings are:\n\n\t\t    ASCII\t American Standard Code for Information\n\t\t\t\t Interchange.\n\n\t\t    BIG5\t The “Big5” encoding of Chinese.\n\n\t\t    EUC \t EUC encoding as used by several vendors of\n\t\t\t\t UNIX systems.\n\n\t\t    GB18030\t PRC national standard for encoding of Chinese\n\t\t\t\t text.\n\n\t\t    GB2312\t Older PRC national standard for encoding\n\t\t\t\t Chinese text."
  manpageQuestion1: What is the primary purpose of the mklocale utility?
  manpageQuestion2: How can you use mklocale to define a mapping that converts the hexadecimal rune 0x1234 to the ASCII character 'A'?
  manpageQuestion3: Can you provide an example of using mklocale to create a locale that maps the decimal rune 12345 to the string 'example' using the ASCII encoding?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mklocale`.\n\n\n\nManpage text:\n\nGBK \t A widely used encoding method for Chinese\n\t\t\t\t text, backwards compatible with GB 2312-1980.\n\n\t\t    MSKanji\t The method of encoding Japanese used by\n\t\t\t\t Microsoft, loosely based on JIS.  Also known\n\t\t\t\t as “Shift JIS” and “SJIS”.\n\n\t\t    NONE\t No translation and the default.\n\n\t\t    UTF-8\t The UTF-8 transformation format of ISO 10646\n\t\t\t\t as defined by RFC 2279.\n\n     VARIABLE\t    This keyword must be followed by a single tab or space\n\t\t    character, after which encoding specific data is placed.\n\t\t    Currently only the EUC encoding requires variable data.\n\t\t    See euc(5) for further details.\n\n     INVALID\t    (obsolete) A single RUNE follows and is used as the\n\t\t    invalid rune for this locale.\n\n     The following keywords may appear multiple times and have the following\n     format for data:\n\n\t   <RUNE1 RUNE2>\t\t   RUNE1 is mapped to RUNE2.\n\n\t   <RUNE1 THRU RUNEn: RUNE2>\t   Runes RUNE1 through RUNEn are\n\t\t\t\t\t   mapped to RUNE2 through RUNE2 +\n\t\t\t\t\t   n-1.\n\n     MAPLOWER\t    Defines the tolower mappings.  RUNE2 is the lower case\n\t\t    representation of RUNE1."
  manpageQuestion1: What is the primary purpose of the mklocale utility?
  manpageQuestion2: How can you define a mapping where rune 'A' is mapped to 'a' using mklocale?
  manpageQuestion3: What is the function of the 'VARIABLE' keyword in mklocale?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mklocale`.\n\n\n\nManpage text:\n\nMAPUPPER\t    Defines the toupper mappings.  RUNE2 is the upper case\n\t\t    representation of RUNE1.\n\n     TODIGIT\t    Defines a map from runes to their digit value.  RUNE2 is\n\t\t    the integer value represented by RUNE1.  For example, the\n\t\t    ASCII character ‘0’ would map to the decimal value 0.\n\t\t    Only values up to 255 are allowed.\n\n     The following keywords may appear multiple times and have the following\n     format for data:\n\n\t   RUNE \t\t This rune has the property defined by the\n\t\t\t\t keyword.\n\n\t   RUNE1 THRU RUNEn\t All the runes between and including RUNE1 and\n\t\t\t\t RUNEn have the property defined by the\n\t\t\t\t keyword.\n\n     ALPHA\t    Defines runes which are alphabetic, printable and graphic.\n\n     CONTROL\t    Defines runes which are control characters.\n\n     DIGIT\t    Defines runes which are decimal digits, printable and\n\t\t    graphic.\n\n     GRAPH\t    Defines runes which are graphic and printable.\n\n     LOWER\t    Defines runes which are lower case, printable and graphic.\n\n     PUNCT\t    Defines runes which are punctuation, printable and\n\t\t    graphic."
  manpageQuestion1: What is the primary purpose of the mklocale tool?
  manpageQuestion2: How would you use mklocale to define a mapping that converts the ASCII character 'A' to its lowercase equivalent?
  manpageQuestion3: Can you provide an example of using mklocale to set the digit value for the ASCII character '5' to 5?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mklocale`.\n\n\n\nManpage text:\n\nSPACE\t    Defines runes which are spaces.\n\n     UPPER\t    Defines runes which are upper case, printable and graphic.\n\n     XDIGIT\t    Defines runes which are hexadecimal digits, printable and\n\t\t    graphic.\n\n     BLANK\t    Defines runes which are blank.\n\n     PRINT\t    Defines runes which are printable.\n\n     IDEOGRAM\t    Defines runes which are ideograms, printable and graphic.\n\n     SPECIAL\t    Defines runes which are special characters, printable and\n\t\t    graphic.\n\n     PHONOGRAM\t    Defines runes which are phonograms, printable and graphic.\n\n     SWIDTH0\t    Defines runes with display width 0.\n\n     SWIDTH1\t    Defines runes with display width 1.\n\n     SWIDTH2\t    Defines runes with display width 2.\n\n     SWIDTH3\t    Defines runes with display width 3.\n\n     If no display width explicitly defined, width 1 assumed for printable\n     runes by default.\n\nSEE ALSO\n     colldef(1), localedef(1), setlocale(3), wcwidth(3), big5(5), euc(5),\n     gb18030(5), gb2312(5), gbk(5), mskanji(5), utf8(5)"
  manpageQuestion1: What is the primary purpose of the mklocale utility?
  manpageQuestion2: How can you use mklocale to define a set of runes that are considered spaces?
  manpageQuestion3: What is the default display width assumption for printable runes when using mklocale?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mklocale`.\n\n\n\nManpage text:\n\nHISTORY\n     The mklocale utility first appeared in 4.4BSD.\n\nBUGS\n     The mklocale utility is overly simplistic.\n\nmacOS 15.3\t\t\tApril 18, 2016\t\t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the mklocale utility?
  manpageQuestion2: How would you use mklocale to generate a locale configuration for a new language support?
  manpageQuestion3: Can you provide an example of using mklocale to create a locale that supports the French language?

