- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nMG(1)\t\t\t    General Commands Manual\t\t\t MG(1)\n\nNAME\n     mg – emacs-like text editor\n\nSYNOPSIS\n     mg [-nR] [-b file] [-f mode] [-u file] [+number] [file ...]\n\nDESCRIPTION\n     mg is intended to be a small, fast, and portable editor for people who\n     can't (or don't want to) run emacs for one reason or another, or are not\n     familiar with the vi(1) editor.  It is compatible with emacs because\n     there shouldn't be any reason to learn more editor types than emacs or\n     vi(1).\n\n     The options are as follows:\n\n     +number\n\t     Go to the line specified by number (do not insert a space between\n\t     the ‘+’ sign and the number).  If a negative number is specified,\n\t     the line number counts backwards from the end of the file i.e.\n\t     +-1 will be the last line of the file, +-2 will be second last,\n\t     and so on.\n\n     -b file\n\t     Turn on batch mode and execute the mg commands found in the\n\t     specified file and then terminate.\n\n     -f mode\n\t     Run the mode command for all buffers created from arguments on\n\t     the command line, including the scratch buffer and all files."
  manpageQuestion1: What is the primary purpose of the mg text editor?
  manpageQuestion2: How can you use mg to open a file and go directly to the 10th line without editing it?
  manpageQuestion3: What command would you use to run mg in batch mode and execute commands from a file called 'commands.txt'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\n-n      Turn off backup file generation.\n\n     -R      Files specified on the command line will be opened read-only.\n\n     -u file\n\t     Use file as the startup file, instead of the default ~/.mg.\n\nWINDOWS AND BUFFERS\n     When a file is loaded into mg, it is stored in a buffer.  This buffer may\n     be displayed on the screen in more than one window.  At present, windows\n     may only be split horizontally, so each window is delineated by a\n     modeline at the bottom.  If changes are made to a buffer, it will be\n     reflected in all open windows.\n\n     If a file is changed outside mg and its buffer is about to be changed, mg\n     prompts if the change should go ahead (y), not go ahead (n) or if the\n     buffer should be reverted (r) to the latest file on disk.\n\n     If a buffer name begins and ends with an asterisk, the buffer is\n     considered throwaway; i.e. the user will not be prompted to save changes\n     when the buffer is killed.\n\nPOINT AND MARK\n     The current cursor location in mg is called the point (or dot).  It is\n     possible to define a window-specific region of text by setting a second\n     location, called the mark.  The region is the text between point and mark\n     inclusive.  Deleting the character at the mark position leaves the mark\n     at the point of deletion."
  manpageQuestion1: What is the primary purpose of the mg command-line tool?
  manpageQuestion2: How can you configure mg to use a custom startup file instead of the default ~/.mg?
  manpageQuestion3: What is the effect of using the -R flag with mg when specifying files on the command line?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nNote: The point and mark are window-specific in mg, not buffer-specific,\n     as in other emacs flavours.\n\nBACKUP FILES\n     Backup files have a ‘~’ character appended to the file name and are\n     created in the current working directory by default.  Whether to create\n     backup files or not can be toggled with the make-backup-files command.\n     The backup file location can either be in the current working directory,\n     or all backups can be moved to a ~/.mg.d directory where files retain\n     their path name to retain uniqueness.  Use the backup-to-home-directory\n     command to alternate between these two locations.\tFurther, if any\n     application creates backup files in /tmp, these can be left with the\n     leave-tmpdir-backups command.\n\nTAGS\n     mg supports tag files created by ctags(1), allowing the user to quickly\n     locate various object definitions.  Note though that emacs uses etags,\n     not ctags.\n\nCSCOPE\n     mg supports navigating source code using cscope.  However, mg requires\n     cscope and cscope-indexer executables to be present in PATH for it to\n     work."
  manpageQuestion1: What is the primary purpose of the mg resource?
  manpageQuestion2: How can you configure mg to store backup files in a dedicated directory such as ~/.mg.d instead of the current working directory?
  manpageQuestion3: What command is required to enable cscope support in mg, and what prerequisites must be met for this functionality to work?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nDEFAULT KEY BINDINGS\n     Normal editing commands are very similar to GNU Emacs.  In the following\n     examples, C-x means Control-x, and M-x means Meta-x, where the Meta key\n     may be either a special key on the keyboard or the ALT key; otherwise ESC\n     followed by the key X works as well.\n\n\t   C-SPC\t set-mark-command\n\t   C-a\t\t beginning-of-line\n\t   C-b\t\t backward-char\n\t   C-c s c\t cscope-find-functions-calling-this-function\n\t   C-c s d\t cscope-find-global-definition\n\t   C-c s e\t cscope-find-egrep-pattern\n\t   C-c s f\t cscope-find-this-file\n\t   C-c s i\t cscope-find-files-including-file\n\t   C-c s n\t cscope-next-symbol\n\t   C-c s p\t cscope-prev-symbol\n\t   C-c s s\t cscope-find-this-symbol\n\t   C-c s t\t cscope-find-this-text-string\n\t   C-d\t\t delete-char\n\t   C-e\t\t end-of-line\n\t   C-f\t\t forward-char\n\t   C-g\t\t keyboard-quit\n\t   C-h C-h\t help-help\n\t   C-h a\t apropos\n\t   C-h b\t describe-bindings\n\t   C-h c\t describe-key-briefly\n\t   C-j\t\t newline-and-indent\n\t   C-k\t\t kill-line\n\t   C-l\t\t recenter\n\t   RET\t\t newline\n\t   C-n\t\t next-line\n\t   C-o\t\t open-line\n\t   C-p\t\t previous-line\n\t   C-q\t\t quoted-insert\n\t   C-r\t\t isearch-backward\n\t   C-s\t\t isearch-forward\n\t   C-t\t\t transpose-chars\n\t   C-u\t\t universal-argument\n\t   C-v\t\t scroll-up\n\t   C-w\t\t kill-region\n\t   C-x C-b\t list-buffers\n\t   C-x C-c\t save-buffers-kill-emacs\n\t   C-x C-f\t find-file\n\t   C-x C-j\t dired-jump\n\t   C-x C-g\t keyboard-quit\n\t   C-x C-l\t downcase-region\n\t   C-x C-o\t delete-blank-lines\n\t   C-x C-q\t toggle-read-only\n\t   C-x C-r\t find-file-read-only\n\t   C-x C-s\t save-buffer\n\t   C-x C-u\t upcase-region\n\t   C-x C-v\t find-alternate-file\n\t   C-x C-w\t write-file\n\t   C-x C-x\t exchange-point-and-mark\n\t   C-x (\t start-kbd-macro\n\t   C-x )\t end-kbd-macro\n\t   C-x 0\t delete-window\n\t   C-x 1\t delete-other-windows\n\t   C-x 2\t split-window-vertically\n\t   C-x 4 C-f\t find-file-other-window\n\t   C-x 4 C-g\t keyboard-quit\n\t   C-x 4 b\t switch-to-buffer-other-window\n\t   C-x 4 f\t find-file-other-window\n\t   C-x =\t what-cursor-position\n\t   C-x ^\t enlarge-window\n\t   C-x `\t next-error\n\t   C-x b\t switch-to-buffer\n\t   C-x d\t dired\n\t   C-x e\t call-last-kbd-macro\n\t   C-x f\t set-fill-column\n\t   C-x g\t goto-line\n\t   C-x h\t mark-whole-buffer\n\t   C-x i\t insert-file\n\t   C-x k\t kill-buffer\n\t   C-x n\t other-window\n\t   C-x o\t other-window\n\t   C-x p\t previous-window\n\t   C-x s\t save-some-buffers\n\t   C-x u\t undo\n\t   C-y\t\t yank\n\t   C-z\t\t suspend-emacs\n\t   M-C-v\t scroll-other-window\n\t   M-SPC\t just-one-space\n\t   M-!\t\t shell-command\n\t   M-.\t\t find-tag\n\t   M-*\t\t pop-tag-mark\n\t   M-%\t\t query-replace\n\t   M-<\t\t beginning-of-buffer\n\t   M->\t\t end-of-buffer\n\t   M-\\\t\t delete-horizontal-space\n\t   M-^\t\t join-line\n\t   M-b\t\t backward-word\n\t   M-c\t\t capitalize-word\n\t   M-d\t\t kill-word\n\t   M-f\t\t forward-word\n\t   M-h\t\t mark-paragraph\n\t   M-l\t\t downcase-word\n\t   M-m\t\t back-to-indentation\n\t   M-q\t\t fill-paragraph\n\t   M-r\t\t search-backward\n\t   M-s\t\t search-forward\n\t   M-t\t\t transpose-words\n\t   M-u\t\t upcase-word\n\t   M-v\t\t scroll-down\n\t   M-w\t\t copy-region-as-kill\n\t   M-x\t\t execute-extended-command\n\t   M-z\t\t zap-to-char\n\t   M-{\t\t backward-paragraph\n\t   M-|\t\t shell-command-on-region\n\t   M-}\t\t forward-paragraph\n\t   M-~\t\t not-modified\n\t   M-DEL\t backward-kill-word\n\t   C-_\t\t undo\n\t   )\t\t blink-and-insert\n\t   DEL\t\t delete-backward-char"
  manpageQuestion1: What is the primary purpose of the `mg` utility?
  manpageQuestion2: How can you use `mg` to search for a specific symbol or function within a file?
  manpageQuestion3: Can you provide an example of using `mg` to navigate between different symbols or definitions in a codebase?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nFor a complete description of mg commands, see MG COMMANDS.  To see the\n     active keybindings at any time, type “M-x describe-bindings”.\n\nMG COMMANDS\n     Commands are invoked by “M-x”, or by binding to a key.  Many commands\n     take an optional numerical parameter, n.  This parameter is set either by\n     M-<n> (where n is the numerical argument) before the command, or by one\n     or more invocations of the universal argument, usually bound to C-u.\n     When invoked in this manner, the value of the numeric parameter to be\n     passed is displayed in the minibuffer before the M-x.  One common use of\n     the parameter is in mode toggles (e.g. make-backup-files).  If no\n     parameter is supplied, the mode is toggled to its alternate state.  If a\n     positive parameter is supplied, the mode is forced to on.\tOtherwise, it\n     is forced to off.\n\n     apropos\n\t    Help Apropos.  Prompt the user for a string, open the *help*\n\t    buffer, and list all mg commands that contain that string."
  manpageQuestion1: What is the primary purpose of the mg command in macOS?
  manpageQuestion2: How would you use the mg command to search for all commands that contain the string 'help' in their description?
  manpageQuestion3: Can you provide an example of using the mg command to toggle a mode, such as make-backup-files, and explain how numerical parameters are handled in this context?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\naudible-bell\n\t    Toggle the audible system bell.\n\n     auto-execute\n\t    Register an auto-execute hook; that is, specify a filename pattern\n\t    (conforming to the shell's filename globbing rules) and an\n\t    associated function to execute when a file matching the specified\n\t    pattern is read into a buffer.\n\n     auto-fill-mode\n\t    Toggle auto-fill mode (sometimes called mail-mode) in the current\n\t    buffer, where text inserted past the fill column is automatically\n\t    wrapped to a new line.  Can be set globally with set-default-mode.\n\n     auto-indent-mode\n\t    Toggle indent mode in the current buffer, where indentation is\n\t    preserved after a newline.\tCan be set globally with\n\t    set-default-mode.\n\n     back-to-indentation\n\t    Move the dot to the first non-whitespace character on the current\n\t    line.\n\n     backup-to-home-directory\n\t    Save backup copies to a ~/.mg.d directory instead of working\n\t    directory.\tRequires make-backup-files to be on.\n\n     backward-char\n\t    Move cursor backwards one character."
  manpageQuestion1: What is the primary purpose of the mg resource?
  manpageQuestion2: How can you configure mg to automatically execute a function when a file matching a specific pattern is read into a buffer?
  manpageQuestion3: What command can be used to move the cursor back one character in mg?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nbackward-kill-word\n\t    Kill text backwards by n words.\n\n     backward-paragraph\n\t    Move cursor backwards n paragraphs.  Paragraphs are delimited by\n\t    <NL><NL> or <NL><TAB> or <NL><SPACE>.\n\n     backward-word\n\t    Move cursor backwards by the specified number of words.\n\n     beginning-of-buffer\n\t    Move cursor to the top of the buffer.  If set, keep mark's\n\t    position, otherwise set at current position.  A numeric argument n\n\t    will move n/10th of the way from the top.\n\n     beginning-of-line\n\t    Move cursor to the beginning of the line.\n\n     blink-and-insert\n\t    Self-insert a character, then search backwards and blink its\n\t    matching delimiter.  For delimiters other than parenthesis,\n\t    brackets, and braces, the character itself is used as its own\n\t    match.  Can be used in the startup file with the global-set-key\n\t    command.\n\n     bsmap-mode\n\t    Toggle bsmap mode, where DEL and C-h are swapped.\n\n     c-mode\n\t    Toggle a KNF-compliant mode for editing C program files."
  manpageQuestion1: What is the primary purpose of the `mg` resource?
  manpageQuestion2: How would you use `mg` to move the cursor backward by three paragraphs in a text buffer?
  manpageQuestion3: Can you provide an example of using `mg` to toggle the C programming mode for a file?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\ncall-last-kbd-macro\n\t    Invoke the keyboard macro.\n\n     capitalize-word\n\t    Capitalize n words; i.e. convert the first character of the word\n\t    to upper case, and subsequent letters to lower case.\n\n     cd     Change the global working directory.  See also global-wd-mode.\n\n     column-number-mode\n\t    Toggle whether the column number is displayed in the modeline.\n\n     copy-region-as-kill\n\t    Copy all of the characters in the region to the kill buffer,\n\t    clearing the mark afterwards.  This is a bit like a kill-region\n\t    followed by a yank.\n\n     count-matches\n\t    Count the number of lines matching the supplied regular\n\t    expression.\n\n     count-non-matches\n\t    Count the number of lines not matching the supplied regular\n\t    expression.\n\n     cscope-find-this-symbol\n\t    List the matches for the given symbol.\n\n     cscope-find-global-definition\n\t    List global definitions for the given literal.\n\n     cscope-find-called-functions\n\t    List functions called from the given function."
  manpageQuestion1: What is the primary purpose of the mg command?
  manpageQuestion2: How can you use mg to count the number of lines that match the regular expression '^[A-Z]' in a file?
  manpageQuestion3: Can you provide an example of using mg to capitalize the first letter of each word in a text file?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\ncscope-find-functions-calling-this-function\n\t    List functions calling the given function.\n\n     cscope-find-this-text-string\n\t    List locations matching the given text string.\n\n     cscope-find-egrep-pattern\n\t    List locations matching the given extended regular expression\n\t    pattern.\n\n     cscope-find-this-file\n\t    List filenames matching the given filename.\n\n     cscope-find-files-including-file\n\t    List files that #include the given filename.\n\n     cscope-next-symbol\n\t    Navigate to the next match.\n\n     cscope-prev-symbol\n\t    Navigate to the previous match.\n\n     cscope-next-file\n\t    Navigate to the next file.\n\n     cscope-prev-file\n\t    Navigate to the previous file.\n\n     cscope-create-list-of-files-to-index\n\t    Create cscope's List and Index in the given directory.\n\n     define-key\n\t    Prompts the user for a named keymap (mode), a key, and an mg\n\t    command, then creates a keybinding in the appropriate map.\n\n     delete-backward-char\n\t    Delete backwards n characters.  Like delete-char, this actually\n\t    does a kill if presented with an argument."
  manpageQuestion1: What is the primary purpose of the `mg` command?
  manpageQuestion2: How can I use `mg` to find all functions that call the function `my_function`?
  manpageQuestion3: Can you provide an example of using `mg` to create a cscope index in the current directory?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\ndelete-blank-lines\n\t    Delete blank lines around dot.  If dot is sitting on a blank line,\n\t    this command deletes all the blank lines above and below the\n\t    current line.  Otherwise, it deletes all of the blank lines after\n\t    the current line.\n\n     delete-char\n\t    Delete n characters forward.  If any argument is present, it kills\n\t    rather than deletes, saving the result in the kill buffer.\n\n     delete-horizontal-space\n\t    Delete any whitespace around the dot.\n\n     delete-leading-space\n\t    Delete leading whitespace on the current line.\n\n     delete-trailing-space\n\t    Delete trailing whitespace on the current line.\n\n     delete-matching-lines\n\t    Delete all lines after dot that contain a string matching the\n\t    supplied regular expression.\n\n     delete-non-matching-lines\n\t    Delete all lines after dot that don't contain a string matching\n\t    the supplied regular expression.\n\n     delete-other-windows\n\t    Make the current window the only window visible on the screen."
  manpageQuestion1: What is the primary purpose of the `mg` command in a macOS environment?
  manpageQuestion2: How can you use the `delete-blank-lines` command to remove blank lines around the current line in a text file?
  manpageQuestion3: Can you provide an example of using the `delete-matching-lines` command to remove all lines after the current line that contain a regular expression matching 'error'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\ndelete-window\n\t    Delete current window.\n\n     describe-bindings\n\t    List all global and local keybindings, putting the result in the\n\t    *help* buffer.\n\n     describe-key-briefly\n\t    Read a key from the keyboard, and look it up in the keymap.\n\t    Display the name of the function currently bound to the key.\n\n     diff-buffer-with-file\n\t    View the differences between buffer and its associated file.\n\n     digit-argument\n\t    Process a numerical argument for keyboard-invoked functions.\n\n     dired-jump\n\t    Open a dired buffer containing the current buffer's directory\n\t    location.\n\n     downcase-region\n\t    Set all characters in the region to lower case.\n\n     downcase-word\n\t    Set characters to lower case, starting at the dot, and ending n\n\t    words away.\n\n     emacs-version\n\t    Return an mg version string.\n\n     end-kbd-macro\n\t    Stop defining a keyboard macro.\n\n     end-of-buffer\n\t    Move cursor to the end of the buffer.  If set, keep mark's\n\t    position, otherwise set at current position.  A numeric argument n\n\t    will move n/10th of the way from the end."
  manpageQuestion1: What is the primary purpose of the `mg` resource?
  manpageQuestion2: How can you list all global and local keybindings in `mg`?
  manpageQuestion3: What command is used to move the cursor to the end of the buffer in `mg`?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nend-of-line\n\t    Move cursor to the end of the line.\n\n     enlarge-window\n\t    Enlarge the current window by shrinking either the window above or\n\t    below it.\n\n     eval-current-buffer\n\t    Evaluate the current buffer as a series of mg commands.  Useful\n\t    for testing mg startup files.\n\n     eval-expression\n\t    Get one line from the user, and run it.  Useful for testing\n\t    expressions in mg startup files.\n\n     exchange-point-and-mark\n\t    Swap the values of \"dot\" and \"mark\" in the current window.\tReturn\n\t    an error if no mark is set.\n\n     execute-extended-command\n\t    Invoke an extended command; i.e. M-x.  Call the message line\n\t    routine to read in the command name and apply autocompletion to\n\t    it.  When it comes back, look the name up in the symbol table and\n\t    run the command if it is found, passing arguments as necessary.\n\t    Print an error if there is anything wrong.\n\n     fill-paragraph\n\t    Justify a paragraph, wrapping text at the current fill column.\n\n     find-file\n\t    Select a file for editing.\tFirst check if the file can be found\n\t    in another buffer; if it is there, just switch to that buffer.  If\n\t    the file cannot be found, create a new buffer, read in the file\n\t    from disk, and switch to the new buffer."
  manpageQuestion1: What is the primary purpose of the `mg` resource?
  manpageQuestion2: How can you use `mg` to evaluate the contents of a buffer as a series of commands for testing?
  manpageQuestion3: What command in `mg` is used to swap the values of 'dot' and 'mark' in the current window?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nfind-file-read-only\n\t    Same as find-file, except the new buffer is set to read-only.\n\n     find-alternate-file\n\t    Replace the current file with an alternate one.  Semantics for\n\t    finding the replacement file are the same as find-file, except the\n\t    current buffer is killed before the switch.  If the kill fails, or\n\t    is aborted, revert to the original file.\n\n     find-file-other-window\n\t    Opens the specified file in a second buffer.  Splits the current\n\t    window if necessary.\n\n     find-tag\n\t    Jump to definition of tag at dot.\n\n     forward-char\n\t    Move cursor forwards (or backwards, if n is negative) n\n\t    characters.  Returns an error if the end of buffer is reached.\n\n     forward-paragraph\n\t    Move forward n paragraphs.\tParagraphs are delimited by <NL><NL>\n\t    or <NL><TAB> or <NL><SPACE>.\n\n     forward-word\n\t    Move the cursor forward by the specified number of words.\n\n     global-set-key\n\t    Bind a key in the global (fundamental) key map.\n\n     global-unset-key\n\t    Unbind a key from the global (fundamental) key map; i.e. set it to\n\t    'rescan'."
  manpageQuestion1: What is the primary purpose of the `mg` resource in macOS?
  manpageQuestion2: How would you use the `find-file-read-only` command to open a file in read-only mode?
  manpageQuestion3: Can you provide an example of using the `find-alternate-file` command to switch to an alternate file while preserving the current buffer?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nglobal-wd-mode\n\t    Toggle global working-directory mode.  When enabled, mg defaults\n\t    to opening files (and executing commands like compile and grep)\n\t    relative to the global working directory.  When disabled, a\n\t    working directory is set for each buffer.\n\n     goto-line\n\t    Go to a specific line.  If an argument is present, then it is the\n\t    line number, else prompt for a line number to use.\n\n     help-help\n\t    Prompts for one of (a)propos, (b)indings, des(c)ribe key briefly.\n\n     insert\n\t    Insert a string, mainly for use from macros.\n\n     insert-buffer\n\t    Insert the contents of another buffer at dot.\n\n     insert-file\n\t    Insert a file into the current buffer at dot.\n\n     insert-with-wrap\n\t    Insert the bound character with word wrap.\tCheck to see if we're\n\t    past the fill column, and if so, justify this line.\n\n     isearch-backward\n\t    Use incremental searching, initially in the reverse direction.\n\t    isearch ignores any explicit arguments.  If invoked during macro\n\t    definition or evaluation, the non-incremental search-backward is\n\t    invoked instead."
  manpageQuestion1: What is the primary purpose of the mg resource?
  manpageQuestion2: How can you use the mg tool to navigate to a specific line in a file, such as line 100?
  manpageQuestion3: What is the function of the 'global-wd-mode' option in mg, and how would you toggle it?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nisearch-forward\n\t    Use incremental searching, initially in the forward direction.\n\t    isearch ignores any explicit arguments.  If invoked during macro\n\t    definition or evaluation, the non-incremental search-forward is\n\t    invoked instead.\n\n     join-line\n\t    Join the current line to the previous.  If called with an\n\t    argument, join the next line to the current one.\n\n     just-one-space\n\t    Delete any whitespace around dot, then insert a space.\n\n     keyboard-quit\n\t    Abort the current action.\n\n     kill-buffer\n\t    Dispose of a buffer, by name.  If the buffer name does not start\n\t    and end with an asterisk, prompt the user if the buffer has been\n\t    changed.\n\n     kill-line\n\t    Kill line.\tIf called without an argument, it kills from dot to\n\t    the end of the line, unless it is at the end of the line, when it\n\t    kills the newline.\tIf called with an argument of 0, it kills from\n\t    the start of the line to dot.  If called with a positive argument,\n\t    it kills from dot forward over that number of newlines.  If called\n\t    with a negative argument it kills any text before dot on the\n\t    current line, then it kills back abs(n) lines."
  manpageQuestion1: What is the primary purpose of the mg command-line tool?
  manpageQuestion2: How can you use mg to join the current line with the previous line?
  manpageQuestion3: What command can be used in mg to delete whitespace around the cursor and insert a single space?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nkill-paragraph\n\t    Delete n paragraphs starting with the current one.\n\n     kill-region\n\t    Kill the currently defined region.\n\n     kill-word\n\t    Delete forward n words.\n\n     leave-tmpdir-backups\n\t    Modifies the behaviour of backup-to-home-directory.  Backup files\n\t    that would normally reside in /tmp are left there and not moved to\n\t    the ~/.mg.d directory.\n\n     line-number-mode\n\t    Toggle whether the line number is displayed in the modeline.\n\n     list-buffers\n\t    Display the list of available buffers.  The first column in the\n\t    output indicates which buffer is active with a '>' character.  The\n\t    second column indicates which buffers are modified.  The third\n\t    column indicates which buffers are read-only.  The remaining\n\t    columns are self-explanatory.\n\n     load   Prompt the user for a filename, and then execute commands from\n\t    that file.\n\n     local-set-key\n\t    Bind a key mapping in the local (topmost) mode.\n\n     local-unset-key\n\t    Unbind a key mapping in the local (topmost) mode."
  manpageQuestion1: What is the primary purpose of the mg command-line tool?
  manpageQuestion2: How can you delete the current paragraph and the next two paragraphs using mg?
  manpageQuestion3: What command can be used in mg to display a list of all available buffers, indicating which ones are active, modified, or read-only?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nmake-backup-files\n\t    Toggle generation of backup files.\tEnabled by default.\n\n     make-directory\n\t    Prompt the user for a path or directory name which is then\n\t    created.\n\n     mark-paragraph\n\t    Mark n paragraphs.\n\n     mark-whole-buffer\n\t    Marks whole buffer as a region by putting dot at the beginning and\n\t    mark at the end of buffer.\n\n     meta-key-mode\n\t    When disabled, the meta key can be used to insert extended-ascii\n\t    (8-bit) characters.  When enabled, the meta key acts as usual.\n\n     negative-argument\n\t    Process a negative argument for keyboard-invoked functions.\n\n     newline\n\t    Insert a newline into the current buffer.\n\n     newline-and-indent\n\t    Insert a newline, then enough tabs and spaces to duplicate the\n\t    indentation of the previous line, respecting no-tab-mode and the\n\t    buffer tab width.\n\n     next-line\n\t    Move forward n lines.\n\n     no-tab-mode\n\t    Toggle notab mode.\tIn this mode, spaces are inserted rather than\n\t    tabs.\n\n     not-modified\n\t    Turn off the modified flag in the current buffer."
  manpageQuestion1: What is the primary purpose of the `mg` resource?
  manpageQuestion2: How can you use `mg` to create a new directory interactively?
  manpageQuestion3: What command can you use in `mg` to insert a newline and proper indentation after the current line?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nopen-line\n\t    Open up some blank space.  Essentially, insert n newlines, then\n\t    back up over them.\n\n     other-window\n\t    The command to make the next (down the screen) window the current\n\t    window.  There are no real errors, although the command does\n\t    nothing if there is only 1 window on the screen.\n\n     overwrite-mode\n\t    Toggle overwrite mode in the current buffer, where typing\n\t    overwrites existing characters rather than inserting them.\tCan be\n\t    set globally with set-default-mode.\n\n     prefix-region\n\t    Inserts a prefix string before each line of a region.  The prefix\n\t    string is settable by using set-prefix-string or by invoking this\n\t    command with a prefix argument.\n\n     previous-line\n\t    Move backwards n lines.\n\n     previous-window\n\t    This command makes the previous (up the screen) window the current\n\t    window.  There are no errors, although the command does not do a\n\t    lot if there is only 1 window.\n\n     pop-tag-mark\n\t    Return to position where find-tag was previously invoked."
  manpageQuestion1: What is the primary purpose of the mg command-line tool?
  manpageQuestion2: How can you use mg to open up blank lines in the current buffer?
  manpageQuestion3: Can you explain how to switch to the previous window using mg?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\npush-shell\n\t    Suspend mg and switch to alternate screen, if available.\n\n     pwd    Display current (global) working directory in the status area.\n\n     query-replace\n\t    Query Replace.  Search and replace strings selectively, prompting\n\t    after each match.\n\n     replace-regexp\n\t    Replace regular expression globally without individual prompting.\n\n     replace-string\n\t    Replace string globally without individual prompting.\n\n     query-replace-regexp\n\t    Replace strings selectively.  Does a search and replace operation\n\t    using regular expressions for both patterns.\n\n     quoted-insert\n\t    Insert the next character verbatim into the current buffer; i.e.\n\t    ignore any function bound to that key.\n\n     re-search-again\n\t    Perform a regular expression search again, using the same search\n\t    string and direction as the last search command.\n\n     re-search-backward\n\t    Search backwards using a regular expression.  Get a search string\n\t    from the user, and search, starting at dot and proceeding toward\n\t    the front of the buffer.  If found, dot is left pointing at the\n\t    first character of the pattern [the last character that was\n\t    matched]."
  manpageQuestion1: What is the primary purpose of the `mg` command-line tool?
  manpageQuestion2: How can you use `mg` to perform a global string replacement without individual prompts?
  manpageQuestion3: What command would you use in `mg` to search backwards for a regular expression and prompt for the search string?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nre-search-forward\n\t    Search forward using a regular expression.\tGet a search string\n\t    from the user and search for it starting at dot.  If found, move\n\t    dot to just after the matched characters.  display does all the\n\t    hard stuff.  If not found, it just prints a message.\n\n     recenter\n\t    Reposition dot in the current window.  By default, the dot is\n\t    centered.  If given a positive argument (n), the display is\n\t    repositioned to line n.  If n is negative, it is that line from\n\t    the bottom.\n\n     redraw-display\n\t    Refresh the display.  Recomputes all window sizes in case\n\t    something has changed.\n\n     revert-buffer\n\t    Revert the current buffer to the latest file on disk.\n\n     save-buffer\n\t    Save the contents of the current buffer if it has been changed,\n\t    optionally creating a backup copy.\n\n     save-buffers-kill-emacs\n\t    Offer to save modified buffers and quit mg.\n\n     save-some-buffers\n\t    Look through the list of buffers, offering to save any buffer that\n\t    has been changed.  Buffers that are not associated with files\n\t    (such as *scratch*, *grep*, *compile*) are ignored."
  manpageQuestion1: What is the primary purpose of the mg command-line tool?
  manpageQuestion2: How can you use mg to recenter the cursor in the current window on line 10?
  manpageQuestion3: What command would you use in mg to save the current buffer if it has been modified?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nscroll-down\n\t    Scroll backwards n pages.  A two-line overlap between pages is\n\t    assumed.  If given a repeat argument, scrolls back lines, not\n\t    pages.\n\n     scroll-one-line-down\n\t    Scroll the display down n lines without changing the cursor\n\t    position.\n\n     scroll-one-line-up\n\t    Scroll the display n lines up without moving the cursor position.\n\n     scroll-other-window\n\t    Scroll the next window in the window list window forward n pages.\n\n     scroll-up\n\t    Scroll forward one page.  A two-line overlap between pages is\n\t    assumed.  If given a repeat argument, scrolls back lines, not\n\t    pages.\n\n     search-again\n\t    Search again, using the same search string and direction as the\n\t    last search command.\n\n     search-backward\n\t    Reverse search.  Get a search string from the user, and search,\n\t    starting at dot and proceeding toward the front of the buffer.  If\n\t    found, dot is left pointing at the first character of the pattern\n\t    (the last character that was matched)."
  manpageQuestion1: What is the primary purpose of the `mg` resource?
  manpageQuestion2: How can you scroll down one page in the `mg` editor using the available commands?
  manpageQuestion3: What command would you use in `mg` to search backward for a specific string in the current buffer?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nsearch-forward\n\t    Search forward.  Get a search string from the user, and search for\n\t    it starting at dot.  If found, dot gets moved to just after the\n\t    matched characters, if not found, print a message.\n\n     self-insert-command\n\t    Insert a character.\n\n     sentence-end-double-space\n\t    Toggle double or single spaces for end of sentences.  Double is\n\t    the default.  Currently only affects fill-paragraph.\n\n     set-case-fold-search\n\t    Set case-fold searching, causing case not to matter in regular\n\t    expression searches.  This is the default.\n\n     set-case-replace\n\t    Preserve the case of the replaced string.  This is the default.\n\n     set-default-mode\n\t    Append the supplied mode to the list of default modes used by\n\t    subsequent buffer creation.  Built in modes include: fill, indent\n\t    and overwrite.\n\n     set-fill-column\n\t    Prompt the user for a fill column.\tUsed by auto-fill-mode.\n\n     set-mark-command\n\t    Sets the mark in the current window to the current dot location."
  manpageQuestion1: What is the primary purpose of the `mg` resource?
  manpageQuestion2: How can you use `mg` to search forward for a specific string in the current buffer?
  manpageQuestion3: What command would you use in `mg` to set the mark at the current dot location?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nset-prefix-string\n\t    Sets the prefix string to be used by the prefix-region command.\n\n     set-tab-width\n\t    Set the tab width for the current buffer, or the default for new\n\t    buffers if called with a prefix argument or from the startup file.\n\n     shell-command\n\t    Execute external command from mini-buffer.\n\n     shell-command-on-region\n\t    Provide the text in region to the shell command as input.\n\n     shrink-window\n\t    Shrink current window by one line.\tThe window immediately below\n\t    is expanded to pick up the slack.  If only one window is present,\n\t    this command has no effect.\n\n     split-window-vertically\n\t    Split the current window.  A window smaller than 3 lines cannot be\n\t    split.\n\n     start-kbd-macro\n\t    Start defining a keyboard macro.  Macro definition is ended by\n\t    invoking end-kbd-macro.\n\n     suspend-emacs\n\t    Suspend mg and switch back to alternate screen, if in use.\n\n     switch-to-buffer\n\t    Prompt and switch to a new buffer in the current window."
  manpageQuestion1: What is the primary purpose of the mg resource?
  manpageQuestion2: How can you set a custom prefix string for the prefix-region command in mg?
  manpageQuestion3: What is the command to split the current window vertically in mg?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nswitch-to-buffer-other-window\n\t    Switch to buffer in another window.\n\n     toggle-read-only\n\t    Toggle the read-only flag on the current buffer.\n\n     toggle-read-only-all\n\t    Toggle the read-only flag on all non-ephemeral buffers.  A simple\n\t    toggle that switches a global read-only flag either on or off.\n\n     transpose-chars\n\t    Transpose the two characters in front of and under dot, then move\n\t    forward one character.  Treat newline characters the same as any\n\t    other.\n\n     transpose-paragraphs\n\t    Transpose adjacent paragraphs.  If multiple iterations are\n\t    requested, the current paragraph will be moved n paragraphs\n\t    forward.\n\n     transpose-words\n\t    Transpose adjacent words.\n\n     undo   Undo the most recent action.  If invoked again without an\n\t    intervening command, move the undo pointer to the previous action\n\t    and undo it.\n\n     undo-boundary\n\t    Add an undo boundary.  This is not usually done interactively.\n\n     undo-boundary-toggle\n\t    Toggle whether undo boundaries are generated.  Undo boundaries are\n\t    often disabled before operations that should be considered\n\t    atomically undoable."
  manpageQuestion1: What is the primary purpose of the `mg` resource?
  manpageQuestion2: How can you toggle the read-only flag for all non-ephemeral buffers in `mg`?
  manpageQuestion3: What command is used to transpose adjacent paragraphs in `mg`?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nundo-enable\n\t    Toggle whether undo information is kept.\n\n     undo-list\n\t    Show the undo records for the current buffer in a new buffer.\n\n     universal-argument\n\t    Repeat the next command 4 times.  Usually bound to C-u.  This\n\t    command may be stacked; e.g. C-u C-u C-f moves the cursor forward\n\t    16 characters.\n\n     upcase-region\n\t    Upper case region.\tChange all of the lower case characters in the\n\t    region to upper case.\n\n     upcase-word\n\t    Move the cursor forward by the specified number of words.  As it\n\t    moves, convert any characters to upper case.\n\n     visible-bell\n\t    Toggle the visible bell.  If this toggle is on, the modeline will\n\t    flash.\n\n     visit-tags-table\n\t    Load tags file to be used for subsequent find-tag.\n\n     what-cursor-position\n\t    Display a bunch of useful information about the current location\n\t    of dot.  The character under the cursor (in octal), the current\n\t    line, row, and column, and approximate position of the cursor in\n\t    the file (as a percentage) is displayed.  The column position\n\t    assumes an infinite position display; it does not truncate just\n\t    because the screen does."
  manpageQuestion1: What is the primary purpose of the mg command-line tool?
  manpageQuestion2: How can you use mg to toggle the visibility of the bell in the editor?
  manpageQuestion3: What command can be used to display information about the current cursor position in mg?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nwrite-file\n\t    Ask for a file name and write the contents of the current buffer\n\t    to that file.  Update the remembered file name and clear the\n\t    buffer changed flag.\n\n     yank   Yank text from kill-buffer.  Unlike emacs, the mg kill buffer\n\t    consists only of the most recent kill.  It is not a ring.\n\n     zap-to-char\n\t    Ask for a character and delete text from the current cursor\n\t    position until the next instance of that character, including it.\n\n     zap-up-to-char\n\t    Like zap-to-char but doesn't delete the target character.\n\nMG DIRED KEY BINDINGS\n     Specific key bindings are available in dired mode.\n\n\t   DEL\t\t       dired-unmark-backward\n\t   RET, e, f and C-m   dired-find-file\n\t   SPC, n\t       dired-next-line\n\t   !\t\t       dired-shell-command\n\t   +\t\t       dired-create-directory\n\t   a\t\t       dired-find-alternate-file\n\t   c\t\t       dired-do-copy\n\t   d and C-d\t       dired-flag-file-deletion\n\t   g\t\t       dired-revert\n\t   j\t\t       dired-goto-file\n\t   o\t\t       dired-find-file-other-window\n\t   p\t\t       dired-previous-line\n\t   q\t\t       quit-window\n\t   r\t\t       dired-do-rename\n\t   u\t\t       dired-unmark\n\t   x\t\t       dired-do-flagged-delete\n\t   C-v\t\t       dired-scroll-down\n\t   M-v\t\t       dired-scroll-up"
  manpageQuestion1: What is the primary purpose of the mg command-line tool?
  manpageQuestion2: How can you use mg to write the current buffer's contents to a file named 'example.txt'?
  manpageQuestion3: What command would you use in mg's dired mode to copy a selected file to another location?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nMG DIRED COMMANDS\n     The following are a list of the commands specific to dired mode:\n\n     dired-create-directory\n\t     Create a directory.\n\n     dired-do-copy\n\t     Copy the file listed on the current line of the dired buffer.\n\n     dired-do-flagged-delete\n\t     Delete the files that have been flagged for deletion.\n\n     dired-do-rename\n\t     Rename the file listed on the current line of the dired buffer.\n\n     dired-find-alternate-file\n\t     Replace the current dired buffer with an alternate one as\n\t     specified by the position of the cursor in the dired buffer.\n\n     dired-find-file\n\t     Open the file on the current line of the dired buffer.  If the\n\t     cursor is on a directory, it will be opened in dired mode.\n\n     dired-flag-file-deletion\n\t     Flag the file listed on the current line for deletion.  This is\n\t     indicated in the buffer by putting a D at the left margin.  No\n\t     files are actually deleted until the function\n\t     dired-do-flagged-delete is executed.\n\n     dired-find-file-other-window\n\t     Open the file on the current line of the dired buffer in a\n\t     different window."
  manpageQuestion1: What is the primary purpose of the mg resource in macOS?
  manpageQuestion2: How would you use dired-do-copy to copy a file listed in the current dired buffer?
  manpageQuestion3: Can you explain how to flag a file for deletion in dired mode and then delete it using the appropriate command?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\ndired-goto-file\n\t     Move the cursor to a file name in the dired buffer.\n\n     dired-next-line\n\t     Move the cursor to the next line.\n\n     dired-other-window\n\t     This function works just like dired, except that it puts the\n\t     dired buffer in another window.\n\n     dired-previous-line\n\t     Move the cursor to the previous line.\n\n     dired-revert\n\t     Refresh the dired buffer while retaining any flags.\n\n     dired-scroll-down\n\t     Scroll down the dired buffer.\n\n     dired-scroll-up\n\t     Scroll up the dired buffer.\n\n     dired-shell-command\n\t     Pipe the file under the current cursor position through a shell\n\t     command.\n\n     dired-unmark\n\t     Remove the deletion flag for the file on the current line.\n\n     dired-unmark-backward\n\t     Remove the deletion flag from the file listed on the previous\n\t     line of the dired buffer, then move up to that line.\n\n     quit-window\n\t     Close the current dired buffer.\n\nCONFIGURATION FILES\n     There are two configuration files, .mg and .mg-TERM.  Here, TERM\n     represents the name of the terminal type; e.g. if the terminal type is\n     set to “vt100”, mg will use .mg-vt100 as a startup file.  The terminal\n     type startup file is used first."
  manpageQuestion1: What is the primary purpose of the mg tool?
  manpageQuestion2: How can you use mg to execute a shell command on the file currently under the cursor in the dired buffer?
  manpageQuestion3: What is the function of the quit-window command in mg?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nThe startup file format is a list of commands, one per line, as used for\n     interactive evaluation.  Strings that are normally entered by the user at\n     any subsequent prompts may be specified after the command name; e.g.:\n\n\t   global-set-key \")\" self-insert-command\n\t   global-set-key \"\\^x\\^f\" find-file\n\t   global-set-key \"\\e[Z\" backward-char\n\t   set-default-mode fill\n\t   set-fill-column 72\n\t   auto-execute *.c c-mode\n\n     Comments can be added to the startup files by placing ‘;’ or ‘#’ as the\n     first character of a line.\n\nFILES\n     ~/.mg\t\t\t normal startup file\n     ~/.mg-TERM \t\t terminal-specific startup file\n     ~/.mg.d\t\t\t alternative backup file location\n     /usr/share/doc/mg/tutorial  concise tutorial\n\nSEE ALSO\n     ctags(1), vi(1)\n\nCAVEATS\n     Since it is written completely in C, there is currently no language in\n     which extensions can be written; however, keys can be rebound and certain\n     parameters can be changed in startup files.\n\n     In order to use 8-bit characters (such as German umlauts), the Meta key\n     needs to be disabled via the meta-key-mode command."
  manpageQuestion1: What is the primary purpose of the mg command?
  manpageQuestion2: How would you configure mg to set the default mode to 'fill' and set the fill column to 72?
  manpageQuestion3: Can you explain how to create a terminal-specific startup file for mg?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `mg`.\n\n\n\nManpage text:\n\nMulti-byte character sets, such as UTF-8, are not supported.\n\nmacOS 15.3\t\t\tApril 28, 2023\t\t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the mg resource?
  manpageQuestion2: How would you use mg to convert a multi-byte character set like UTF-8 into a different encoding?
  manpageQuestion3: Can you provide an example of using mg to handle a string containing multi-byte characters on macOS?

