- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodinstall`.\n\n\n\nManpage text:\n\nPERLMODINSTALL(1)      Perl Programmers Reference Guide      PERLMODINSTALL(1)\n\n\nNAME\n       perlmodinstall - Installing CPAN Modules\n\nDESCRIPTION\n       You can think of a module as the fundamental unit of reusable Perl\n       code; see perlmod for details.  Whenever anyone creates a chunk of Perl\n       code that they think will be useful to the world, they register as a\n       Perl developer at <https://www.cpan.org/modules/04pause.html> so that\n       they can then upload their code to the CPAN.  The CPAN is the\n       Comprehensive Perl Archive Network and can be accessed at\n       <https://www.cpan.org/> , and searched at <https://metacpan.org/> .\n\n       This documentation is for people who want to download CPAN modules and\n       install them on their own computer.\n\n   PREAMBLE\n       First, are you sure that the module isn't already on your system?  Try\n       \"perl -MFoo -e 1\".  (Replace \"Foo\" with the name of the module; for\n       instance, \"perl -MCGI::Carp -e 1\".)\n\n       If you don't see an error message, you have the module.\t(If you do see\n       an error message, it's still possible you have the module, but that\n       it's not in your path, which you can display with \"perl -e \"print\n       qq(@INC)\"\".)  For the remainder of this document, we'll assume that you\n       really honestly truly lack an installed module, but have found it on\n       the CPAN.\n\n       So now you have a file ending in .tar.gz (or, less often, .zip).  You\n       know there's a tasty module inside.  There are four steps you must now\n       take:\n\n       DECOMPRESS the file\n       UNPACK the file into a directory\n       BUILD the module (sometimes unnecessary)\n       INSTALL the module.\n\n       Here's how to perform each step for each operating system.  This is\n       <not> a substitute for reading the README and INSTALL files that might\n       have come with your module!\n\n       Also note that these instructions are tailored for installing the\n       module into your system's repository of Perl modules, but you can\n       install modules into any directory you wish.  For instance, where I say\n       \"perl Makefile.PL\", you can substitute \"perl Makefile.PL\n       PREFIX=/my/perl_directory\" to install the modules into\n       /my/perl_directory.  Then you can use the modules from your Perl\n       programs with \"use lib \"/my/perl_directory/lib/site_perl\";\" or\n       sometimes just \"use \"/my/perl_directory\";\".  If you're on a system that\n       requires superuser/root access to install modules into the directories\n       you see when you type \"perl -e \"print qq(@INC)\"\", you'll want to\n       install them into a local directory (such as your home directory) and\n       use this approach.\n\n       •   If you're on a Unix or Unix-like system,\n\n\t   You can use Andreas Koenig's CPAN module (\n\t   <https://metacpan.org/release/CPAN> ) to automate the following\n\t   steps, from DECOMPRESS through INSTALL.\n\n\t   A. DECOMPRESS\n\n\t   Decompress the file with \"gzip -d yourmodule.tar.gz\"\n\n\t   You can get gzip from <ftp://prep.ai.mit.edu/pub/gnu/>\n\n\t   Or, you can combine this step with the next to save disk space:\n\n\t\tgzip -dc yourmodule.tar.gz | tar -xof -\n\n\t   B. UNPACK\n\n\t   Unpack the result with \"tar -xof yourmodule.tar\"\n\n\t   C. BUILD\n\n\t   Go into the newly-created directory and type:\n\n\t\t perl Makefile.PL\n\t\t make test\n\n\t   or\n\n\t\t perl Makefile.PL PREFIX=/my/perl_directory\n\n\t   to install it locally.  (Remember that if you do this, you'll have\n\t   to put \"use lib \"/my/perl_directory\";\" near the top of the program\n\t   that is to use this module.\n\n\t   D. INSTALL\n\n\t   While still in that directory, type:\n\n\t\t make install\n\n\t   Make sure you have the appropriate permissions to install the\n\t   module in your Perl 5 library directory.  Often, you'll need to be\n\t   root.\n\n\t   That's all you need to do on Unix systems with dynamic linking.\n\t   Most Unix systems have dynamic linking. If yours doesn't, or if for\n\t   another reason you have a statically-linked perl, and the module\n\t   requires compilation, you'll need to build a new Perl binary that\n\t   includes the module.  Again, you'll probably need to be root.\n\n       •   If you're running ActivePerl (Win95/98/2K/NT/XP, Linux, Solaris),\n\n\t   First, type \"ppm\" from a shell and see whether ActiveState's PPM\n\t   repository has your module.\tIf so, you can install it with \"ppm\"\n\t   and you won't have to bother with any of the other steps here.  You\n\t   might be able to use the CPAN instructions from the \"Unix or Linux\"\n\t   section above as well; give it a try.  Otherwise, you'll have to\n\t   follow the steps below.\n\n\t      A. DECOMPRESS\n\n\t   You can use the open source 7-zip ( <https://www.7-zip.org/> ) or\n\t   the shareware Winzip ( <https://www.winzip.com> ) to decompress and\n\t   unpack modules.\n\n\t      B. UNPACK\n\n\t   If you used WinZip, this was already done for you.\n\n\t      C. BUILD\n\n\t   You'll need either \"nmake\" or \"gmake\".\n\n\t   Does the module require compilation (i.e. does it have files that\n\t   end in .xs, .c, .h, .y, .cc, .cxx, or .C)?  If it does, life is now\n\t   officially tough for you, because you have to compile the module\n\t   yourself (no easy feat on Windows).\tYou'll need a compiler such as\n\t   Visual C++.\tAlternatively, you can download a pre-built PPM\n\t   package from ActiveState.\n\t   <http://aspn.activestate.com/ASPN/Downloads/ActivePerl/PPM/>\n\n\t   Go into the newly-created directory and type:\n\n\t\t perl Makefile.PL\n\t\t nmake test"
  manpageQuestion1: What is the primary purpose of the perlmodinstall tool?
  manpageQuestion2: How would you use perlmodinstall to install a CPAN module on a Unix-like system?
  manpageQuestion3: Can you provide an example of installing a CPAN module on Windows using ActivePerl and the ppm command?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodinstall`.\n\n\n\nManpage text:\n\nD. INSTALL\n\n\t   While still in that directory, type:\n\n\t\t nmake install\n\n       •   If you're on the DJGPP port of DOS,\n\n\t      A. DECOMPRESS\n\n\t   djtarx ( <ftp://ftp.delorie.com/pub/djgpp/current/v2/> ) will both\n\t   uncompress and unpack.\n\n\t      B. UNPACK\n\n\t   See above.\n\n\t      C. BUILD\n\n\t   Go into the newly-created directory and type:\n\n\t\t perl Makefile.PL\n\t\t make test\n\n\t   You will need the packages mentioned in README.dos in the Perl\n\t   distribution.\n\n\t      D. INSTALL\n\n\t   While still in that directory, type:\n\n\t\tmake install\n\n\t   You will need the packages mentioned in README.dos in the Perl\n\t   distribution.\n\n       •   If you're on OS/2,\n\n\t   Get the EMX development suite and gzip/tar from Hobbes (\n\t   <http://hobbes.nmsu.edu/h-browse.php?dir=/pub/os2/dev/emx/v0.9d> ),\n\t   and then follow the instructions for Unix.\n\n       •   If you're on VMS,\n\n\t   When downloading from CPAN, save your file with a \".tgz\" extension\n\t   instead of \".tar.gz\".  All other periods in the filename should be\n\t   replaced with underscores.  For example, \"Your-Module-1.33.tar.gz\"\n\t   should be downloaded as \"Your-Module-1_33.tgz\"."
  manpageQuestion1: What is the primary purpose of the perlmodinstall tool or process?
  manpageQuestion2: What are the steps required to install Perl modules on a DJGPP port of DOS?
  manpageQuestion3: How do you install Perl modules on OS/2 using the perlmodinstall process?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodinstall`.\n\n\n\nManpage text:\n\nA. DECOMPRESS\n\n\t   Type\n\n\t       gzip -d Your-Module.tgz\n\n\t   or, for zipped modules, type\n\n\t       unzip Your-Module.zip\n\n\t   Executables for gzip, zip, and VMStar:\n\n\t       http://www.hp.com/go/openvms/freeware/\n\n\t   and their source code:\n\n\t       http://www.fsf.org/order/ftp.html\n\n\t   Note that GNU's gzip/gunzip is not the same as Info-ZIP's zip/unzip\n\t   package.  The former is a simple compression tool; the latter\n\t   permits creation of multi-file archives.\n\n\t   B. UNPACK\n\n\t   If you're using VMStar:\n\n\t\tVMStar xf Your-Module.tar\n\n\t   Or, if you're fond of VMS command syntax:\n\n\t\ttar/extract/verbose Your_Module.tar\n\n\t   C. BUILD\n\n\t   Make sure you have MMS (from Digital) or the freeware MMK (\n\t   available from MadGoat at <http://www.madgoat.com> ).  Then type\n\t   this to create the DESCRIP.MMS for the module:\n\n\t       perl Makefile.PL\n\n\t   Now you're ready to build:\n\n\t       mms test\n\n\t   Substitute \"mmk\" for \"mms\" above if you're using MMK.\n\n\t   D. INSTALL\n\n\t   Type\n\n\t       mms install"
  manpageQuestion1: What is the primary purpose of the perlmodinstall tool or process?
  manpageQuestion2: How would you decompress a zipped module named Your-Module.zip using the recommended method?
  manpageQuestion3: What are the steps required to install a Perl module using the perlmodinstall process?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodinstall`.\n\n\n\nManpage text:\n\nSubstitute \"mmk\" for \"mms\" above if you're using MMK.\n\n       •   If you're on MVS,\n\n\t   Introduce the .tar.gz file into an HFS as binary; don't translate\n\t   from ASCII to EBCDIC.\n\n\t   A. DECOMPRESS\n\n\t   Decompress the file with \"gzip -d yourmodule.tar.gz\"\n\n\t   You can get gzip from\n\t   <http://www.s390.ibm.com/products/oe/bpxqp1.html>\n\n\t   B. UNPACK\n\n\t   Unpack the result with\n\n\t\tpax -o to=IBM-1047,from=ISO8859-1 -r < yourmodule.tar\n\n\t   The BUILD and INSTALL steps are identical to those for Unix.  Some\n\t   modules generate Makefiles that work better with GNU make, which is\n\t   available from <http://www.mks.com/s390/gnu/>\n\nPORTABILITY\n       Note that not all modules will work with on all platforms.  See\n       perlport for more information on portability issues.  Read the\n       documentation to see if the module will work on your system.  There are\n       basically three categories of modules that will not work \"out of the\n       box\" with all platforms (with some possibility of overlap):"
  manpageQuestion1: What is the primary purpose of the perlmodinstall tool?
  manpageQuestion2: How would you use perlmodinstall to install a Perl module on MVS, given the specific steps outlined in the manpage?
  manpageQuestion3: Can you provide an example of using perlmodinstall to decompress and unpack a .tar.gz file for a Perl module on MVS?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodinstall`.\n\n\n\nManpage text:\n\n•   Those that should, but don't.  These need to be fixed; consider\n\t   contacting the author and possibly writing a patch.\n\n       •   Those that need to be compiled, where the target platform doesn't\n\t   have compilers readily available.  (These modules contain .xs or .c\n\t   files, usually.)  You might be able to find existing binaries on\n\t   the CPAN or elsewhere, or you might want to try getting compilers\n\t   and building it yourself, and then release the binary for other\n\t   poor souls to use.\n\n       •   Those that are targeted at a specific platform. (Such as the\n\t   Win32:: modules.)  If the module is targeted specifically at a\n\t   platform other than yours, you're out of luck, most likely.\n\n       Check the CPAN Testers if a module should work with your platform but\n       it doesn't behave as you'd expect, or you aren't sure whether or not a\n       module will work under your platform.  If the module you want isn't\n       listed there, you can test it yourself and let CPAN Testers know, you\n       can join CPAN Testers, or you can request it be tested."
  manpageQuestion1: What is the primary purpose of the perlmodinstall resource?
  manpageQuestion2: How can one determine if a Perl module is compatible with their platform using perlmodinstall?
  manpageQuestion3: What are the common reasons a Perl module might not be compatible with a specific platform according to the perlmodinstall documentation?

- prompt: |-
    You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodinstall`.



    Manpage text:

    https://cpantesters.org/

    HEY
           If you have any suggested changes for this page, let me know.  Please
           don't send me mail asking for help on how to install your modules.
           There are too many modules, and too few Orwants, for me to be able to
           answer or even acknowledge all your questions.  Contact the module
           author instead, ask someone familiar with Perl on your operating
           system, or if all else fails, file a ticket at <https://rt.cpan.org/>.

    AUTHOR
           Jon Orwant

           orwant@medita.mit.edu

           with invaluable help from Chris Nandor, and valuable help from Brandon
           Allbery, Charles Bailey, Graham Barr, Dominic Dunlop, Jarkko
           Hietaniemi, Ben Holzman, Tom Horsley, Nick Ing-Simmons, Tuomas J.
           Lukka, Laszlo Molnar, Alan Olsen, Peter Prymmer, Gurusamy Sarathy,
           Christoph Spalinger, Dan Sugalski, Larry Virden, and Ilya Zakharevich.

           First version July 22, 1998; last revised November 21, 2001.

    COPYRIGHT
           Copyright (C) 1998, 2002, 2003 Jon Orwant.  All Rights Reserved.
  manpageQuestion1: What is the primary purpose of the perlmodinstall resource?
  manpageQuestion2: How would you use perlmodinstall to install a Perl module into your system's library path?
  manpageQuestion3: Can you provide an example of using perlmodinstall to configure Perl for a custom installation directory?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodinstall`.\n\n\n\nManpage text:\n\nThis document may be distributed under the same terms as Perl itself.\n\nperl v5.34.1\t\t\t  2022-02-19\t\t     PERLMODINSTALL(1)"
  manpageQuestion1: What is the primary purpose of the perlmodinstall command?
  manpageQuestion2: How would you use perlmodinstall to install a Perl module in the default location?
  manpageQuestion3: Can you provide an example of using perlmodinstall to install a Perl module in a custom directory?

