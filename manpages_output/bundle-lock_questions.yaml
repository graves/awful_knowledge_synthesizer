- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `bundle-lock`.\n\n\n\nManpage text:\n\nBUNDLE-LOCK(1)\t\t\t\t\t\t\tBUNDLE-LOCK(1)\n\nNAME\n       bundle-lock - Creates / Updates a lockfile without installing\n\nSYNOPSIS\n       bundle lock [--update] [--local] [--print] [--lockfile=PATH]\n       [--full-index] [--add-platform] [--remove-platform] [--patch] [--minor]\n       [--major] [--strict] [--conservative]\n\nDESCRIPTION\n       Lock the gems specified in Gemfile.\n\nOPTIONS\n       --update=<*gems>\n\t      Ignores the existing lockfile. Resolve then updates lockfile.\n\t      Taking a list of gems or updating all gems if no list is given.\n\n       --local\n\t      Do not attempt to connect to rubygems.org. Instead, Bundler will\n\t      use the gems already present in Rubygems´ cache or in\n\t      vendor/cache. Note that if a appropriate platform-specific gem\n\t      exists on rubygems.org it will not be found.\n\n       --print\n\t      Prints the lockfile to STDOUT instead of writing to the file\n\t      system.\n\n       --lockfile=<path>\n\t      The path where the lockfile should be written to.\n\n       --full-index\n\t      Fall back to using the single-file index of all gems."
  manpageQuestion1: What is the primary purpose of the bundle-lock command?
  manpageQuestion2: How would you use bundle-lock to update the lockfile with all the gems specified in the Gemfile?
  manpageQuestion3: Can you provide an example of using bundle-lock to print the lockfile to STDOUT without writing it to a file?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `bundle-lock`.\n\n\n\nManpage text:\n\n--add-platform\n\t      Add a new platform to the lockfile, re-resolving for the\n\t      addition of that platform.\n\n       --remove-platform\n\t      Remove a platform from the lockfile.\n\n       --patch\n\t      If updating, prefer updating only to next patch version.\n\n       --minor\n\t      If updating, prefer updating only to next minor version.\n\n       --major\n\t      If updating, prefer updating to next major version (default).\n\n       --strict\n\t      If updating, do not allow any gem to be updated past latest\n\t      --patch | --minor | --major.\n\n       --conservative\n\t      If updating, use bundle install conservative update behavior and\n\t      do not allow shared dependencies to be updated.\n\nUPDATING ALL GEMS\n       If you run bundle lock with --update option without list of gems,\n       bundler will ignore any previously installed gems and resolve all\n       dependencies again based on the latest versions of all gems available\n       in the sources.\n\nUPDATING A LIST OF GEMS\n       Sometimes, you want to update a single gem in the Gemfile(5), and leave\n       the rest of the gems that you specified locked to the versions in the\n       Gemfile.lock."
  manpageQuestion1: What is the primary purpose of the bundle-lock command?
  manpageQuestion2: How would you use bundle-lock with the --major flag to update all gems in a project to their next major versions?
  manpageQuestion3: Can you provide an example of using bundle-lock with the --patch flag to update only the next patch version of a specific gem?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `bundle-lock`.\n\n\n\nManpage text:\n\nFor instance, you only want to update nokogiri, run bundle lock\n       --update nokogiri.\n\n       Bundler will update nokogiri and any of its dependencies, but leave the\n       rest of the gems that you specified locked to the versions in the\n       Gemfile.lock.\n\nSUPPORTING OTHER PLATFORMS\n       If you want your bundle to support platforms other than the one you´re\n       running locally, you can run bundle lock --add-platform PLATFORM to add\n       PLATFORM to the lockfile, force bundler to re-resolve and consider the\n       new platform when picking gems, all without needing to have a machine\n       that matches PLATFORM handy to install those platform-specific gems on.\n\n       For a full explanation of gem platforms, see gem help platform.\n\nPATCH LEVEL OPTIONS\n       See bundle update(1) bundle-update.1.html for details.\n\n\t\t\t\t November 2018\t\t\tBUNDLE-LOCK(1)"
  manpageQuestion1: What is the primary purpose of the bundle-lock command?
  manpageQuestion2: How can you use bundle lock to update a specific gem, like nokogiri?
  manpageQuestion3: What is the command to add a new platform to the bundle lockfile?

