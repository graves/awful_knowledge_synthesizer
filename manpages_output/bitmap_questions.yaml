- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `bitmap`.\n\n\n\nManpage text:\n\nbitmap(n)\t\t     Tk Built-In Commands\t\t     bitmap(n)\n\n______________________________________________________________________________\n\nNAME\n       bitmap - Images that display two colors\n\nSYNOPSIS\n       image create bitmap ?name? ?options?\n______________________________________________________________________________\n\n\nDESCRIPTION\n       A bitmap is an image whose pixels can display either of two colors or\n       be transparent.\tA bitmap image is defined by four things:  a\n       background color, a foreground color, and two bitmaps, called the\n       source and the mask.  Each of the bitmaps specifies 0/1 values for a\n       rectangular array of pixels, and the two bitmaps must have the same\n       dimensions.  For pixels where the mask is zero, the image displays\n       nothing, producing a transparent effect.  For other pixels, the image\n       displays the foreground color if the source data is one and the\n       background color if the source data is zero.\n\n\nCREATING BITMAPS\n       Like all images, bitmaps are created using the image create command.\n       Bitmaps support the following options:\n\n       -background color\n\t      Specifies a background color for the image in any of the\n\t      standard ways accepted by Tk.  If this option is set to an empty\n\t      string then the background pixels will be transparent.  This\n\t      effect is achieved by using the source bitmap as the mask\n\t      bitmap, ignoring any -maskdata or -maskfile options.\n\n       -data string\n\t      Specifies the contents of the source bitmap as a string.\tThe\n\t      string must adhere to X11 bitmap format (e.g., as generated by\n\t      the bitmap program).  If both the -data and -file options are\n\t      specified, the -data option takes precedence.\n\n       -file name\n\t      name gives the name of a file whose contents define the source\n\t      bitmap.  The file must adhere to X11 bitmap format (e.g., as\n\t      generated by the bitmap program).\n\n       -foreground color\n\t      Specifies a foreground color for the image in any of the\n\t      standard ways accepted by Tk.\n\n       -maskdata string\n\t      Specifies the contents of the mask as a string.  The string must\n\t      adhere to X11 bitmap format (e.g., as generated by the bitmap\n\t      program).  If both the -maskdata and -maskfile options are\n\t      specified, the -maskdata option takes precedence.\n\n       -maskfile name\n\t      name gives the name of a file whose contents define the mask.\n\t      The file must adhere to X11 bitmap format (e.g., as generated by\n\t      the bitmap program)."
  manpageQuestion1: What is the primary purpose of the bitmap command in Tk?
  manpageQuestion2: How would you create a bitmap image using the -data option with a custom X11 bitmap format string?
  manpageQuestion3: Can you provide an example of using the -file option to load a bitmap from an external file?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `bitmap`.\n\n\n\nManpage text:\n\nIMAGE COMMAND\n       When a bitmap image is created, Tk also creates a new command whose\n       name is the same as the image.  This command may be used to invoke\n       various operations on the image.  It has the following general form:\n\t      imageName option ?arg arg ...?\n       Option and the args determine the exact behavior of the command.  The\n       following commands are possible for bitmap images:\n\n       imageName cget option\n\t      Returns the current value of the configuration option given by\n\t      option.  Option may have any of the values accepted by the image\n\t      create bitmap command.\n\n       imageName configure ?option? ?value option value ...?\n\t      Query or modify the configuration options for the image.\tIf no\n\t      option is specified, returns a list describing all of the\n\t      available options for imageName (see Tk_ConfigureInfo for\n\t      information on the format of this list).\tIf option is specified\n\t      with no value, then the command returns a list describing the\n\t      one named option (this list will be identical to the\n\t      corresponding sublist of the value returned if no option is\n\t      specified).  If one or more option-value pairs are specified,\n\t      then the command modifies the given option(s) to have the given\n\t      value(s);  in this case the command returns an empty string.\n\t      Option may have any of the values accepted by the image create\n\t      bitmap command."
  manpageQuestion1: What is the primary purpose of the bitmap command in Tk?
  manpageQuestion2: How can you retrieve the current value of a specific configuration option for a bitmap image?
  manpageQuestion3: What is the process for modifying multiple configuration options of a bitmap image?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `bitmap`.\n\n\n\nManpage text:\n\nKEYWORDS\n       bitmap, image\n\nTk\t\t\t\t      4.0\t\t\t     bitmap(n)"
  manpageQuestion1: What is the primary purpose of the bitmap command?
  manpageQuestion2: How can you use the bitmap command to generate a simple image with a red square and a blue circle?
  manpageQuestion3: Can you provide an example of using the bitmap command to create a grayscale image from a color image?

