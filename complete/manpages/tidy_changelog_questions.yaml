- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `tidy_changelog`.\n\n\n\nManpage text:\n\nTIDY_CHANGELOG(1)     User Contributed Perl Documentation    TIDY_CHANGELOG(1)\n\n\nNAME\n       tidy_changelog - command-line tool for CPAN::Changes\n\nSYNOPSIS\n\t   $ tidy_changelog Changelog\n\nDESCRIPTION\n       Takes a changelog file, parse it using CPAN::Changes and prints out the\n       resulting output.  If a file is not given, the program will see if\n       there is one file in the current directory beginning by 'change' (case-\n       insensitive) and, if so, assume it to be the changelog.\n\nARGUMENTS\n   --next\n       If provided, assumes that there is a placeholder header for an upcoming\n       next release. The placeholder token is given via --token.\n\n   --token\n       Regular expression to use to detect the token for an upcoming release\n       if --next is used. If not explicitly given, defaults to\n       \"\\{\\{\\$NEXT\\}\\}\".\n\n   --headers\n       If given, only print out the release header lines, without any of the\n       changes.\n\n   --reverse\n       Prints the releases in reverse order (from the oldest to latest).\n\n   --check\n       Only check if the changelog is formatted properly using the\n       changes_file_ok function of Test::CPAN::Changes.\n\n   --help\n       This help\n\nperl v5.34.0\t\t\t  2014-10-10\t\t     TIDY_CHANGELOG(1)"
  manpageQuestion1: What is the primary purpose of the tidy_changelog tool?
  manpageQuestion2: How would you use tidy_changelog to verify the formatting of a changelog file named 'change.log'?
  manpageQuestion3: Can you provide an example of using tidy_changelog to print only the header lines of a changelog in reverse order?

