- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nPERLMODLIB(1)\t       Perl Programmers Reference Guide \t PERLMODLIB(1)"
  manpageQuestion1: What is the primary purpose of the perlmodlib tool?
  manpageQuestion2: How would you use perlmodlib to list all the modules in a specific directory?
  manpageQuestion3: Can you provide an example of using perlmodlib to find and display all the modules that are compatible with a specific Perl version?

- prompt: |-
    You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.



    Manpage text:

    NAME
           perlmodlib - constructing new Perl modules and finding existing ones

    THE PERL MODULE LIBRARY
           Many modules are included in the Perl distribution.  These are
           described below, and all end in .pm.  You may discover compiled library
           files (usually ending in .so) or small pieces of modules to be
           autoloaded (ending in .al); these were automatically generated by the
           installation process.  You may also discover files in the library
           directory that end in either .pl or .ph.  These are old libraries
           supplied so that old programs that use them still run.  The .pl files
           will all eventually be converted into standard modules, and the .ph
           files made by h2ph will probably end up as extension modules made by
           h2xs.  (Some .ph values may already be available through the POSIX,
           Errno, or Fcntl modules.)  The pl2pm file in the distribution may help
           in your conversion, but it's just a mechanical process and therefore
           far from bulletproof.
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use perlmodlib to convert an old .pl library file into a standard Perl module?
  manpageQuestion3: What are the different types of files typically found in the Perl module library, and how are they used?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nPragmatic Modules\n       They work somewhat like compiler directives (pragmata) in that they\n       tend to affect the compilation of your program, and thus will usually\n       work well only when used within a \"use\", or \"no\".  Most of these are\n       lexically scoped, so an inner BLOCK may countermand them by saying:\n\n\t   no integer;\n\t   no strict 'refs';\n\t   no warnings;\n\n       which lasts until the end of that BLOCK.\n\n       Some pragmas are lexically scoped--typically those that affect the $^H\n       hints variable.\tOthers affect the current package instead, like \"use\n       vars\" and \"use subs\", which allow you to predeclare a variables or\n       subroutines within a particular file rather than just a block.  Such\n       declarations are effective for the entire file for which they were\n       declared.  You cannot rescind them with \"no vars\" or \"no subs\".\n\n       The following pragmas are defined (and have their own documentation).\n\n       attributes  Get/set subroutine or variable attributes"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use pragmas in perlmodlib to modify the behavior of a Perl script within a specific block?
  manpageQuestion3: What are some examples of pragmas in perlmodlib that affect the entire file rather than just a block?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nautodie\t   Replace functions with ones that succeed or die with\n\t\t   lexical scope\n\n       autodie::exception\n\t\t   Exceptions from autodying functions.\n\n       autodie::exception::system\n\t\t   Exceptions from autodying system().\n\n       autodie::hints\n\t\t   Provide hints about user subroutines to autodie\n\n       autodie::skip\n\t\t   Skip a package when throwing autodie exceptions\n\n       autouse\t   Postpone load of modules until a function is used\n\n       base\t   Establish an ISA relationship with base classes at compile\n\t\t   time\n\n       bigint\t   Transparent BigInteger support for Perl\n\n       bignum\t   Transparent BigNumber support for Perl\n\n       bigrat\t   Transparent BigNumber/BigRational support for Perl\n\n       blib\t   Use MakeMaker's uninstalled version of a package\n\n       bytes\t   Expose the individual bytes of characters\n\n       charnames   Access to Unicode character names and named character\n\t\t   sequences; also define character names\n\n       constant    Declare constants\n\n       deprecate   Perl pragma for deprecating the inclusion of a module in\n\t\t   core"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How would you use the 'autodie' module to ensure that system() calls in a Perl script die with an error message if they fail?
  manpageQuestion3: Can you provide an example of using the 'base' module to establish an ISA relationship between a custom class and a base class in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\ndiagnostics Produce verbose warning diagnostics\n\n       encoding    Allows you to write your script in non-ASCII and non-UTF-8\n\n       encoding::warnings\n\t\t   Warn on implicit encoding conversions\n\n       experimental\n\t\t   Experimental features made easy\n\n       feature\t   Enable new features\n\n       fields\t   Compile-time class fields\n\n       filetest    Control the filetest permission operators\n\n       if\t   \"use\" a Perl module if a condition holds\n\n       integer\t   Use integer arithmetic instead of floating point\n\n       less\t   Request less of something\n\n       lib\t   Manipulate @INC at compile time\n\n       locale\t   Use or avoid POSIX locales for built-in operations\n\n       mro\t   Method Resolution Order\n\n       ok\t   Alternative to Test::More::use_ok\n\n       open\t   Set default PerlIO layers for input and output\n\n       ops\t   Restrict unsafe operations when compiling\n\n       overload    Package for overloading Perl operations\n\n       overloading Lexically control overloading\n\n       parent\t   Establish an ISA relationship with base classes at compile\n\t\t   time"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you enable experimental features in Perl using the perlmodlib resource?
  manpageQuestion3: What is the function of the 'lib' option in the perlmodlib resource?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nre\t   Alter regular expression behaviour\n\n       sigtrap\t   Enable simple signal handling\n\n       sort\t   Control sort() behaviour\n\n       strict\t   Restrict unsafe constructs\n\n       subs\t   Predeclare subroutine names\n\n       threads\t   Perl interpreter-based threads\n\n       threads::shared\n\t\t   Perl extension for sharing data structures between threads\n\n       utf8\t   Enable/disable UTF-8 (or UTF-EBCDIC) in source code\n\n       vars\t   Predeclare global variable names\n\n       version\t   Perl extension for Version Objects\n\n       vmsish\t   Control VMS-specific language features\n\n       warnings    Control optional warnings\n\n       warnings::register\n\t\t   Warnings import function\n\n   Standard Modules\n       Standard, bundled modules are all expected to behave in a well-defined\n       manner with respect to namespace pollution because they use the\n       Exporter module.  See their own documentation for details.\n\n       It's possible that not all modules listed below are installed on your\n       system. For example, the GDBM_File module will not be installed if you\n       don't have the gdbm library."
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you enable UTF-8 support in source code using perlmodlib?
  manpageQuestion3: What is the function of the 'strict' parameter in perlmodlib?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nAmiga::ARexx\n\t\t   Perl extension for ARexx support\n\n       Amiga::Exec Perl extension for low level amiga support\n\n       AnyDBM_File Provide framework for multiple DBMs\n\n       App::Cpan   Easily interact with CPAN from the command line\n\n       App::Prove  Implements the \"prove\" command.\n\n       App::Prove::State\n\t\t   State storage for the \"prove\" command.\n\n       App::Prove::State::Result\n\t\t   Individual test suite results.\n\n       App::Prove::State::Result::Test\n\t\t   Individual test results.\n\n       Archive::Tar\n\t\t   Module for manipulations of tar archives\n\n       Archive::Tar::File\n\t\t   A subclass for in-memory extracted file from Archive::Tar\n\n       Attribute::Handlers\n\t\t   Simpler definition of attribute handlers\n\n       AutoLoader  Load subroutines only on demand\n\n       AutoSplit   Split a package for autoloading\n\n       B\t   The Perl Compiler Backend\n\n       B::Concise  Walk Perl syntax tree, printing concise info about ops\n\n       B::Deparse  Perl compiler backend to produce perl code"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use App::Prove to run tests in a Perl project from the command line?
  manpageQuestion3: Can you provide an example of using Archive::Tar to create and extract a tar archive in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nB::Op_private\n\t\t   OP op_private flag definitions\n\n       B::Showlex  Show lexical variables used in functions or files\n\n       B::Terse    Walk Perl syntax tree, printing terse info about ops\n\n       B::Xref\t   Generates cross reference reports for Perl programs\n\n       Benchmark   Benchmark running times of Perl code\n\n       \"IO::Socket::IP\"\n\t\t   Family-neutral IP socket supporting both IPv4 and IPv6\n\n       \"Socket\"    Networking constants and support functions\n\n       CORE\t   Namespace for Perl's core routines\n\n       CPAN\t   Query, download and build perl modules from CPAN sites\n\n       CPAN::API::HOWTO\n\t\t   A recipe book for programming with CPAN.pm\n\n       CPAN::Debug Internal debugging for CPAN.pm\n\n       CPAN::Distroprefs\n\t\t   Read and match distroprefs\n\n       CPAN::FirstTime\n\t\t   Utility for CPAN::Config file Initialization\n\n       CPAN::HandleConfig\n\t\t   Internal configuration handling for CPAN.pm\n\n       CPAN::Kwalify\n\t\t   Interface between CPAN.pm and Kwalify.pm\n\n       CPAN::Meta  The distribution metadata for a CPAN dist"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you generate a cross-reference report for a Perl program using the perlmodlib resource?
  manpageQuestion3: Can you provide an example of how to use the perlmodlib resource to handle IP socket programming in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nCPAN::Meta::Converter\n\t\t   Convert CPAN distribution metadata structures\n\n       CPAN::Meta::Feature\n\t\t   An optional feature provided by a CPAN distribution\n\n       CPAN::Meta::History\n\t\t   History of CPAN Meta Spec changes\n\n       CPAN::Meta::History::Meta_1_0\n\t\t   Version 1.0 metadata specification for META.yml\n\n       CPAN::Meta::History::Meta_1_1\n\t\t   Version 1.1 metadata specification for META.yml\n\n       CPAN::Meta::History::Meta_1_2\n\t\t   Version 1.2 metadata specification for META.yml\n\n       CPAN::Meta::History::Meta_1_3\n\t\t   Version 1.3 metadata specification for META.yml\n\n       CPAN::Meta::History::Meta_1_4\n\t\t   Version 1.4 metadata specification for META.yml\n\n       CPAN::Meta::Merge\n\t\t   Merging CPAN Meta fragments\n\n       CPAN::Meta::Prereqs\n\t\t   A set of distribution prerequisites by phase and type\n\n       CPAN::Meta::Requirements\n\t\t   A set of version requirements for a CPAN dist\n\n       CPAN::Meta::Spec\n\t\t   Specification for CPAN distribution metadata\n\n       CPAN::Meta::Validator\n\t\t   Validate CPAN distribution metadata structures"
  manpageQuestion1: What is the primary purpose of the CPAN::Meta::Converter module?
  manpageQuestion2: How can you use CPAN::Meta::Validator to check the validity of a CPAN distribution's metadata?
  manpageQuestion3: What is the function of CPAN::Meta::Merge in the context of CPAN metadata management?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nCPAN::Meta::YAML\n\t\t   Read and write a subset of YAML for CPAN Meta files\n\n       CPAN::Nox   Wrapper around CPAN.pm without using any XS module\n\n       CPAN::Plugin\n\t\t   Base class for CPAN shell extensions\n\n       CPAN::Plugin::Specfile\n\t\t   Proof of concept implementation of a trivial CPAN::Plugin\n\n       CPAN::Queue Internal queue support for CPAN.pm\n\n       CPAN::Tarzip\n\t\t   Internal handling of tar archives for CPAN.pm\n\n       CPAN::Version\n\t\t   Utility functions to compare CPAN versions\n\n       Carp\t   Alternative warn and die for modules\n\n       Class::Struct\n\t\t   Declare struct-like datatypes as Perl classes\n\n       Compress::Raw::Bzip2\n\t\t   Low-Level Interface to bzip2 compression library\n\n       Compress::Raw::Zlib\n\t\t   Low-Level Interface to zlib compression library\n\n       Compress::Zlib\n\t\t   Interface to zlib compression library\n\n       Config\t   Access Perl configuration information\n\n       Config::Extensions\n\t\t   Hash lookup of which core extensions were built.\n\n       Config::Perl::V\n\t\t   Structured data retrieval of perl -V output"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use perlmodlib to access Perl configuration information?
  manpageQuestion3: Can you provide an example of using perlmodlib to retrieve structured data from the Perl -V output?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nCwd\t   Get pathname of current working directory\n\n       DB\t   Programmatic interface to the Perl debugging API\n\n       DBM_Filter  Filter DBM keys/values\n\n       DBM_Filter::compress\n\t\t   Filter for DBM_Filter\n\n       DBM_Filter::encode\n\t\t   Filter for DBM_Filter\n\n       DBM_Filter::int32\n\t\t   Filter for DBM_Filter\n\n       DBM_Filter::null\n\t\t   Filter for DBM_Filter\n\n       DBM_Filter::utf8\n\t\t   Filter for DBM_Filter\n\n       DB_File\t   Perl5 access to Berkeley DB version 1.x\n\n       Data::Dumper\n\t\t   Stringified perl data structures, suitable for both\n\t\t   printing and \"eval\"\n\n       Devel::PPPort\n\t\t   Perl/Pollution/Portability\n\n       Devel::Peek A data debugging tool for the XS programmer\n\n       Devel::SelfStubber\n\t\t   Generate stubs for a SelfLoading module\n\n       Digest\t   Modules that calculate message digests\n\n       Digest::MD5 Perl interface to the MD5 Algorithm\n\n       Digest::SHA Perl extension for SHA-1/224/256/384/512\n\n       Digest::base\n\t\t   Digest base class\n\n       Digest::file\n\t\t   Calculate digests of files"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use the Digest::MD5 module to compute the MD5 hash of a file named 'example.txt'?
  manpageQuestion3: What is the function of the Data::Dumper module in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nDirHandle   (obsolete) supply object methods for directory handles\n\n       Dumpvalue   Provides screen dump of Perl data.\n\n       DynaLoader  Dynamically load C libraries into Perl code\n\n       Encode\t   Character encodings in Perl\n\n       Encode::Alias\n\t\t   Alias definitions to encodings\n\n       Encode::Byte\n\t\t   Single Byte Encodings\n\n       Encode::CJKConstants\n\t\t   Internally used by Encode::??::ISO_2022_*\n\n       Encode::CN  China-based Chinese Encodings\n\n       Encode::CN::HZ\n\t\t   Internally used by Encode::CN\n\n       Encode::Config\n\t\t   Internally used by Encode\n\n       Encode::EBCDIC\n\t\t   EBCDIC Encodings\n\n       Encode::Encoder\n\t\t   Object Oriented Encoder\n\n       Encode::Encoding\n\t\t   Encode Implementation Base Class\n\n       Encode::GSM0338\n\t\t   ETSI GSM 03.38 Encoding\n\n       Encode::Guess\n\t\t   Guesses encoding from data\n\n       Encode::JP  Japanese Encodings\n\n       Encode::JP::H2Z\n\t\t   Internally used by Encode::JP::2022_JP*\n\n       Encode::JP::JIS7\n\t\t   Internally used by Encode::JP"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use Encode::Guess to determine the encoding of a given string?
  manpageQuestion3: Can you explain how to use Encode::Encode to handle character encoding conversions in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nEncode::KR  Korean Encodings\n\n       Encode::KR::2022_KR\n\t\t   Internally used by Encode::KR\n\n       Encode::MIME::Header\n\t\t   MIME encoding for an unstructured email header\n\n       Encode::MIME::Name\n\t\t   Internally used by Encode\n\n       Encode::PerlIO\n\t\t   A detailed document on Encode and PerlIO\n\n       Encode::Supported\n\t\t   Encodings supported by Encode\n\n       Encode::Symbol\n\t\t   Symbol Encodings\n\n       Encode::TW  Taiwan-based Chinese Encodings\n\n       Encode::Unicode\n\t\t   Various Unicode Transformation Formats\n\n       Encode::Unicode::UTF7\n\t\t   UTF-7 encoding\n\n       English\t   Use nice English (or awk) names for ugly punctuation\n\t\t   variables\n\n       Env\t   Perl module that imports environment variables as scalars\n\t\t   or arrays\n\n       Errno\t   System errno constants\n\n       Exporter    Implements default import method for modules\n\n       Exporter::Heavy\n\t\t   Exporter guts\n\n       ExtUtils::CBuilder\n\t\t   Compile and link C code for Perl modules\n\n       ExtUtils::CBuilder::Platform::Windows\n\t\t   Builder class for Windows platforms"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How would you use the Encode::KR module to handle Korean encodings in Perl?
  manpageQuestion3: Can you provide an example of using the Encode::Unicode module to convert text between different Unicode formats?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nExtUtils::Command\n\t\t   Utilities to replace common UNIX commands in Makefiles etc.\n\n       ExtUtils::Command::MM\n\t\t   Commands for the MM's to use in Makefiles\n\n       ExtUtils::Constant\n\t\t   Generate XS code to import C header constants\n\n       ExtUtils::Constant::Base\n\t\t   Base class for ExtUtils::Constant objects\n\n       ExtUtils::Constant::Utils\n\t\t   Helper functions for ExtUtils::Constant\n\n       ExtUtils::Constant::XS\n\t\t   Generate C code for XS modules' constants.\n\n       ExtUtils::Embed\n\t\t   Utilities for embedding Perl in C/C++ applications\n\n       ExtUtils::Install\n\t\t   Install files from here to there\n\n       ExtUtils::Installed\n\t\t   Inventory management of installed modules\n\n       ExtUtils::Liblist\n\t\t   Determine libraries to use and how to use them\n\n       ExtUtils::MM\n\t\t   OS adjusted ExtUtils::MakeMaker subclass\n\n       ExtUtils::MM_AIX\n\t\t   AIX specific subclass of ExtUtils::MM_Unix\n\n       ExtUtils::MM_Any\n\t\t   Platform-agnostic MM methods\n\n       ExtUtils::MM_BeOS\n\t\t   Methods to override UN*X behaviour in ExtUtils::MakeMaker"
  manpageQuestion1: What is the primary purpose of the ExtUtils::Command module?
  manpageQuestion2: How can you use ExtUtils::Install to install files from one directory to another?
  manpageQuestion3: What is the function of ExtUtils::Liblist and how is it typically used in Perl module development?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nExtUtils::MM_Cygwin\n\t\t   Methods to override UN*X behaviour in ExtUtils::MakeMaker\n\n       ExtUtils::MM_DOS\n\t\t   DOS specific subclass of ExtUtils::MM_Unix\n\n       ExtUtils::MM_Darwin\n\t\t   Special behaviors for OS X\n\n       ExtUtils::MM_MacOS\n\t\t   Once produced Makefiles for MacOS Classic\n\n       ExtUtils::MM_NW5\n\t\t   Methods to override UN*X behaviour in ExtUtils::MakeMaker\n\n       ExtUtils::MM_OS2\n\t\t   Methods to override UN*X behaviour in ExtUtils::MakeMaker\n\n       ExtUtils::MM_OS390\n\t\t   OS390 specific subclass of ExtUtils::MM_Unix\n\n       ExtUtils::MM_QNX\n\t\t   QNX specific subclass of ExtUtils::MM_Unix\n\n       ExtUtils::MM_UWIN\n\t\t   U/WIN specific subclass of ExtUtils::MM_Unix\n\n       ExtUtils::MM_Unix\n\t\t   Methods used by ExtUtils::MakeMaker\n\n       ExtUtils::MM_VMS\n\t\t   Methods to override UN*X behaviour in ExtUtils::MakeMaker\n\n       ExtUtils::MM_VOS\n\t\t   VOS specific subclass of ExtUtils::MM_Unix\n\n       ExtUtils::MM_Win32\n\t\t   Methods to override UN*X behaviour in ExtUtils::MakeMaker"
  manpageQuestion1: What is the primary purpose of the ExtUtils::MM_... modules?
  manpageQuestion2: How can you specify that Perl's MakeMaker should use the Darwin-specific behavior when building a module?
  manpageQuestion3: Which ExtUtils::MM_... module should be used to handle platform-specific behavior on macOS Classic?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nExtUtils::MM_Win95\n\t\t   Method to customize MakeMaker for Win9X\n\n       ExtUtils::MY\n\t\t   ExtUtils::MakeMaker subclass for customization\n\n       ExtUtils::MakeMaker\n\t\t   Create a module Makefile\n\n       ExtUtils::MakeMaker::Config\n\t\t   Wrapper around Config.pm\n\n       ExtUtils::MakeMaker::FAQ\n\t\t   Frequently Asked Questions About MakeMaker\n\n       ExtUtils::MakeMaker::Locale\n\t\t   Bundled Encode::Locale\n\n       ExtUtils::MakeMaker::Tutorial\n\t\t   Writing a module with MakeMaker\n\n       ExtUtils::Manifest\n\t\t   Utilities to write and check a MANIFEST file\n\n       ExtUtils::Miniperl\n\t\t   Write the C code for miniperlmain.c and perlmain.c\n\n       ExtUtils::Mkbootstrap\n\t\t   Make a bootstrap file for use by DynaLoader\n\n       ExtUtils::Mksymlists\n\t\t   Write linker options files for dynamic extension\n\n       ExtUtils::PL2Bat\n\t\t   Batch file creation to run perl scripts on Windows\n\n       ExtUtils::Packlist\n\t\t   Manage .packlist files\n\n       ExtUtils::ParseXS\n\t\t   Converts Perl XS code into C code"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use ExtUtils::MakeMaker to generate a Makefile for a Perl module?
  manpageQuestion3: What is the function of ExtUtils::Packlist and how is it typically used?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nExtUtils::ParseXS::Constants\n\t\t   Initialization values for some globals\n\n       ExtUtils::ParseXS::Eval\n\t\t   Clean package to evaluate code in\n\n       ExtUtils::ParseXS::Utilities\n\t\t   Subroutines used with ExtUtils::ParseXS\n\n       ExtUtils::Typemaps\n\t\t   Read/Write/Modify Perl/XS typemap files\n\n       ExtUtils::Typemaps::Cmd\n\t\t   Quick commands for handling typemaps\n\n       ExtUtils::Typemaps::InputMap\n\t\t   Entry in the INPUT section of a typemap\n\n       ExtUtils::Typemaps::OutputMap\n\t\t   Entry in the OUTPUT section of a typemap\n\n       ExtUtils::Typemaps::Type\n\t\t   Entry in the TYPEMAP section of a typemap\n\n       ExtUtils::XSSymSet\n\t\t   Keep sets of symbol names palatable to the VMS linker\n\n       ExtUtils::testlib\n\t\t   Add blib/* directories to @INC\n\n       Fatal\t   Replace functions with equivalents which succeed or die\n\n       Fcntl\t   Load the C Fcntl.h defines\n\n       File::Basename\n\t\t   Parse file paths into directory, filename and suffix.\n\n       File::Compare\n\t\t   Compare files or filehandles"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use ExtUtils::Typemaps::Cmd to quickly handle typemap files?
  manpageQuestion3: What is the function of ExtUtils::testlib in Perl module management?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nFile::Copy  Copy files or filehandles\n\n       File::DosGlob\n\t\t   DOS like globbing and then some\n\n       File::Fetch A generic file fetching mechanism\n\n       File::Find  Traverse a directory tree.\n\n       File::Glob  Perl extension for BSD glob routine\n\n       File::GlobMapper\n\t\t   Extend File Glob to Allow Input and Output Files\n\n       File::Path  Create or remove directory trees\n\n       File::Spec  Portably perform operations on file names\n\n       File::Spec::AmigaOS\n\t\t   File::Spec for AmigaOS\n\n       File::Spec::Cygwin\n\t\t   Methods for Cygwin file specs\n\n       File::Spec::Epoc\n\t\t   Methods for Epoc file specs\n\n       File::Spec::Functions\n\t\t   Portably perform operations on file names\n\n       File::Spec::Mac\n\t\t   File::Spec for Mac OS (Classic)\n\n       File::Spec::OS2\n\t\t   Methods for OS/2 file specs\n\n       File::Spec::Unix\n\t\t   File::Spec for Unix, base for other File::Spec modules\n\n       File::Spec::VMS\n\t\t   Methods for VMS file specs\n\n       File::Spec::Win32\n\t\t   Methods for Win32 file specs"
  manpageQuestion1: What is the primary purpose of the File::Spec module?
  manpageQuestion2: How would you use File::Spec to construct a file path that is compatible with different operating systems?
  manpageQuestion3: Can you provide an example of using File::Spec::Win32 to create a file path on a Windows system?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nFile::Temp  Return name and handle of a temporary file safely\n\n       File::stat  By-name interface to Perl's built-in stat() functions\n\n       FileCache   Keep more files open than the system permits\n\n       FileHandle  Supply object methods for filehandles\n\n       Filter::Simple\n\t\t   Simplified source filtering\n\n       Filter::Util::Call\n\t\t   Perl Source Filter Utility Module\n\n       FindBin\t   Locate directory of original perl script\n\n       GDBM_File   Perl5 access to the gdbm library.\n\n       Getopt::Long\n\t\t   Extended processing of command line options\n\n       Getopt::Std Process single-character switches with switch clustering\n\n       HTTP::Tiny  A small, simple, correct HTTP/1.1 client\n\n       Hash::Util  A selection of general-utility hash subroutines\n\n       Hash::Util::FieldHash\n\t\t   Support for Inside-Out Classes\n\n       I18N::Collate\n\t\t   Compare 8-bit scalar data according to the current locale\n\n       I18N::LangTags\n\t\t   Functions for dealing with RFC3066-style language tags"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How would you use the Getopt::Long module to process command-line options in a Perl script?
  manpageQuestion3: Can you provide an example of using the HTTP::Tiny module to make a simple HTTP GET request?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nI18N::LangTags::Detect\n\t\t   Detect the user's language preferences\n\n       I18N::LangTags::List\n\t\t   Tags and names for human languages\n\n       I18N::Langinfo\n\t\t   Query locale information\n\n       IO\t   Load various IO modules\n\n       IO::Compress::Base\n\t\t   Base Class for IO::Compress modules\n\n       IO::Compress::Bzip2\n\t\t   Write bzip2 files/buffers\n\n       IO::Compress::Deflate\n\t\t   Write RFC 1950 files/buffers\n\n       IO::Compress::FAQ\n\t\t   Frequently Asked Questions about IO::Compress\n\n       IO::Compress::Gzip\n\t\t   Write RFC 1952 files/buffers\n\n       IO::Compress::RawDeflate\n\t\t   Write RFC 1951 files/buffers\n\n       IO::Compress::Zip\n\t\t   Write zip files/buffers\n\n       IO::Dir\t   Supply object methods for directory handles\n\n       IO::File    Supply object methods for filehandles\n\n       IO::Handle  Supply object methods for I/O handles\n\n       IO::Pipe    Supply object methods for pipes\n\n       IO::Poll    Object interface to system poll call\n\n       IO::Seekable\n\t\t   Supply seek based methods for I/O objects"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use IO::Compress::Gzip to compress a file into a gzip format?
  manpageQuestion3: What is the function of the IO::Handle module in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nIO::Select  OO interface to the select system call\n\n       IO::Socket  Object interface to socket communications\n\n       IO::Socket::INET\n\t\t   Object interface for AF_INET domain sockets\n\n       IO::Socket::UNIX\n\t\t   Object interface for AF_UNIX domain sockets\n\n       IO::Uncompress::AnyInflate\n\t\t   Uncompress zlib-based (zip, gzip) file/buffer\n\n       IO::Uncompress::AnyUncompress\n\t\t   Uncompress gzip, zip, bzip2, zstd, xz, lzma, lzip, lzf or\n\t\t   lzop file/buffer\n\n       IO::Uncompress::Base\n\t\t   Base Class for IO::Uncompress modules\n\n       IO::Uncompress::Bunzip2\n\t\t   Read bzip2 files/buffers\n\n       IO::Uncompress::Gunzip\n\t\t   Read RFC 1952 files/buffers\n\n       IO::Uncompress::Inflate\n\t\t   Read RFC 1950 files/buffers\n\n       IO::Uncompress::RawInflate\n\t\t   Read RFC 1951 files/buffers\n\n       IO::Uncompress::Unzip\n\t\t   Read zip files/buffers\n\n       IO::Zlib    IO:: style interface to Compress::Zlib\n\n       IPC::Cmd    Finding and running system commands made easy\n\n       IPC::Msg    SysV Msg IPC object class"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use IPC::Cmd to execute a system command and capture its output in Perl?
  manpageQuestion3: What is the function of IO::Select in Perl module programming?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nIPC::Open2  Open a process for both reading and writing using open2()\n\n       IPC::Open3  Open a process for reading, writing, and error handling\n\t\t   using open3()\n\n       IPC::Semaphore\n\t\t   SysV Semaphore IPC object class\n\n       IPC::SharedMem\n\t\t   SysV Shared Memory IPC object class\n\n       IPC::SysV   System V IPC constants and system calls\n\n       Internals   Reserved special namespace for internals related functions\n\n       JSON::PP    JSON::XS compatible pure-Perl module.\n\n       JSON::PP::Boolean\n\t\t   Dummy module providing JSON::PP::Boolean\n\n       List::Util  A selection of general-utility list subroutines\n\n       List::Util::XS\n\t\t   Indicate if List::Util was compiled with a C compiler\n\n       Locale::Maketext\n\t\t   Framework for localization\n\n       Locale::Maketext::Cookbook\n\t\t   Recipes for using Locale::Maketext\n\n       Locale::Maketext::Guts\n\t\t   Deprecated module to load Locale::Maketext utf8 code\n\n       Locale::Maketext::GutsLoader\n\t\t   Deprecated module to load Locale::Maketext utf8 code"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use the IPC::Open3 module to handle a process's standard input, output, and error streams?
  manpageQuestion3: What is the function of the Locale::Maketext module in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nLocale::Maketext::Simple\n\t\t   Simple interface to Locale::Maketext::Lexicon\n\n       Locale::Maketext::TPJ13\n\t\t   Article about software localization\n\n       MIME::Base64\n\t\t   Encoding and decoding of base64 strings\n\n       MIME::QuotedPrint\n\t\t   Encoding and decoding of quoted-printable strings\n\n       Math::BigFloat\n\t\t   Arbitrary size floating point math package\n\n       Math::BigInt\n\t\t   Arbitrary size integer/float math package\n\n       Math::BigInt::Calc\n\t\t   Pure Perl module to support Math::BigInt\n\n       Math::BigInt::FastCalc\n\t\t   Math::BigInt::Calc with some XS for more speed\n\n       Math::BigInt::Lib\n\t\t   Virtual parent class for Math::BigInt libraries\n\n       Math::BigRat\n\t\t   Arbitrary big rational numbers\n\n       Math::Complex\n\t\t   Complex numbers and associated mathematical functions\n\n       Math::Trig  Trigonometric functions\n\n       Memoize\t   Make functions faster by trading space for time\n\n       Memoize::AnyDBM_File\n\t\t   Glue to provide EXISTS for AnyDBM_File for Storable use"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How would you use Math::BigFloat to perform arbitrary-precision floating-point arithmetic in Perl?
  manpageQuestion3: Can you provide an example of using MIME::Base64 to encode a string into base64 format?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nMemoize::Expire\n\t\t   Plug-in module for automatic expiration of memoized values\n\n       Memoize::ExpireFile\n\t\t   Test for Memoize expiration semantics\n\n       Memoize::ExpireTest\n\t\t   Test for Memoize expiration semantics\n\n       Memoize::NDBM_File\n\t\t   Glue to provide EXISTS for NDBM_File for Storable use\n\n       Memoize::SDBM_File\n\t\t   Glue to provide EXISTS for SDBM_File for Storable use\n\n       Memoize::Storable\n\t\t   Store Memoized data in Storable database\n\n       Module::CoreList\n\t\t   What modules shipped with versions of perl\n\n       Module::CoreList::Utils\n\t\t   What utilities shipped with versions of perl\n\n       Module::Load\n\t\t   Runtime require of both modules and files\n\n       Module::Load::Conditional\n\t\t   Looking up module information / loading at runtime\n\n       Module::Loaded\n\t\t   Mark modules as loaded or unloaded\n\n       Module::Metadata\n\t\t   Gather package and POD information from perl module files\n\n       NDBM_File   Tied access to ndbm files\n\n       NEXT\t   Provide a pseudo-class NEXT (et al) that allows method\n\t\t   redispatch"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use Memoize::Expire to automatically expire memoized values in a Perl script?
  manpageQuestion3: Can you provide an example of using Module::Load to dynamically load a Perl module at runtime?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nNet::Cmd    Network Command class (as used by FTP, SMTP etc)\n\n       Net::Config Local configuration data for libnet\n\n       Net::Domain Attempt to evaluate the current host's internet name and\n\t\t   domain\n\n       Net::FTP    FTP Client class\n\n       Net::FTP::dataconn\n\t\t   FTP Client data connection class\n\n       Net::NNTP   NNTP Client class\n\n       Net::Netrc  OO interface to users netrc file\n\n       Net::POP3   Post Office Protocol 3 Client class (RFC1939)\n\n       Net::Ping   Check a remote host for reachability\n\n       Net::SMTP   Simple Mail Transfer Protocol Client\n\n       Net::Time   Time and daytime network client interface\n\n       Net::hostent\n\t\t   By-name interface to Perl's built-in gethost*() functions\n\n       Net::libnetFAQ\n\t\t   Libnet Frequently Asked Questions\n\n       Net::netent By-name interface to Perl's built-in getnet*() functions\n\n       Net::protoent\n\t\t   By-name interface to Perl's built-in getproto*() functions\n\n       Net::servent\n\t\t   By-name interface to Perl's built-in getserv*() functions"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use the Net::Ping module to check if a remote host is reachable?
  manpageQuestion3: Can you provide an example of using the Net::FTP module to establish a connection to an FTP server?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nO\t   Generic interface to Perl Compiler backends\n\n       ODBM_File   Tied access to odbm files\n\n       Opcode\t   Disable named opcodes when compiling perl code\n\n       POSIX\t   Perl interface to IEEE Std 1003.1\n\n       Params::Check\n\t\t   A generic input parsing/checking mechanism.\n\n       Parse::CPAN::Meta\n\t\t   Parse META.yml and META.json CPAN metadata files\n\n       Perl::OSType\n\t\t   Map Perl operating system names to generic types\n\n       PerlIO\t   On demand loader for PerlIO layers and root of PerlIO::*\n\t\t   name space\n\n       PerlIO::encoding\n\t\t   Encoding layer\n\n       PerlIO::mmap\n\t\t   Memory mapped IO\n\n       PerlIO::scalar\n\t\t   In-memory IO, scalar IO\n\n       PerlIO::via Helper class for PerlIO layers implemented in perl\n\n       PerlIO::via::QuotedPrint\n\t\t   PerlIO layer for quoted-printable strings\n\n       Pod::Checker\n\t\t   Check pod documents for syntax errors\n\n       Pod::Escapes\n\t\t   For resolving Pod E<...> sequences\n\n       Pod::Functions\n\t\t   Group Perl's functions a la perlfunc.pod"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use the PerlIO::mmap module to perform memory-mapped file I/O in Perl?
  manpageQuestion3: Can you explain how to utilize the Parse::CPAN::Meta module to parse a META.yml file?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nPod::Html   Module to convert pod files to HTML\n\n       Pod::Man    Convert POD data to formatted *roff input\n\n       Pod::ParseLink\n\t\t   Parse an L<> formatting code in POD text\n\n       Pod::Perldoc\n\t\t   Look up Perl documentation in Pod format.\n\n       Pod::Perldoc::BaseTo\n\t\t   Base for Pod::Perldoc formatters\n\n       Pod::Perldoc::GetOptsOO\n\t\t   Customized option parser for Pod::Perldoc\n\n       Pod::Perldoc::ToANSI\n\t\t   Render Pod with ANSI color escapes\n\n       Pod::Perldoc::ToChecker\n\t\t   Let Perldoc check Pod for errors\n\n       Pod::Perldoc::ToMan\n\t\t   Let Perldoc render Pod as man pages\n\n       Pod::Perldoc::ToNroff\n\t\t   Let Perldoc convert Pod to nroff\n\n       Pod::Perldoc::ToPod\n\t\t   Let Perldoc render Pod as ... Pod!\n\n       Pod::Perldoc::ToRtf\n\t\t   Let Perldoc render Pod as RTF\n\n       Pod::Perldoc::ToTerm\n\t\t   Render Pod with terminal escapes\n\n       Pod::Perldoc::ToText\n\t\t   Let Perldoc render Pod as plaintext\n\n       Pod::Perldoc::ToTk\n\t\t   Let Perldoc use Tk::Pod to render Pod"
  manpageQuestion1: What is the primary purpose of the Pod::Perldoc module?
  manpageQuestion2: How can you convert a POD file to an HTML document using the Pod::Perldoc module?
  manpageQuestion3: What command would you use to generate man pages from a POD file using the Pod::Perldoc module?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nPod::Perldoc::ToXml\n\t\t   Let Perldoc render Pod as XML\n\n       Pod::Simple Framework for parsing Pod\n\n       Pod::Simple::Checker\n\t\t   Check the Pod syntax of a document\n\n       Pod::Simple::Debug\n\t\t   Put Pod::Simple into trace/debug mode\n\n       Pod::Simple::DumpAsText\n\t\t   Dump Pod-parsing events as text\n\n       Pod::Simple::DumpAsXML\n\t\t   Turn Pod into XML\n\n       Pod::Simple::HTML\n\t\t   Convert Pod to HTML\n\n       Pod::Simple::HTMLBatch\n\t\t   Convert several Pod files to several HTML files\n\n       Pod::Simple::JustPod\n\t\t   Just the Pod, the whole Pod, and nothing but the Pod\n\n       Pod::Simple::LinkSection\n\t\t   Represent \"section\" attributes of L codes\n\n       Pod::Simple::Methody\n\t\t   Turn Pod::Simple events into method calls\n\n       Pod::Simple::PullParser\n\t\t   A pull-parser interface to parsing Pod\n\n       Pod::Simple::PullParserEndToken\n\t\t   End-tokens from Pod::Simple::PullParser\n\n       Pod::Simple::PullParserStartToken\n\t\t   Start-tokens from Pod::Simple::PullParser\n\n       Pod::Simple::PullParserTextToken\n\t\t   Text-tokens from Pod::Simple::PullParser"
  manpageQuestion1: What is the primary purpose of the Pod::Simple framework according to the manpages?
  manpageQuestion2: How can you use Pod::Simple::DumpAsXML to convert a Pod file into XML format?
  manpageQuestion3: What is the function of Pod::Simple::HTMLBatch and how would you use it to convert multiple Pod files into HTML?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nPod::Simple::PullParserToken\n\t\t   Tokens from Pod::Simple::PullParser\n\n       Pod::Simple::RTF\n\t\t   Format Pod as RTF\n\n       Pod::Simple::Search\n\t\t   Find POD documents in directory trees\n\n       Pod::Simple::SimpleTree\n\t\t   Parse Pod into a simple parse tree\n\n       Pod::Simple::Subclassing\n\t\t   Write a formatter as a Pod::Simple subclass\n\n       Pod::Simple::Text\n\t\t   Format Pod as plaintext\n\n       Pod::Simple::TextContent\n\t\t   Get the text content of Pod\n\n       Pod::Simple::XHTML\n\t\t   Format Pod as validating XHTML\n\n       Pod::Simple::XMLOutStream\n\t\t   Turn Pod into XML\n\n       Pod::Text   Convert POD data to formatted text\n\n       Pod::Text::Color\n\t\t   Convert POD data to formatted color ASCII text\n\n       Pod::Text::Overstrike\n\t\t   Convert POD data to formatted overstrike text\n\n       Pod::Text::Termcap\n\t\t   Convert POD data to ASCII text with format escapes\n\n       Pod::Usage  Extracts POD documentation and shows usage information\n\n       SDBM_File   Tied access to sdbm files"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use Pod::Text to convert POD data into formatted ASCII text?
  manpageQuestion3: What is the function of Pod::Usage and when would you use it?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nSafe\t   Compile and execute code in restricted compartments\n\n       Scalar::Util\n\t\t   A selection of general-utility scalar subroutines\n\n       Search::Dict\n\t\t   Look - search for key in dictionary file\n\n       SelectSaver Save and restore selected file handle\n\n       SelfLoader  Load functions only on demand\n\n       Storable    Persistence for Perl data structures\n\n       Sub::Util   A selection of utility subroutines for subs and CODE\n\t\t   references\n\n       Symbol\t   Manipulate Perl symbols and their names\n\n       Sys::Hostname\n\t\t   Try every conceivable way to get hostname\n\n       Sys::Syslog Perl interface to the UNIX syslog(3) calls\n\n       Sys::Syslog::Win32\n\t\t   Win32 support for Sys::Syslog\n\n       TAP::Base   Base class that provides common functionality to\n\t\t   TAP::Parser\n\n       TAP::Formatter::Base\n\t\t   Base class for harness output delegates\n\n       TAP::Formatter::Color\n\t\t   Run Perl test scripts with color\n\n       TAP::Formatter::Console\n\t\t   Harness output delegate for default console output"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use the Sys::Syslog module to log a message to the system syslog?
  manpageQuestion3: What is the function of the Symbol module in perlmodlib and how can it be used to manipulate Perl symbols?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nTAP::Formatter::Console::ParallelSession\n\t\t   Harness output delegate for parallel console output\n\n       TAP::Formatter::Console::Session\n\t\t   Harness output delegate for default console output\n\n       TAP::Formatter::File\n\t\t   Harness output delegate for file output\n\n       TAP::Formatter::File::Session\n\t\t   Harness output delegate for file output\n\n       TAP::Formatter::Session\n\t\t   Abstract base class for harness output delegate\n\n       TAP::Harness\n\t\t   Run test scripts with statistics\n\n       TAP::Harness::Env\n\t\t   Parsing harness related environmental variables where\n\t\t   appropriate\n\n       TAP::Object Base class that provides common functionality to all\n\t\t   \"TAP::*\" modules\n\n       TAP::Parser Parse TAP output\n\n       TAP::Parser::Aggregator\n\t\t   Aggregate TAP::Parser results\n\n       TAP::Parser::Grammar\n\t\t   A grammar for the Test Anything Protocol.\n\n       TAP::Parser::Iterator\n\t\t   Base class for TAP source iterators\n\n       TAP::Parser::Iterator::Array\n\t\t   Iterator for array-based TAP sources"
  manpageQuestion1: What is the primary purpose of the TAP modules in Perl?
  manpageQuestion2: How would you use TAP::Harness to run test scripts and collect statistics?
  manpageQuestion3: Can you provide an example of using TAP::Parser to parse TAP output from test scripts?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nTAP::Parser::Iterator::Process\n\t\t   Iterator for process-based TAP sources\n\n       TAP::Parser::Iterator::Stream\n\t\t   Iterator for filehandle-based TAP sources\n\n       TAP::Parser::IteratorFactory\n\t\t   Figures out which SourceHandler objects to use for a given\n\t\t   Source\n\n       TAP::Parser::Multiplexer\n\t\t   Multiplex multiple TAP::Parsers\n\n       TAP::Parser::Result\n\t\t   Base class for TAP::Parser output objects\n\n       TAP::Parser::Result::Bailout\n\t\t   Bailout result token.\n\n       TAP::Parser::Result::Comment\n\t\t   Comment result token.\n\n       TAP::Parser::Result::Plan\n\t\t   Plan result token.\n\n       TAP::Parser::Result::Pragma\n\t\t   TAP pragma token.\n\n       TAP::Parser::Result::Test\n\t\t   Test result token.\n\n       TAP::Parser::Result::Unknown\n\t\t   Unknown result token.\n\n       TAP::Parser::Result::Version\n\t\t   TAP syntax version token.\n\n       TAP::Parser::Result::YAML\n\t\t   YAML result token.\n\n       TAP::Parser::ResultFactory\n\t\t   Factory for creating TAP::Parser output objects\n\n       TAP::Parser::Scheduler\n\t\t   Schedule tests during parallel testing"
  manpageQuestion1: What is the primary purpose of the TAP::Parser module and its related classes?
  manpageQuestion2: How can you create a TAP parser that processes test results from a filehandle?
  manpageQuestion3: What is the role of TAP::Parser::ResultFactory in the TAP parsing ecosystem?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nTAP::Parser::Scheduler::Job\n\t\t   A single testing job.\n\n       TAP::Parser::Scheduler::Spinner\n\t\t   A no-op job.\n\n       TAP::Parser::Source\n\t\t   A TAP source & meta data about it\n\n       TAP::Parser::SourceHandler\n\t\t   Base class for different TAP source handlers\n\n       TAP::Parser::SourceHandler::Executable\n\t\t   Stream output from an executable TAP source\n\n       TAP::Parser::SourceHandler::File\n\t\t   Stream TAP from a text file.\n\n       TAP::Parser::SourceHandler::Handle\n\t\t   Stream TAP from an IO::Handle or a GLOB.\n\n       TAP::Parser::SourceHandler::Perl\n\t\t   Stream TAP from a Perl executable\n\n       TAP::Parser::SourceHandler::RawTAP\n\t\t   Stream output from raw TAP in a scalar/array ref.\n\n       TAP::Parser::YAMLish::Reader\n\t\t   Read YAMLish data from iterator\n\n       TAP::Parser::YAMLish::Writer\n\t\t   Write YAMLish data\n\n       Term::ANSIColor\n\t\t   Color screen output using ANSI escape sequences\n\n       Term::Cap   Perl termcap interface\n\n       Term::Complete\n\t\t   Perl word completion module"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use Term::ANSIColor to colorize the output of a command in Perl?
  manpageQuestion3: Can you explain how to use TAP::Parser::SourceHandler::File to read and process TAP data from a text file?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nTerm::ReadLine\n\t\t   Perl interface to various \"readline\" packages.\n\n       Test\t   Provides a simple framework for writing test scripts\n\n       Test2\t   Framework for writing test tools that all work together.\n\n       Test2::API  Primary interface for writing Test2 based testing tools.\n\n       Test2::API::Breakage\n\t\t   What breaks at what version\n\n       Test2::API::Context\n\t\t   Object to represent a testing context.\n\n       Test2::API::Instance\n\t\t   Object used by Test2::API under the hood\n\n       Test2::API::InterceptResult\n\t\t   Representation of a list of events.\n\n       Test2::API::InterceptResult::Event\n\t\t   Representation of an event for use in\n\n       Test2::API::InterceptResult::Hub\n\t\t   Hub used by InterceptResult.\n\n       Test2::API::InterceptResult::Squasher\n\t\t   Encapsulation of the algorithm that\n\n       Test2::API::Stack\n\t\t   Object to manage a stack of Test2::Hub\n\n       Test2::Event\n\t\t   Base class for events\n\n       Test2::Event::Bail\n\t\t   Bailout!\n\n       Test2::Event::Diag\n\t\t   Diag event type"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How would you use Test2::API to create a testing tool that integrates with the Test2 framework?
  manpageQuestion3: Can you provide an example of using Test2::Event::Bail to handle a test failure in a Test2-based script?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nTest2::Event::Encoding\n\t\t   Set the encoding for the output stream\n\n       Test2::Event::Exception\n\t\t   Exception event\n\n       Test2::Event::Fail\n\t\t   Event for a simple failed assertion\n\n       Test2::Event::Generic\n\t\t   Generic event type.\n\n       Test2::Event::Note\n\t\t   Note event type\n\n       Test2::Event::Ok\n\t\t   Ok event type\n\n       Test2::Event::Pass\n\t\t   Event for a simple passing assertion\n\n       Test2::Event::Plan\n\t\t   The event of a plan\n\n       Test2::Event::Skip\n\t\t   Skip event type\n\n       Test2::Event::Subtest\n\t\t   Event for subtest types\n\n       Test2::Event::TAP::Version\n\t\t   Event for TAP version.\n\n       Test2::Event::V2\n\t\t   Second generation event.\n\n       Test2::Event::Waiting\n\t\t   Tell all procs/threads it is time to be done\n\n       Test2::EventFacet\n\t\t   Base class for all event facets.\n\n       Test2::EventFacet::About\n\t\t   Facet with event details.\n\n       Test2::EventFacet::Amnesty\n\t\t   Facet for assertion amnesty.\n\n       Test2::EventFacet::Assert\n\t\t   Facet representing an assertion."
  manpageQuestion1: What is the primary purpose of the Test2::Event module?
  manpageQuestion2: How would you use Test2::Event::Ok to indicate a successful assertion in a test?
  manpageQuestion3: Can you explain how the Test2::Event::Exception event is used in test scripting?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nTest2::EventFacet::Control\n\t\t   Facet for hub actions and behaviors.\n\n       Test2::EventFacet::Error\n\t\t   Facet for errors that need to be shown.\n\n       Test2::EventFacet::Hub\n\t\t   Facet for the hubs an event passes through.\n\n       Test2::EventFacet::Info\n\t\t   Facet for information a developer might care about.\n\n       Test2::EventFacet::Info::Table\n\t\t   Intermediary representation of a table.\n\n       Test2::EventFacet::Meta\n\t\t   Facet for meta-data\n\n       Test2::EventFacet::Parent\n\t\t   Facet for events contains other events\n\n       Test2::EventFacet::Plan\n\t\t   Facet for setting the plan\n\n       Test2::EventFacet::Render\n\t\t   Facet that dictates how to render an event.\n\n       Test2::EventFacet::Trace\n\t\t   Debug information for events\n\n       Test2::Formatter\n\t\t   Namespace for formatters.\n\n       Test2::Formatter::TAP\n\t\t   Standard TAP formatter\n\n       Test2::Hub  The conduit through which all events flow.\n\n       Test2::Hub::Interceptor\n\t\t   Hub used by interceptor to grab results."
  manpageQuestion1: What is the primary purpose of the Test2::EventFacet::Control facet?
  manpageQuestion2: How can you use Test2::Formatter::TAP to format test output in a TAP-compatible manner?
  manpageQuestion3: What is the role of Test2::Hub in the Test2 testing framework?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nTest2::Hub::Interceptor::Terminator\n\t\t   Exception class used by\n\n       Test2::Hub::Subtest\n\t\t   Hub used by subtests\n\n       Test2::IPC  Turn on IPC for threading or forking support.\n\n       Test2::IPC::Driver\n\t\t   Base class for Test2 IPC drivers.\n\n       Test2::IPC::Driver::Files\n\t\t   Temp dir + Files concurrency model.\n\n       Test2::Tools::Tiny\n\t\t   Tiny set of tools for unfortunate souls who cannot use\n\n       Test2::Transition\n\t\t   Transition notes when upgrading to Test2\n\n       Test2::Util Tools used by Test2 and friends.\n\n       Test2::Util::ExternalMeta\n\t\t   Allow third party tools to safely attach meta-data\n\n       Test2::Util::Facets2Legacy\n\t\t   Convert facet data to the legacy event API.\n\n       Test2::Util::HashBase\n\t\t   Build hash based classes.\n\n       Test2::Util::Trace\n\t\t   Legacy wrapper fro Test2::EventFacet::Trace.\n\n       Test::Builder\n\t\t   Backend for building test libraries\n\n       Test::Builder::Formatter\n\t\t   Test::Builder subclass of Test2::Formatter::TAP\n\n       Test::Builder::IO::Scalar\n\t\t   A copy of IO::Scalar for Test::Builder"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use Test2::IPC to enable IPC support for threading in a Perl test script?
  manpageQuestion3: Can you provide an example of using Test::Builder to create a test library that outputs TAP format?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nTest::Builder::Module\n\t\t   Base class for test modules\n\n       Test::Builder::Tester\n\t\t   Test testsuites that have been built with\n\n       Test::Builder::Tester::Color\n\t\t   Turn on colour in Test::Builder::Tester\n\n       Test::Builder::TodoDiag\n\t\t   Test::Builder subclass of Test2::Event::Diag\n\n       Test::Harness\n\t\t   Run Perl standard test scripts with statistics\n\n       Test::Harness::Beyond\n\t\t   Beyond make test\n\n       Test::More  Yet another framework for writing test scripts\n\n       Test::Simple\n\t\t   Basic utilities for writing tests.\n\n       Test::Tester\n\t\t   Ease testing test modules built with Test::Builder\n\n       Test::Tester::Capture\n\t\t   Help testing test modules built with Test::Builder\n\n       Test::Tester::CaptureRunner\n\t\t   Help testing test modules built with Test::Builder\n\n       Test::Tutorial\n\t\t   A tutorial about writing really basic tests\n\n       Test::use::ok\n\t\t   Alternative to Test::More::use_ok\n\n       Text::Abbrev\n\t\t   Abbrev - create an abbreviation table from a list"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use Test::Harness to run Perl test scripts and generate statistics?
  manpageQuestion3: Can you provide an example of using Test::More to check if a module is loaded correctly?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nText::Balanced\n\t\t   Extract delimited text sequences from strings.\n\n       Text::ParseWords\n\t\t   Parse text into an array of tokens or array of arrays\n\n       Text::Tabs  Expand and unexpand tabs like unix expand(1) and\n\t\t   unexpand(1)\n\n       Text::Wrap  Line wrapping to form simple paragraphs\n\n       Thread\t   Manipulate threads in Perl (for old code only)\n\n       Thread::Queue\n\t\t   Thread-safe queues\n\n       Thread::Semaphore\n\t\t   Thread-safe semaphores\n\n       Tie::Array  Base class for tied arrays\n\n       Tie::File   Access the lines of a disk file via a Perl array\n\n       Tie::Handle Base class definitions for tied handles\n\n       Tie::Hash   Base class definitions for tied hashes\n\n       Tie::Hash::NamedCapture\n\t\t   Named regexp capture buffers\n\n       Tie::Memoize\n\t\t   Add data to hash when needed\n\n       Tie::RefHash\n\t\t   Use references as hash keys\n\n       Tie::Scalar Base class definitions for tied scalars\n\n       Tie::StdHandle\n\t\t   Base class definitions for tied handles\n\n       Tie::SubstrHash\n\t\t   Fixed-table-size, fixed-key-length hashing"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How would you use the Text::Tabs module to expand tabs in a string?
  manpageQuestion3: Can you provide an example of using the Tie::Array module to create a tied array in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nTime::HiRes High resolution alarm, sleep, gettimeofday, interval timers\n\n       Time::Local Efficiently compute time from local and GMT time\n\n       Time::Piece Object Oriented time objects\n\n       Time::Seconds\n\t\t   A simple API to convert seconds to other date values\n\n       Time::gmtime\n\t\t   By-name interface to Perl's built-in gmtime() function\n\n       Time::localtime\n\t\t   By-name interface to Perl's built-in localtime() function\n\n       Time::tm    Internal object used by Time::gmtime and Time::localtime\n\n       UNIVERSAL   Base class for ALL classes (blessed references)\n\n       Unicode::Collate\n\t\t   Unicode Collation Algorithm\n\n       Unicode::Collate::CJK::Big5\n\t\t   Weighting CJK Unified Ideographs\n\n       Unicode::Collate::CJK::GB2312\n\t\t   Weighting CJK Unified Ideographs\n\n       Unicode::Collate::CJK::JISX0208\n\t\t   Weighting JIS KANJI for Unicode::Collate\n\n       Unicode::Collate::CJK::Korean\n\t\t   Weighting CJK Unified Ideographs\n\n       Unicode::Collate::CJK::Pinyin\n\t\t   Weighting CJK Unified Ideographs"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use Time::HiRes to set an alarm that triggers after 5 seconds?
  manpageQuestion3: What is the function of Unicode::Collate::CJK::Big5 and how would you use it in a Perl script?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nUnicode::Collate::CJK::Stroke\n\t\t   Weighting CJK Unified Ideographs\n\n       Unicode::Collate::CJK::Zhuyin\n\t\t   Weighting CJK Unified Ideographs\n\n       Unicode::Collate::Locale\n\t\t   Linguistic tailoring for DUCET via Unicode::Collate\n\n       Unicode::Normalize\n\t\t   Unicode Normalization Forms\n\n       Unicode::UCD\n\t\t   Unicode character database\n\n       User::grent By-name interface to Perl's built-in getgr*() functions\n\n       User::pwent By-name interface to Perl's built-in getpw*() functions\n\n       VMS::DCLsym Perl extension to manipulate DCL symbols\n\n       VMS::Filespec\n\t\t   Convert between VMS and Unix file specification syntax\n\n       VMS::Stdio  Standard I/O functions via VMS extensions\n\n       Win32\t   Interfaces to some Win32 API Functions\n\n       Win32API::File\n\t\t   Low-level access to Win32 system API calls for files/dirs.\n\n       Win32CORE   Win32 CORE function stubs\n\n       XS::APItest Test the perl C API\n\n       XS::Typemap Module to test the XS typemaps distributed with perl"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use the VMS::Filespec module to convert a VMS file specification to a Unix-style file specification?
  manpageQuestion3: What is the function of the Unicode::Normalize module in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nXSLoader    Dynamically load C libraries into Perl code\n\n       autodie::Scope::Guard\n\t\t   Wrapper class for calling subs at end of scope\n\n       autodie::Scope::GuardStack\n\t\t   Hook stack for managing scopes via %^H\n\n       autodie::Util\n\t\t   Internal Utility subroutines for autodie and Fatal\n\n       version::Internals\n\t\t   Perl extension for Version Objects\n\n       To find out all modules installed on your system, including those\n       without documentation or outside the standard release, just use the\n       following command (under the default win32 shell, double quotes should\n       be used instead of single quotes).\n\n\t   % perl -MFile::Find=find -MFile::Spec::Functions -Tlwe \\\n\t     'find { wanted => sub { print canonpath $_ if /\\.pm\\z/ },\n\t     no_chdir => 1 }, @INC'\n\n       (The -T is here to prevent '.' from being listed in @INC.)  They should\n       all have their own documentation installed and accessible via your\n       system man(1) command.  If you do not have a find program, you can use\n       the Perl find2perl program instead, which generates Perl code as output\n       you can run through perl.  If you have a man program but it doesn't\n       find your modules, you'll have to fix your manpath.  See perl for\n       details.  If you have no system man command, you might try the perldoc\n       program."
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can I find all installed Perl modules on my system using perlmodlib?
  manpageQuestion3: What is the role of the autodie::Scope::Guard module within perlmodlib?

- prompt: |-
    You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.



    Manpage text:

    Note also that the command "perldoc perllocal" gives you a (possibly
           incomplete) list of the modules that have been further installed on
           your system. (The perllocal.pod file is updated by the standard
           MakeMaker install process.)

       Extension Modules
           Extension modules are written in C (or a mix of Perl and C).  They are
           usually dynamically loaded into Perl if and when you need them, but may
           also be linked in statically.  Supported extension modules include
           Socket, Fcntl, and POSIX.

           Many popular C extension modules do not come bundled (at least, not
           completely) due to their sizes, volatility, or simply lack of time for
           adequate testing and configuration across the multitude of platforms on
           which Perl was beta-tested.  You are encouraged to look for them on
           CPAN (described below), or using web search engines like Google or
           DuckDuckGo.

    CPAN
           CPAN stands for Comprehensive Perl Archive Network; it's a globally
           replicated trove of Perl materials, including documentation, style
           guides, tricks and traps, alternate ports to non-Unix systems and
           occasional binary distributions for these.   Search engines for CPAN
           can be found at https://www.cpan.org/
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can I find information about modules that have been installed on my system using perlmodlib?
  manpageQuestion3: What are some common uses of extension modules in Perl according to the manpage?

- prompt: |-
    You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.



    Manpage text:

    Most importantly, CPAN includes around a thousand unbundled modules,
           some of which require a C compiler to build.  Major categories of
           modules are:

           •   Language Extensions and Documentation Tools

           •   Development Support

           •   Operating System Interfaces

           •   Networking, Device Control (modems) and InterProcess Communication

           •   Data Types and Data Type Utilities

           •   Database Interfaces

           •   User Interfaces

           •   Interfaces to / Emulations of Other Programming Languages

           •   File Names, File Systems and File Locking (see also File Handles)

           •   String Processing, Language Text Processing, Parsing, and Searching

           •   Option, Argument, Parameter, and Configuration File Processing

           •   Internationalization and Locale

           •   Authentication, Security, and Encryption

           •   World Wide Web, HTML, HTTP, CGI, MIME

           •   Server and Daemon Utilities

           •   Archiving and Compression
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can perlmodlib be used to manage modules related to internationalization and locale settings in Perl programs?
  manpageQuestion3: Can you provide an example of using perlmodlib to handle a module that requires a C compiler for building?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\n•   Images, Pixmap and Bitmap Manipulation, Drawing, and Graphing\n\n       •   Mail and Usenet News\n\n       •   Control Flow Utilities (callbacks and exceptions etc)\n\n       •   File Handle and Input/Output Stream Utilities\n\n       •   Miscellaneous Modules\n\n       The list of the registered CPAN sites follows.  Please note that the\n       sorting order is alphabetical on fields:\n\n       Continent\n\t  |\n\t  |-->Country\n\t\t|\n\t\t|-->[state/province]\n\t\t\t  |\n\t\t\t  |-->ftp\n\t\t\t  |\n\t\t\t  |-->[http]\n\n       and thus the North American servers happen to be listed between the\n       European and the South American sites.\n\n       Registered CPAN sites\n\n   Africa\n       South Africa\n\t     http://mirror.is.co.za/pub/cpan/\n\t     ftp://ftp.is.co.za/pub/cpan/\n\t     http://cpan.mirror.ac.za/\n\t     ftp://cpan.mirror.ac.za/\n\t     http://cpan.saix.net/\n\t     ftp://ftp.saix.net/pub/CPAN/\n\t     http://ftp.wa.co.za/pub/CPAN/\n\t     ftp://ftp.wa.co.za/pub/CPAN/\n\n       Uganda\n\t     http://mirror.ucu.ac.ug/cpan/\n\n       Zimbabwe\n\t     http://mirror.zol.co.zw/CPAN/\n\t     ftp://mirror.zol.co.zw/CPAN/"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you access the CPAN mirror for South Africa using the perlmodlib resource?
  manpageQuestion3: What is the structure of the CPAN site listings provided in the manpage for perlmodlib?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nAsia\n       Bangladesh\n\t     http://mirror.dhakacom.com/CPAN/\n\t     ftp://mirror.dhakacom.com/CPAN/\n\n       China\n\t     http://cpan.communilink.net/\n\t     http://ftp.cuhk.edu.hk/pub/packages/perl/CPAN/\n\t     ftp://ftp.cuhk.edu.hk/pub/packages/perl/CPAN/\n\t     http://mirrors.hust.edu.cn/CPAN/\n\t     http://mirrors.neusoft.edu.cn/cpan/\n\t     http://mirror.lzu.edu.cn/CPAN/\n\t     http://mirrors.163.com/cpan/\n\t     http://mirrors.sohu.com/CPAN/\n\t     http://mirrors.ustc.edu.cn/CPAN/\n\t     ftp://mirrors.ustc.edu.cn/CPAN/\n\t     http://mirrors.xmu.edu.cn/CPAN/\n\t     ftp://mirrors.xmu.edu.cn/CPAN/\n\t     http://mirrors.zju.edu.cn/CPAN/\n\n       India\n\t     http://cpan.excellmedia.net/\n\t     http://perlmirror.indialinks.com/\n\n       Indonesia\n\t     http://kambing.ui.ac.id/cpan/\n\t     http://cpan.pesat.net.id/\n\t     http://mirror.poliwangi.ac.id/CPAN/\n\t     http://kartolo.sby.datautama.net.id/CPAN/\n\t     http://mirror.wanxp.id/cpan/\n\n       Iran\n\t     http://mirror.yazd.ac.ir/cpan/\n\n       Israel\n\t     http://biocourse.weizmann.ac.il/CPAN/"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can one access Perl module mirrors in India using the perlmodlib resource?
  manpageQuestion3: What are some of the commonly used Perl module mirrors for China according to the perlmodlib resource?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nJapan\n\t     http://ftp.jaist.ac.jp/pub/CPAN/\n\t     ftp://ftp.jaist.ac.jp/pub/CPAN/\n\t     http://mirror.jre655.com/CPAN/\n\t     ftp://mirror.jre655.com/CPAN/\n\t     ftp://ftp.kddilabs.jp/CPAN/\n\t     http://ftp.nara.wide.ad.jp/pub/CPAN/\n\t     ftp://ftp.nara.wide.ad.jp/pub/CPAN/\n\t     http://ftp.riken.jp/lang/CPAN/\n\t     ftp://ftp.riken.jp/lang/CPAN/\n\t     ftp://ftp.u-aizu.ac.jp/pub/CPAN/\n\t     http://ftp.yz.yamagata-u.ac.jp/pub/lang/cpan/\n\t     ftp://ftp.yz.yamagata-u.ac.jp/pub/lang/cpan/\n\n       Kazakhstan\n\t     http://mirror.neolabs.kz/CPAN/\n\t     ftp://mirror.neolabs.kz/CPAN/\n\n       Philippines\n\t     http://mirror.pregi.net/CPAN/\n\t     ftp://mirror.pregi.net/CPAN/\n\t     http://mirror.rise.ph/cpan/\n\t     ftp://mirror.rise.ph/cpan/\n\n       Qatar\n\t     http://mirror.qnren.qa/CPAN/\n\t     ftp://mirror.qnren.qa/CPAN/\n\n       Republic of Korea\n\t     http://cpan.mirror.cdnetworks.com/\n\t     ftp://cpan.mirror.cdnetworks.com/CPAN/\n\t     http://ftp.kaist.ac.kr/pub/CPAN/\n\t     ftp://ftp.kaist.ac.kr/CPAN/\n\t     http://ftp.kr.freebsd.org/pub/CPAN/\n\t     ftp://ftp.kr.freebsd.org/pub/CPAN/\n\t     http://mirror.navercorp.com/CPAN/\n\t     http://ftp.neowiz.com/CPAN/\n\t     ftp://ftp.neowiz.com/CPAN/"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use perlmodlib to find CPAN mirrors in the Philippines?
  manpageQuestion3: Can you provide an example of using perlmodlib to access a CPAN mirror in Kazakhstan?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nSingapore\n\t     http://cpan.mirror.choon.net/\n\t     http://mirror.0x.sg/CPAN/\n\t     ftp://mirror.0x.sg/CPAN/\n\n       Taiwan\n\t     http://cpan.cdpa.nsysu.edu.tw/Unix/Lang/CPAN/\n\t     ftp://cpan.cdpa.nsysu.edu.tw/Unix/Lang/CPAN/\n\t     http://cpan.stu.edu.tw/\n\t     ftp://ftp.stu.edu.tw/CPAN/\n\t     http://ftp.yzu.edu.tw/CPAN/\n\t     ftp://ftp.yzu.edu.tw/CPAN/\n\t     http://cpan.nctu.edu.tw/\n\t     ftp://cpan.nctu.edu.tw/\n\t     http://ftp.ubuntu-tw.org/mirror/CPAN/\n\t     ftp://ftp.ubuntu-tw.org/mirror/CPAN/\n\n       Turkey\n\t     http://cpan.ulak.net.tr/\n\t     ftp://ftp.ulak.net.tr/pub/perl/CPAN/\n\t     http://mirror.vit.com.tr/mirror/CPAN/\n\t     ftp://mirror.vit.com.tr/CPAN/\n\n       Viet Nam\n\t     http://mirrors.digipower.vn/CPAN/\n\t     http://mirror.downloadvn.com/cpan/\n\t     http://mirrors.vinahost.vn/CPAN/\n\n   Europe\n       Austria\n\t     http://cpan.inode.at/\n\t     ftp://cpan.inode.at/\n\t     http://mirror.easyname.at/cpan/\n\t     ftp://mirror.easyname.at/cpan/\n\t     http://gd.tuwien.ac.at/languages/perl/CPAN/\n\t     ftp://gd.tuwien.ac.at/pub/CPAN/"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can one access Perl CPAN mirrors in Europe, specifically in Austria?
  manpageQuestion3: Can you provide an example of accessing a Perl CPAN mirror in Vietnam?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nBelarus\n\t     http://ftp.byfly.by/pub/CPAN/\n\t     ftp://ftp.byfly.by/pub/CPAN/\n\t     http://mirror.datacenter.by/pub/CPAN/\n\t     ftp://mirror.datacenter.by/pub/CPAN/\n\n       Belgium\n\t     http://ftp.belnet.be/ftp.cpan.org/\n\t     ftp://ftp.belnet.be/mirror/ftp.cpan.org/\n\t     http://cpan.cu.be/\n\t     http://lib.ugent.be/CPAN/\n\t     http://cpan.weepeetelecom.be/\n\n       Bosnia and Herzegovina\n\t     http://cpan.mirror.ba/\n\t     ftp://ftp.mirror.ba/CPAN/\n\n       Bulgaria\n\t     http://mirrors.neterra.net/CPAN/\n\t     ftp://mirrors.neterra.net/CPAN/\n\t     http://mirrors.netix.net/CPAN/\n\t     ftp://mirrors.netix.net/CPAN/\n\n       Croatia\n\t     http://ftp.carnet.hr/pub/CPAN/\n\t     ftp://ftp.carnet.hr/pub/CPAN/\n\n       Czech Republic\n\t     http://mirror.dkm.cz/cpan/\n\t     ftp://mirror.dkm.cz/cpan/\n\t     ftp://ftp.fi.muni.cz/pub/CPAN/\n\t     http://mirrors.nic.cz/CPAN/\n\t     ftp://mirrors.nic.cz/pub/CPAN/\n\t     http://cpan.mirror.vutbr.cz/\n\t     ftp://mirror.vutbr.cz/cpan/\n\n       Denmark\n\t     http://www.cpan.dk/\n\t     http://mirrors.dotsrc.org/cpan/\n\t     ftp://mirrors.dotsrc.org/cpan/"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use perlmodlib to locate and access Perl module libraries in different regions?
  manpageQuestion3: Can you provide an example of how to use perlmodlib to retrieve Perl module information from a specific mirror server?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nFinland\n\t     ftp://ftp.funet.fi/pub/languages/perl/CPAN/\n\n       France\n\t     http://ftp.ciril.fr/pub/cpan/\n\t     ftp://ftp.ciril.fr/pub/cpan/\n\t     http://distrib-coffee.ipsl.jussieu.fr/pub/mirrors/cpan/\n\t     ftp://distrib-coffee.ipsl.jussieu.fr/pub/mirrors/cpan/\n\t     http://ftp.lip6.fr/pub/perl/CPAN/\n\t     ftp://ftp.lip6.fr/pub/perl/CPAN/\n\t     http://mirror.ibcp.fr/pub/CPAN/\n\t     ftp://ftp.oleane.net/pub/CPAN/\n\t     http://cpan.mirrors.ovh.net/ftp.cpan.org/\n\t     ftp://cpan.mirrors.ovh.net/ftp.cpan.org/\n\t     http://cpan.enstimac.fr/\n\n       Germany\n\t     http://mirror.23media.de/cpan/\n\t     ftp://mirror.23media.de/cpan/\n\t     http://artfiles.org/cpan.org/\n\t     ftp://artfiles.org/cpan.org/\n\t     http://mirror.bibleonline.ru/cpan/\n\t     http://mirror.checkdomain.de/CPAN/\n\t     ftp://mirror.checkdomain.de/CPAN/\n\t     http://cpan.noris.de/\n\t     http://mirror.de.leaseweb.net/CPAN/\n\t     ftp://mirror.de.leaseweb.net/CPAN/\n\t     http://cpan.mirror.euserv.net/\n\t     ftp://mirror.euserv.net/cpan/\n\t     http://ftp-stud.hs-esslingen.de/pub/Mirrors/CPAN/\n\t     ftp://mirror.fraunhofer.de/CPAN/\n\t     ftp://ftp.freenet.de/pub/ftp.cpan.org/pub/CPAN/\n\t     http://ftp.hosteurope.de/pub/CPAN/\n\t     ftp://ftp.hosteurope.de/pub/CPAN/\n\t     ftp://ftp.fu-berlin.de/unix/languages/perl/\n\t     http://ftp.gwdg.de/pub/languages/perl/CPAN/\n\t     ftp://ftp.gwdg.de/pub/languages/perl/CPAN/\n\t     http://ftp.hawo.stw.uni-erlangen.de/CPAN/\n\t     ftp://ftp.hawo.stw.uni-erlangen.de/CPAN/\n\t     http://cpan.mirror.iphh.net/\n\t     ftp://cpan.mirror.iphh.net/pub/CPAN/\n\t     ftp://ftp.mpi-inf.mpg.de/pub/perl/CPAN/\n\t     http://cpan.netbet.org/\n\t     http://mirror.netcologne.de/cpan/\n\t     ftp://mirror.netcologne.de/cpan/\n\t     ftp://mirror.petamem.com/CPAN/\n\t     http://www.planet-elektronik.de/CPAN/\n\t     http://ftp.halifax.rwth-aachen.de/cpan/\n\t     ftp://ftp.halifax.rwth-aachen.de/cpan/\n\t     http://mirror.softaculous.com/cpan/\n\t     http://ftp.u-tx.net/CPAN/\n\t     ftp://ftp.u-tx.net/CPAN/\n\t     http://mirror.reismil.ch/CPAN/"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can one access Perl module libraries from different countries using the perlmodlib resource?
  manpageQuestion3: Can you provide an example of using the perlmodlib resource to locate a Perl module library in Germany?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nGreece\n\t     http://cpan.cc.uoc.gr/mirrors/CPAN/\n\t     ftp://ftp.cc.uoc.gr/mirrors/CPAN/\n\t     http://ftp.ntua.gr/pub/lang/perl/\n\t     ftp://ftp.ntua.gr/pub/lang/perl/\n\n       Hungary\n\t     http://mirror.met.hu/CPAN/\n\n       Ireland\n\t     http://ftp.heanet.ie/mirrors/ftp.perl.org/pub/CPAN/\n\t     ftp://ftp.heanet.ie/mirrors/ftp.perl.org/pub/CPAN/\n\n       Italy\n\t     http://bo.mirror.garr.it/mirrors/CPAN/\n\t     ftp://ftp.eutelia.it/CPAN_Mirror/\n\t     http://cpan.panu.it/\n\t     ftp://ftp.panu.it/pub/mirrors/perl/CPAN/\n\t     http://cpan.muzzy.it/\n\n       Latvia\n\t     http://kvin.lv/pub/CPAN/\n\n       Lithuania\n\t     http://ftp.litnet.lt/pub/CPAN/\n\t     ftp://ftp.litnet.lt/pub/CPAN/\n\n       Moldova\n\t     http://mirror.as43289.net/pub/CPAN/\n\t     ftp://mirror.as43289.net/pub/CPAN/\n\n       Netherlands\n\t     http://cpan.cs.uu.nl/\n\t     ftp://ftp.cs.uu.nl/pub/CPAN/\n\t     http://mirror.nl.leaseweb.net/CPAN/\n\t     ftp://mirror.nl.leaseweb.net/CPAN/\n\t     http://ftp.nluug.nl/languages/perl/CPAN/\n\t     ftp://ftp.nluug.nl/pub/languages/perl/CPAN/\n\t     http://mirror.transip.net/CPAN/\n\t     ftp://mirror.transip.net/CPAN/\n\t     http://cpan.mirror.triple-it.nl/\n\t     http://ftp.tudelft.nl/cpan/\n\t     ftp://ftp.tudelft.nl/pub/CPAN/\n\t     ftp://download.xs4all.nl/pub/mirror/CPAN/"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use perlmodlib to find the latest version of a Perl module available in the Netherlands mirror?
  manpageQuestion3: Can you provide an example of using perlmodlib to retrieve the list of available Perl modules from the Latvia mirror?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nNorway\n\t     http://cpan.uib.no/\n\t     ftp://cpan.uib.no/pub/CPAN/\n\t     ftp://ftp.uninett.no/pub/languages/perl/CPAN/\n\t     http://cpan.vianett.no/\n\n       Poland\n\t     http://ftp.agh.edu.pl/CPAN/\n\t     ftp://ftp.agh.edu.pl/CPAN/\n\t     http://ftp.piotrkosoft.net/pub/mirrors/CPAN/\n\t     ftp://ftp.piotrkosoft.net/pub/mirrors/CPAN/\n\t     ftp://ftp.ps.pl/pub/CPAN/\n\t     http://sunsite.icm.edu.pl/pub/CPAN/\n\t     ftp://sunsite.icm.edu.pl/pub/CPAN/\n\n       Portugal\n\t     http://cpan.dcc.fc.up.pt/\n\t     http://mirrors.fe.up.pt/pub/CPAN/\n\t     http://cpan.perl-hackers.net/\n\t     http://cpan.perl.pt/\n\n       Romania\n\t     http://mirrors.hostingromania.ro/cpan.org/\n\t     ftp://ftp.lug.ro/CPAN/\n\t     http://mirrors.m247.ro/CPAN/\n\t     http://mirrors.evowise.com/CPAN/\n\t     http://mirrors.teentelecom.net/CPAN/\n\t     ftp://mirrors.teentelecom.net/CPAN/\n\t     http://mirrors.xservers.ro/CPAN/\n\n       Russian Federation\n\t     ftp://ftp.aha.ru/CPAN/\n\t     http://cpan.rinet.ru/\n\t     ftp://cpan.rinet.ru/pub/mirror/CPAN/\n\t     http://cpan-mirror.rbc.ru/pub/CPAN/\n\t     http://mirror.rol.ru/CPAN/\n\t     http://cpan.uni-altai.ru/\n\t     http://cpan.webdesk.ru/\n\t     ftp://cpan.webdesk.ru/cpan/\n\t     http://mirror.yandex.ru/mirrors/cpan/\n\t     ftp://mirror.yandex.ru/mirrors/cpan/"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use perlmodlib to find CPAN mirrors in Poland?
  manpageQuestion3: Can you provide an example of accessing a CPAN mirror in Romania using perlmodlib?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nSerbia\n\t     http://mirror.sbb.rs/CPAN/\n\t     ftp://mirror.sbb.rs/CPAN/\n\n       Slovakia\n\t     http://cpan.lnx.sk/\n\t     http://tux.rainside.sk/CPAN/\n\t     ftp://tux.rainside.sk/CPAN/\n\n       Slovenia\n\t     http://ftp.arnes.si/software/perl/CPAN/\n\t     ftp://ftp.arnes.si/software/perl/CPAN/\n\n       Spain\n\t     http://mirrors.evowise.com/CPAN/\n\t     http://osl.ugr.es/CPAN/\n\t     http://ftp.rediris.es/mirror/CPAN/\n\t     ftp://ftp.rediris.es/mirror/CPAN/\n\n       Sweden\n\t     http://ftp.acc.umu.se/mirror/CPAN/\n\t     ftp://ftp.acc.umu.se/mirror/CPAN/\n\n       Switzerland\n\t     http://www.pirbot.com/mirrors/cpan/\n\t     http://mirror.switch.ch/ftp/mirror/CPAN/\n\t     ftp://mirror.switch.ch/mirror/CPAN/\n\n       Ukraine\n\t     http://cpan.ip-connect.vn.ua/\n\t     ftp://cpan.ip-connect.vn.ua/mirror/cpan/\n\n       United Kingdom\n\t     http://cpan.mirror.anlx.net/\n\t     ftp://ftp.mirror.anlx.net/CPAN/\n\t     http://mirror.bytemark.co.uk/CPAN/\n\t     ftp://mirror.bytemark.co.uk/CPAN/\n\t     http://mirrors.coreix.net/CPAN/\n\t     http://cpan.etla.org/\n\t     ftp://cpan.etla.org/pub/CPAN/\n\t     http://cpan.cpantesters.org/\n\t     http://mirror.sax.uk.as61049.net/CPAN/\n\t     http://mirror.sov.uk.goscomb.net/CPAN/\n\t     http://www.mirrorservice.org/sites/cpan.perl.org/CPAN/\n\t     ftp://ftp.mirrorservice.org/sites/cpan.perl.org/CPAN/\n\t     http://mirror.ox.ac.uk/sites/www.cpan.org/\n\t     ftp://mirror.ox.ac.uk/sites/www.cpan.org/\n\t     http://ftp.ticklers.org/pub/CPAN/\n\t     ftp://ftp.ticklers.org/pub/CPAN/\n\t     http://cpan.mirrors.uk2.net/\n\t     ftp://mirrors.uk2.net/pub/CPAN/\n\t     http://mirror.ukhost4u.com/CPAN/"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use perlmodlib to find Perl module libraries in different regions?
  manpageQuestion3: Can you provide an example of how to access Perl module libraries for the United Kingdom using perlmodlib?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nNorth America\n       Canada\n\t     http://CPAN.mirror.rafal.ca/\n\t     ftp://CPAN.mirror.rafal.ca/pub/CPAN/\n\t     http://mirror.csclub.uwaterloo.ca/CPAN/\n\t     ftp://mirror.csclub.uwaterloo.ca/CPAN/\n\t     http://mirrors.gossamer-threads.com/CPAN/\n\t     http://mirror.its.dal.ca/cpan/\n\t     ftp://mirror.its.dal.ca/cpan/\n\t     ftp://ftp.ottix.net/pub/CPAN/\n\n       Costa Rica\n\t     http://mirrors.ucr.ac.cr/CPAN/\n\n       Mexico\n\t     http://www.msg.com.mx/CPAN/\n\t     ftp://ftp.msg.com.mx/pub/CPAN/\n\n       United States\n\t   Alabama\n\t\t     http://mirror.teklinks.com/CPAN/\n\n\t   Arizona\n\t\t     http://mirror.n5tech.com/CPAN/\n\t\t     http://mirrors.namecheap.com/CPAN/\n\t\t     ftp://mirrors.namecheap.com/CPAN/\n\n\t   California\n\t\t     http://cpan.develooper.com/\n\t\t     http://httpupdate127.cpanel.net/CPAN/\n\t\t     http://mirrors.sonic.net/cpan/\n\t\t     ftp://mirrors.sonic.net/cpan/\n\t\t     http://www.perl.com/CPAN/\n\t\t     http://cpan.yimg.com/\n\n\t   Idaho\n\t\t     http://mirrors.syringanetworks.net/CPAN/\n\t\t     ftp://mirrors.syringanetworks.net/CPAN/"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you access Perl module archives in Mexico using the perlmodlib resource?
  manpageQuestion3: What are the most commonly used mirror servers for Perl module distribution in California according to the perlmodlib manpage?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nIllinois\n\t\t     http://cpan.mirrors.hoobly.com/\n\t\t     http://mirror.team-cymru.org/CPAN/\n\t\t     ftp://mirror.team-cymru.org/CPAN/\n\n\t   Indiana\n\t\t     http://cpan.netnitco.net/\n\t\t     ftp://cpan.netnitco.net/pub/mirrors/CPAN/\n\t\t     ftp://ftp.uwsg.iu.edu/pub/perl/CPAN/\n\n\t   Kansas\n\t\t     http://mirrors.concertpass.com/cpan/\n\n\t   Massachusetts\n\t\t     http://mirrors.ccs.neu.edu/CPAN/\n\n\t   Michigan\n\t\t     http://cpan.cse.msu.edu/\n\t\t     ftp://cpan.cse.msu.edu/\n\t\t     http://httpupdate118.cpanel.net/CPAN/\n\t\t     http://mirrors-usa.go-parts.com/cpan/\n\t\t     http://ftp.wayne.edu/CPAN/\n\t\t     ftp://ftp.wayne.edu/CPAN/\n\n\t   New Hampshire\n\t\t     http://mirror.metrocast.net/cpan/\n\n\t   New Jersey\n\t\t     http://mirror.datapipe.net/CPAN/\n\t\t     ftp://mirror.datapipe.net/pub/CPAN/\n\t\t     http://www.hoovism.com/CPAN/\n\t\t     ftp://ftp.hoovism.com/CPAN/\n\t\t     http://cpan.mirror.nac.net/\n\n\t   New York\n\t\t     http://mirror.cc.columbia.edu/pub/software/cpan/\n\t\t     ftp://mirror.cc.columbia.edu/pub/software/cpan/\n\t\t     http://cpan.belfry.net/\n\t\t     http://cpan.erlbaum.net/\n\t\t     ftp://cpan.erlbaum.net/CPAN/\n\t\t     http://cpan.hexten.net/\n\t\t     ftp://cpan.hexten.net/\n\t\t     http://mirror.nyi.net/CPAN/\n\t\t     ftp://mirror.nyi.net/pub/CPAN/\n\t\t     http://noodle.portalus.net/CPAN/\n\t\t     ftp://noodle.portalus.net/CPAN/\n\t\t     http://mirrors.rit.edu/CPAN/\n\t\t     ftp://mirrors.rit.edu/CPAN/"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use perlmodlib to access and manage Perl modules on a macOS system?
  manpageQuestion3: Can you provide an example of how to configure perlmodlib to use a specific CPAN mirror for module installation?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nNorth Carolina\n\t\t     http://httpupdate140.cpanel.net/CPAN/\n\t\t     http://mirrors.ibiblio.org/CPAN/\n\n\t   Oregon\n\t\t     http://ftp.osuosl.org/pub/CPAN/\n\t\t     ftp://ftp.osuosl.org/pub/CPAN/\n\t\t     http://mirror.uoregon.edu/CPAN/\n\n\t   Pennsylvania\n\t\t     http://cpan.pair.com/\n\t\t     ftp://cpan.pair.com/pub/CPAN/\n\t\t     http://cpan.mirrors.ionfish.org/\n\n\t   South Carolina\n\t\t     http://cpan.mirror.clemson.edu/\n\n\t   Texas\n\t\t     http://mirror.uta.edu/CPAN/\n\n\t   Utah\n\t\t     http://cpan.cs.utah.edu/\n\t\t     ftp://cpan.cs.utah.edu/CPAN/\n\t\t     ftp://mirror.xmission.com/CPAN/\n\n\t   Virginia\n\t\t     http://mirror.cogentco.com/pub/CPAN/\n\t\t     ftp://mirror.cogentco.com/pub/CPAN/\n\t\t     http://mirror.jmu.edu/pub/CPAN/\n\t\t     ftp://mirror.jmu.edu/pub/CPAN/\n\t\t     http://mirror.us.leaseweb.net/CPAN/\n\t\t     ftp://mirror.us.leaseweb.net/CPAN/\n\n\t   Washington\n\t\t     http://cpan.llarian.net/\n\t\t     ftp://cpan.llarian.net/pub/CPAN/\n\n\t   Wisconsin\n\t\t     http://cpan.mirrors.tds.net/\n\t\t     ftp://cpan.mirrors.tds.net/pub/CPAN/"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How would you use perlmodlib to configure Perl module repositories on a macOS system?
  manpageQuestion3: Can you provide an example of using perlmodlib to set up a custom CPAN mirror for Perl module downloads?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nOceania\n       Australia\n\t     http://mirror.as24220.net/pub/cpan/\n\t     ftp://mirror.as24220.net/pub/cpan/\n\t     http://cpan.mirrors.ilisys.com.au/\n\t     http://cpan.mirror.digitalpacific.com.au/\n\t     ftp://mirror.internode.on.net/pub/cpan/\n\t     http://mirror.optusnet.com.au/CPAN/\n\t     http://cpan.mirror.serversaustralia.com.au/\n\t     http://cpan.uberglobalmirror.com/\n\t     http://mirror.waia.asn.au/pub/cpan/\n\n       New Caledonia\n\t     http://cpan.lagoon.nc/pub/CPAN/\n\t     ftp://cpan.lagoon.nc/pub/CPAN/\n\t     http://cpan.nautile.nc/CPAN/\n\t     ftp://cpan.nautile.nc/CPAN/\n\n       New Zealand\n\t     ftp://ftp.auckland.ac.nz/pub/perl/CPAN/\n\t     http://cpan.catalyst.net.nz/CPAN/\n\t     ftp://cpan.catalyst.net.nz/pub/CPAN/\n\t     http://cpan.inspire.net.nz/\n\t     ftp://cpan.inspire.net.nz/cpan/\n\t     http://mirror.webtastix.net/CPAN/\n\t     ftp://mirror.webtastix.net/CPAN/\n\n   South America\n       Argentina\n\t     http://cpan.mmgdesigns.com.ar/\n\n       Brazil\n\t     http://cpan.kinghost.net/\n\t     http://linorg.usp.br/CPAN/\n\t     http://mirror.nbtelecom.com.br/CPAN/"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How would you use perlmodlib to access the CPAN mirror in New Zealand?
  manpageQuestion3: Can you provide an example of using perlmodlib to retrieve the CPAN mirror for Argentina?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nChile\n\t     http://cpan.dcc.uchile.cl/\n\t     ftp://cpan.dcc.uchile.cl/pub/lang/cpan/\n\n   RSYNC Mirrors\n\t\t       rsync://ftp.is.co.za/IS-Mirror/ftp.cpan.org/\n\t\t       rsync://mirror.ac.za/CPAN/\n\t\t       rsync://mirror.zol.co.zw/CPAN/\n\t\t       rsync://mirror.dhakacom.com/CPAN/\n\t\t       rsync://mirrors.ustc.edu.cn/CPAN/\n\t\t       rsync://mirrors.xmu.edu.cn/CPAN/\n\t\t       rsync://kambing.ui.ac.id/CPAN/\n\t\t       rsync://ftp.jaist.ac.jp/pub/CPAN/\n\t\t       rsync://mirror.jre655.com/CPAN/\n\t\t       rsync://ftp.kddilabs.jp/cpan/\n\t\t       rsync://ftp.nara.wide.ad.jp/cpan/\n\t\t       rsync://ftp.riken.jp/cpan/\n\t\t       rsync://mirror.neolabs.kz/CPAN/\n\t\t       rsync://mirror.qnren.qa/CPAN/\n\t\t       rsync://ftp.neowiz.com/CPAN/\n\t\t       rsync://mirror.0x.sg/CPAN/\n\t\t       rsync://ftp.yzu.edu.tw/pub/CPAN/\n\t\t       rsync://ftp.ubuntu-tw.org/CPAN/\n\t\t       rsync://mirrors.digipower.vn/CPAN/\n\t\t       rsync://cpan.inode.at/CPAN/\n\t\t       rsync://ftp.byfly.by/CPAN/\n\t\t       rsync://mirror.datacenter.by/CPAN/\n\t\t       rsync://ftp.belnet.be/cpan/\n\t\t       rsync://cpan.mirror.ba/CPAN/\n\t\t       rsync://mirrors.neterra.net/CPAN/\n\t\t       rsync://mirrors.netix.net/CPAN/\n\t\t       rsync://mirror.dkm.cz/cpan/\n\t\t       rsync://mirrors.nic.cz/CPAN/\n\t\t       rsync://cpan.mirror.vutbr.cz/cpan/\n\t\t       rsync://rsync.nic.funet.fi/CPAN/\n\t\t       rsync://ftp.ciril.fr/pub/cpan/\n\t\t       rsync://distrib-coffee.ipsl.jussieu.fr/pub/mirrors/cpan/\n\t\t       rsync://cpan.mirrors.ovh.net/CPAN/\n\t\t       rsync://mirror.de.leaseweb.net/CPAN/\n\t\t       rsync://mirror.euserv.net/cpan/\n\t\t       rsync://ftp-stud.hs-esslingen.de/CPAN/\n\t\t       rsync://ftp.gwdg.de/pub/languages/perl/CPAN/\n\t\t       rsync://ftp.hawo.stw.uni-erlangen.de/CPAN/\n\t\t       rsync://cpan.mirror.iphh.net/CPAN/\n\t\t       rsync://mirror.netcologne.de/cpan/\n\t\t       rsync://ftp.halifax.rwth-aachen.de/cpan/\n\t\t       rsync://ftp.ntua.gr/CPAN/\n\t\t       rsync://mirror.met.hu/CPAN/\n\t\t       rsync://ftp.heanet.ie/mirrors/ftp.perl.org/pub/CPAN/\n\t\t       rsync://rsync.panu.it/CPAN/\n\t\t       rsync://mirror.as43289.net/CPAN/\n\t\t       rsync://rsync.cs.uu.nl/CPAN/\n\t\t       rsync://mirror.nl.leaseweb.net/CPAN/\n\t\t       rsync://ftp.nluug.nl/CPAN/\n\t\t       rsync://mirror.transip.net/CPAN/\n\t\t       rsync://cpan.uib.no/cpan/\n\t\t       rsync://cpan.vianett.no/CPAN/\n\t\t       rsync://cpan.perl-hackers.net/CPAN/\n\t\t       rsync://cpan.perl.pt/cpan/\n\t\t       rsync://mirrors.m247.ro/CPAN/\n\t\t       rsync://mirrors.teentelecom.net/CPAN/\n\t\t       rsync://cpan.webdesk.ru/CPAN/\n\t\t       rsync://mirror.yandex.ru/mirrors/cpan/\n\t\t       rsync://mirror.sbb.rs/CPAN/\n\t\t       rsync://ftp.acc.umu.se/mirror/CPAN/\n\t\t       rsync://rsync.pirbot.com/ftp/cpan/\n\t\t       rsync://cpan.ip-connect.vn.ua/CPAN/\n\t\t       rsync://rsync.mirror.anlx.net/CPAN/\n\t\t       rsync://mirror.bytemark.co.uk/CPAN/\n\t\t       rsync://mirror.sax.uk.as61049.net/CPAN/\n\t\t       rsync://rsync.mirrorservice.org/cpan.perl.org/CPAN/\n\t\t       rsync://ftp.ticklers.org/CPAN/\n\t\t       rsync://mirrors.uk2.net/CPAN/\n\t\t       rsync://CPAN.mirror.rafal.ca/CPAN/\n\t\t       rsync://mirror.csclub.uwaterloo.ca/CPAN/\n\t\t       rsync://mirrors.namecheap.com/CPAN/\n\t\t       rsync://mirrors.syringanetworks.net/CPAN/\n\t\t       rsync://mirror.team-cymru.org/CPAN/\n\t\t       rsync://debian.cse.msu.edu/cpan/\n\t\t       rsync://mirrors-usa.go-parts.com/mirrors/cpan/\n\t\t       rsync://rsync.hoovism.com/CPAN/\n\t\t       rsync://mirror.cc.columbia.edu/cpan/\n\t\t       rsync://noodle.portalus.net/CPAN/\n\t\t       rsync://mirrors.rit.edu/cpan/\n\t\t       rsync://mirrors.ibiblio.org/CPAN/\n\t\t       rsync://cpan.pair.com/CPAN/\n\t\t       rsync://cpan.cs.utah.edu/CPAN/\n\t\t       rsync://mirror.cogentco.com/CPAN/\n\t\t       rsync://mirror.jmu.edu/CPAN/\n\t\t       rsync://mirror.us.leaseweb.net/CPAN/\n\t\t       rsync://cpan.mirror.digitalpacific.com.au/cpan/\n\t\t       rsync://mirror.internode.on.net/cpan/\n\t\t       rsync://uberglobalmirror.com/cpan/\n\t\t       rsync://cpan.lagoon.nc/cpan/\n\t\t       rsync://mirrors.mmgdesigns.com.ar/CPAN/"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you access Perl modules using the perlmodlib resource?
  manpageQuestion3: What are some common methods for synchronizing Perl module distributions with the perlmodlib resource?

- prompt: |-
    You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.



    Manpage text:

    For an up-to-date listing of CPAN sites, see
           <https://www.cpan.org/SITES> or <ftp://www.cpan.org/SITES>.

    Modules: Creation, Use, and Abuse
           (The following section is borrowed directly from Tim Bunce's modules
           file, available at your nearest CPAN site.)

           Perl implements a class using a package, but the presence of a package
           doesn't imply the presence of a class.  A package is just a namespace.
           A class is a package that provides subroutines that can be used as
           methods.  A method is just a subroutine that expects, as its first
           argument, either the name of a package (for "static" methods), or a
           reference to something (for "virtual" methods).

           A module is a file that (by convention) provides a class of the same
           name (sans the .pm), plus an import method in that class that can be
           called to fetch exported symbols.  This module may implement some of
           its methods by loading dynamic C or C++ objects, but that should be
           totally transparent to the user of the module.  Likewise, the module
           might set up an AUTOLOAD function to slurp in subroutine definitions on
           demand, but this is also transparent.  Only the .pm file is required to
           exist.  See perlsub, perlobj, and AutoLoader for details about the
           AUTOLOAD mechanism.
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you use perlmodlib to create a module that exports specific functions for use in another Perl script?
  manpageQuestion3: What is the role of the AUTOLOAD function in Perl modules, and how does it relate to the perlmodlib resource?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nGuidelines for Module Creation\n       •   Do similar modules already exist in some form?\n\n\t   If so, please try to reuse the existing modules either in whole or\n\t   by inheriting useful features into a new class.  If this is not\n\t   practical try to get together with the module authors to work on\n\t   extending or enhancing the functionality of the existing modules.\n\t   A perfect example is the plethora of packages in perl4 for dealing\n\t   with command line options.\n\n\t   If you are writing a module to expand an already existing set of\n\t   modules, please coordinate with the author of the package.  It\n\t   helps if you follow the same naming scheme and module interaction\n\t   scheme as the original author.\n\n       •   Try to design the new module to be easy to extend and reuse.\n\n\t   Try to \"use warnings;\" (or \"use warnings qw(...);\").  Remember that\n\t   you can add \"no warnings qw(...);\" to individual blocks of code\n\t   that need less warnings.\n\n\t   Use blessed references.  Use the two argument form of bless to\n\t   bless into the class name given as the first parameter of the\n\t   constructor, e.g.,:"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you ensure that your Perl module is compatible with existing modules and follows best practices for naming and design?
  manpageQuestion3: What are some key practices recommended by perlmodlib for creating maintainable and extendable Perl modules?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nsub new {\n\t\tmy $class = shift;\n\t\treturn bless {}, $class;\n\t    }\n\n\t   or even this if you'd like it to be used as either a static or a\n\t   virtual method.\n\n\t    sub new {\n\t\tmy $self  = shift;\n\t\tmy $class = ref($self) || $self;\n\t\treturn bless {}, $class;\n\t    }\n\n\t   Pass arrays as references so more parameters can be added later\n\t   (it's also faster).\tConvert functions into methods where\n\t   appropriate.  Split large methods into smaller more flexible ones.\n\t   Inherit methods from other modules if appropriate.\n\n\t   Avoid class name tests like: \"die \"Invalid\" unless ref $ref eq\n\t   'FOO'\".  Generally you can delete the \"eq 'FOO'\" part with no harm\n\t   at all.  Let the objects look after themselves! Generally, avoid\n\t   hard-wired class names as far as possible.\n\n\t   Avoid \"$r->Class::func()\" where using \"@ISA=qw(... Class ...)\" and\n\t   \"$r->func()\" would work.\n\n\t   Use autosplit so little used or newly added functions won't be a\n\t   burden to programs that don't use them. Add test functions to the\n\t   module after __END__ either using AutoSplit or by saying:"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you create a new instance of a class using perlmodlib's recommended approach?
  manpageQuestion3: What are some best practices for module design as described in the perlmodlib documentation?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\neval join('',<main::DATA>) || die $@ unless caller();\n\n\t   Does your module pass the 'empty subclass' test? If you say\n\t   \"@SUBCLASS::ISA = qw(YOURCLASS);\" your applications should be able\n\t   to use SUBCLASS in exactly the same way as YOURCLASS.  For example,\n\t   does your application still work if you change:  \"$obj =\n\t   YOURCLASS->new();\" into: \"$obj = SUBCLASS->new();\" ?\n\n\t   Avoid keeping any state information in your packages. It makes it\n\t   difficult for multiple other packages to use yours. Keep state\n\t   information in objects.\n\n\t   Always use -w.\n\n\t   Try to \"use strict;\" (or \"use strict qw(...);\").  Remember that you\n\t   can add \"no strict qw(...);\" to individual blocks of code that need\n\t   less strictness.\n\n\t   Always use -w.\n\n\t   Follow the guidelines in perlstyle.\n\n\t   Always use -w.\n\n       •   Some simple style guidelines\n\n\t   The perlstyle manual supplied with Perl has many helpful points.\n\n\t   Coding style is a matter of personal taste. Many people evolve\n\t   their style over several years as they learn what helps them write\n\t   and maintain good code.  Here's one set of assorted suggestions\n\t   that seem to be widely used by experienced developers:"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you ensure that your Perl module passes the 'empty subclass' test according to perlmodlib?
  manpageQuestion3: What are some key coding style guidelines recommended by perlmodlib for writing Perl modules?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nUse underscores to separate words.  It is generally easier to read\n\t   $var_names_like_this than $VarNamesLikeThis, especially for non-\n\t   native speakers of English. It's also a simple rule that works\n\t   consistently with VAR_NAMES_LIKE_THIS.\n\n\t   Package/Module names are an exception to this rule. Perl informally\n\t   reserves lowercase module names for 'pragma' modules like integer\n\t   and strict. Other modules normally begin with a capital letter and\n\t   use mixed case with no underscores (need to be short and portable).\n\n\t   You may find it helpful to use letter case to indicate the scope or\n\t   nature of a variable. For example:\n\n\t    $ALL_CAPS_HERE   constants only (beware clashes with Perl vars)\n\t    $Some_Caps_Here  package-wide global/static\n\t    $no_caps_here    function scope my() or local() variables\n\n\t   Function and method names seem to work best as all lowercase.\n\t   e.g., \"$obj->as_string()\".\n\n\t   You can use a leading underscore to indicate that a variable or\n\t   function should not be used outside the package that defined it."
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you format a variable name in Perl to follow the naming conventions for package-wide global variables?
  manpageQuestion3: What is the recommended way to name a function in Perl according to the perlmodlib guidelines?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\n•   Select what to export.\n\n\t   Do NOT export method names!\n\n\t   Do NOT export anything else by default without a good reason!\n\n\t   Exports pollute the namespace of the module user.  If you must\n\t   export try to use @EXPORT_OK in preference to @EXPORT and avoid\n\t   short or common names to reduce the risk of name clashes.\n\n\t   Generally anything not exported is still accessible from outside\n\t   the module using the ModuleName::item_name (or\n\t   \"$blessed_ref->method\") syntax.  By convention you can use a\n\t   leading underscore on names to indicate informally that they are\n\t   'internal' and not for public use.\n\n\t   (It is actually possible to get private functions by saying: \"my\n\t   $subref = sub { ... };  &$subref;\".\tBut there's no way to call\n\t   that directly as a method, because a method must have a name in the\n\t   symbol table.)\n\n\t   As a general rule, if the module is trying to be object oriented\n\t   then export nothing. If it's just a collection of functions then\n\t   @EXPORT_OK anything but use @EXPORT with caution."
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you control which symbols are exported by a Perl module to avoid namespace pollution?
  manpageQuestion3: What is the recommended approach for handling internal functions within a Perl module to prevent them from being accidentally used as methods?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\n•   Select a name for the module.\n\n\t   This name should be as descriptive, accurate, and complete as\n\t   possible.  Avoid any risk of ambiguity. Always try to use two or\n\t   more whole words.  Generally the name should reflect what is\n\t   special about what the module does rather than how it does it.\n\t   Please use nested module names to group informally or categorize a\n\t   module.  There should be a very good reason for a module not to\n\t   have a nested name.\tModule names should begin with a capital\n\t   letter.\n\n\t   Having 57 modules all called Sort will not make life easy for\n\t   anyone (though having 23 called Sort::Quick is only marginally\n\t   better :-).\tImagine someone trying to install your module\n\t   alongside many others.\n\n\t   If you are developing a suite of related modules/classes it's good\n\t   practice to use nested classes with a common prefix as this will\n\t   avoid namespace clashes. For example: Xyz::Control, Xyz::View,\n\t   Xyz::Model etc. Use the modules in this list as a naming guide."
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How should one name a Perl module to avoid ambiguity and ensure clarity in its purpose?
  manpageQuestion3: What is an example of a good naming convention for a set of related Perl modules?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nIf adding a new module to a set, follow the original author's\n\t   standards for naming modules and the interface to methods in those\n\t   modules.\n\n\t   If developing modules for private internal or project specific use,\n\t   that will never be released to the public, then you should ensure\n\t   that their names will not clash with any future public module. You\n\t   can do this either by using the reserved Local::* category or by\n\t   using a category name that includes an underscore like Foo_Corp::*.\n\n\t   To be portable each component of a module name should be limited to\n\t   11 characters. If it might be used on MS-DOS then try to ensure\n\t   each is unique in the first 8 characters. Nested modules make this\n\t   easier.\n\n\t   For additional guidance on the naming of modules, please consult:\n\n\t       https://pause.perl.org/pause/query?ACTION=pause_namingmodules\n\n\t   or send mail to the <module-authors@perl.org> mailing list.\n\n       •   Have you got it right?\n\n\t   How do you know that you've made the right decisions? Have you\n\t   picked an interface design that will cause problems later? Have you\n\t   picked the most appropriate name? Do you have any questions?"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How should you name a private module to avoid naming conflicts with future public modules?
  manpageQuestion3: What are the guidelines for ensuring portability when naming module components in Perl?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nThe best way to know for sure, and pick up many helpful\n\t   suggestions, is to ask someone who knows. The\n\t   <module-authors@perl.org> mailing list is useful for this purpose;\n\t   it's also accessible via news interface as perl.module-authors at\n\t   nntp.perl.org.\n\n\t   All you need to do is post a short summary of the module, its\n\t   purpose and interfaces. A few lines on each of the main methods is\n\t   probably enough. (If you post the whole module it might be ignored\n\t   by busy people - generally the very people you want to read it!)\n\n\t   Don't worry about posting if you can't say when the module will be\n\t   ready - just say so in the message. It might be worth inviting\n\t   others to help you, they may be able to complete it for you!\n\n       •   README and other Additional Files.\n\n\t   It's well known that software developers usually fully document the\n\t   software they write. If, however, the world is in urgent need of\n\t   your software and there is not enough time to write the full\n\t   documentation please at least provide a README file containing:"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can one effectively seek assistance and gather suggestions for the perlmodlib module?
  manpageQuestion3: What is the recommended approach for creating documentation and additional files for the perlmodlib module?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\n•\t     A description of the module/package/extension etc.\n\n\t   •\t     A copyright notice - see below.\n\n\t   •\t     Prerequisites - what else you may need to have.\n\n\t   •\t     How to build it - possible changes to Makefile.PL etc.\n\n\t   •\t     How to install it.\n\n\t   •\t     Recent changes in this release, especially\n\t\t     incompatibilities\n\n\t   •\t     Changes / enhancements you plan to make in the future.\n\n\t   If the README file seems to be getting too large you may wish to\n\t   split out some of the sections into separate files: INSTALL,\n\t   Copying, ToDo etc.\n\n\t   •   Adding a Copyright Notice.\n\n\t       How you choose to license your work is a personal decision.\n\t       The general mechanism is to assert your Copyright and then make\n\t       a declaration of how others may copy/use/modify your work.\n\n\t       Perl, for example, is supplied with two types of licence: The\n\t       GNU GPL and The Artistic Licence (see the files README,\n\t       Copying, and Artistic, or perlgpl and perlartistic).  Larry has\n\t       good reasons for NOT just using the GNU GPL."
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you install the perlmodlib module using the provided instructions?
  manpageQuestion3: What are the key sections typically included in a README file for a Perl module like perlmodlib?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nMy personal recommendation, out of respect for Larry, Perl, and\n\t       the Perl community at large is to state something simply like:\n\n\t\tCopyright (c) 1995 Your Name. All rights reserved.\n\t\tThis program is free software; you can redistribute it and/or\n\t\tmodify it under the same terms as Perl itself.\n\n\t       This statement should at least appear in the README file. You\n\t       may also wish to include it in a Copying file and your source\n\t       files.  Remember to include the other words in addition to the\n\t       Copyright.\n\n\t   •   Give the module a version/issue/release number.\n\n\t       To be fully compatible with the Exporter and MakeMaker modules\n\t       you should store your module's version number in a non-my\n\t       package variable called $VERSION.  This should be a positive\n\t       floating point number with at least two digits after the\n\t       decimal (i.e., hundredths, e.g, \"$VERSION = \"0.01\"\").  Don't\n\t       use a \"1.3.2\" style version.  See Exporter for details.\n\n\t       It may be handy to add a function or method to retrieve the\n\t       number.\tUse the number in announcements and archive file names\n\t       when releasing the module (ModuleName-1.02.tar.Z).  See perldoc\n\t       ExtUtils::MakeMaker.pm for details."
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How would you set a version number for a Perl module using perlmodlib?
  manpageQuestion3: Can you provide an example of including a copyright notice in a Perl module using perlmodlib?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\n•   How to release and distribute a module.\n\n\t       If possible, register the module with CPAN. Follow the\n\t       instructions and links on:\n\n\t\t  https://www.cpan.org/modules/04pause.html\n\n\t       and upload to:\n\n\t\t  https://pause.perl.org/\n\n\t       and notify <modules@perl.org>. This will allow anyone to\n\t       install your module using the \"cpan\" tool distributed with\n\t       Perl.\n\n\t       By using the WWW interface you can ask the Upload Server to\n\t       mirror your modules from your ftp or WWW site into your own\n\t       directory on CPAN!\n\n\t   •   Take care when changing a released module.\n\n\t       Always strive to remain compatible with previous released\n\t       versions.  Otherwise try to add a mechanism to revert to the\n\t       old behavior if people rely on it.  Document incompatible\n\t       changes.\n\n   Guidelines for Converting Perl 4 Library Scripts into Modules\n       •   There is no requirement to convert anything.\n\n\t   If it ain't broke, don't fix it! Perl 4 library scripts should\n\t   continue to work with no problems. You may need to make some minor\n\t   changes (like escaping non-array @'s in double quoted strings) but\n\t   there is no need to convert a .pl file into a Module for just that."
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can one register a module with CPAN and make it available for installation using the 'cpan' tool?
  manpageQuestion3: Under what circumstances is it recommended not to convert a Perl 4 library script into a module?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\n•   Consider the implications.\n\n\t   All Perl applications that make use of the script will need to be\n\t   changed (slightly) if the script is converted into a module.  Is it\n\t   worth it unless you plan to make other changes at the same time?\n\n       •   Make the most of the opportunity.\n\n\t   If you are going to convert the script to a module you can use the\n\t   opportunity to redesign the interface.  The guidelines for module\n\t   creation above include many of the issues you should consider.\n\n       •   The pl2pm utility will get you started.\n\n\t   This utility will read *.pl files (given as parameters) and write\n\t   corresponding *.pm files. The pl2pm utilities does the following:\n\n\t   •\t     Adds the standard Module prologue lines\n\n\t   •\t     Converts package specifiers from ' to ::\n\n\t   •\t     Converts die(...) to croak(...)\n\n\t   •\t     Several other minor changes\n\n\t   Being a mechanical process pl2pm is not bullet proof. The converted\n\t   code will need careful checking, especially any package statements.\n\t   Don't delete the original .pl file till the new .pm one works!"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can the pl2pm utility be used to convert a Perl script into a module?
  manpageQuestion3: What are some of the key considerations when converting a Perl script to a module using pl2pm?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nGuidelines for Reusing Application Code\n       •   Complete applications rarely belong in the Perl Module Library.\n\n       •   Many applications contain some Perl code that could be reused.\n\n\t   Help save the world! Share your code in a form that makes it easy\n\t   to reuse.\n\n       •   Break-out the reusable code into one or more separate module files.\n\n       •   Take the opportunity to reconsider and redesign the interfaces.\n\n       •   In some cases the 'application' can then be reduced to a small\n\n\t   fragment of code built on top of the reusable modules. In these\n\t   cases the application could invoked as:\n\n\t\t% perl -e 'use Module::Name; method(@ARGV)' ...\n\t   or\n\t\t% perl -mModule::Name ...    (in perl5.002 or higher)\n\nNOTE\n       Perl does not enforce private and public parts of its modules as you\n       may have been used to in other languages like C++, Ada, or Modula-17.\n       Perl doesn't have an infatuation with enforced privacy.\tIt would\n       prefer that you stayed out of its living room because you weren't\n       invited, not because it has a shotgun."
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How can you invoke an application that uses the Module::Name module in a minimal way using Perl?
  manpageQuestion3: What are the key guidelines for reusing application code in the Perl Module Library according to the manpage?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `perlmodlib`.\n\n\n\nManpage text:\n\nThe module and its user have a contract, part of which is common law,\n       and part of which is \"written\".\tPart of the common law contract is\n       that a module doesn't pollute any namespace it wasn't asked to.\tThe\n       written contract for the module (A.K.A. documentation) may make other\n       provisions.  But then you know when you \"use RedefineTheWorld\" that\n       you're redefining the world and willing to take the consequences.\n\nperl v5.34.1\t\t\t  2024-12-14\t\t\t PERLMODLIB(1)"
  manpageQuestion1: What is the primary purpose of the perlmodlib resource?
  manpageQuestion2: How would you use perlmodlib to ensure a module does not pollute its namespace?
  manpageQuestion3: Can you explain the 'written' contract mentioned in the perlmodlib documentation and how it relates to module usage?

