- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `checkbutton`.\n\n\n\nManpage text:\n\ncheckbutton(n)\t\t     Tk Built-In Commands\t\tcheckbutton(n)\n\n______________________________________________________________________________\n\nNAME\n       checkbutton - Create and manipulate checkbutton widgets\n\nSYNOPSIS\n       checkbutton pathName ?options?\n\nSTANDARD OPTIONS\n       -activebackground     -disabledforeground  -padx\n       -activeforeground     -font\t\t  -pady\n       -anchor\t\t     -foreground\t  -relief\n       -background\t     -highlightbackground -takefocus\n       -bitmap\t\t     -highlightcolor\t  -text\n       -borderwidth\t     -highlightthickness  -textvariable\n       -compound\t     -image\t\t  -underline\n       -cursor\t\t     -justify\t\t  -wraplength\n\n       See the options manual entry for details on the standard options.\n\nWIDGET-SPECIFIC OPTIONS\n       [-command command] Specifies a Tcl command to associate with the\n       button.\tThis command is typically invoked when mouse button 1 is\n       released over the button window.  The button's global variable\n       (-variable option) will be updated before the command is invoked.\n       [-height height] Specifies a desired height for the button.  If an\n       image or bitmap is being displayed in the button then the value is in\n       screen units (i.e. any of the forms acceptable to Tk_GetPixels); for\n       text it is in lines of text.  If this option is not specified, the\n       button's desired height is computed from the size of the image or\n       bitmap or text being displayed in it.  [-indicatoron indicatorOn]\n       Specifies whether or not the indicator should be drawn.\tMust be a\n       proper boolean value.  If false, the relief option is ignored and the\n       widget's relief is always sunken if the widget is selected and raised\n       otherwise.  [-offrelief offRelief] Specifies the relief for the\n       checkbutton when the indicator is not drawn and the checkbutton is off.\n       The default value is “raised”.  By setting this option to “flat” and\n       setting -indicatoron to false and -overrelief to “raised”, the effect\n       is achieved of having a flat button that raises on mouse-over and which\n       is depressed when activated.  This is the behavior typically exhibited\n       by the Bold, Italic, and Underline checkbuttons on the toolbar of a\n       word-processor, for example.  [-offvalue offValue] Specifies value to\n       store in the button's associated variable whenever this button is\n       deselected.  Defaults to “0”.  [-onvalue onValue] Specifies value to\n       store in the button's associated variable whenever this button is\n       selected.  Defaults to “1”.  [-overrelief overRelief] Specifies an\n       alternative relief for the checkbutton, to be used when the mouse\n       cursor is over the widget.  This option can be used to make toolbar\n       buttons, by configuring -relief flat -overrelief raised.  If the value\n       of this option is the empty string, then no alternative relief is used\n       when the mouse cursor is over the checkbutton.  The empty string is the\n       default value.  [-selectcolor selectColor] Specifies a background color\n       to use when the button is selected.  If indicatorOn is true then the\n       color is used as the background for the indicator regardless of the\n       select state.  If indicatorOn is false, this color is used as the\n       background for the entire widget, in place of background or\n       activeBackground, whenever the widget is selected.  If specified as an\n       empty string then no special color is used for displaying when the\n       widget is selected.  [-selectimage selectImage] Specifies an image to\n       display (in place of the image option) when the checkbutton is\n       selected.  This option is ignored unless the image option has been\n       specified.  [-state state] Specifies one of three states for the\n       checkbutton:  normal, active, or disabled.  In normal state the\n       checkbutton is displayed using the foreground and background options.\n       The active state is typically used when the pointer is over the\n       checkbutton.  In active state the checkbutton is displayed using the\n       activeForeground and activeBackground options.  Disabled state means\n       that the checkbutton should be insensitive:  the default bindings will\n       refuse to activate the widget and will ignore mouse button presses.  In\n       this state the disabledForeground and background options determine how\n       the checkbutton is displayed.  [-tristateimage tristateImage] Specifies │\n       an image to display (in place of the image option) when the checkbutton │\n       is in tri-state mode.  This option is ignored unless the image option   │\n       has been specified.  [-tristatevalue tristateValue] Specifies the value │\n       that causes the checkbutton to display the multi-value selection, also\n       known as the tri-state mode.  Defaults to “”.  [-variable variable]\n       Specifies name of global variable to set to indicate whether or not\n       this button is selected.  Defaults to the name of the button within its\n       parent (i.e. the last element of the button window's path name).\n       [-width width] Specifies a desired width for the button.  If an image\n       or bitmap is being displayed in the button then the value is in screen\n       units (i.e. any of the forms acceptable to Tk_GetPixels); for text it\n       is in characters.  If this option is not specified, the button's\n       desired width is computed from the size of the image or bitmap or text\n       being displayed in it.\n______________________________________________________________________________"
  manpageQuestion1: What is the primary purpose of the checkbutton command in Tcl/Tk?
  manpageQuestion2: How would you create a checkbutton widget that toggles a variable when clicked and displays text 'Select Option', with an initial state of disabled?
  manpageQuestion3: Can you provide an example of using the checkbutton command to set a custom relief for the widget when it is not selected and when the indicator is off?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `checkbutton`.\n\n\n\nManpage text:\n\nDESCRIPTION\n       The checkbutton command creates a new window (given by the pathName\n       argument) and makes it into a checkbutton widget.  Additional options,\n       described above, may be specified on the command line or in the option\n       database to configure aspects of the checkbutton such as its colors,\n       font, text, and initial relief.\tThe checkbutton command returns its\n       pathName argument.  At the time this command is invoked, there must not\n       exist a window named pathName, but pathName's parent must exist.\n\n       A checkbutton is a widget that displays a textual string, bitmap or\n       image and a square called an indicator.\tIf text is displayed, it must\n       all be in a single font, but it can occupy multiple lines on the screen\n       (if it contains newlines or if wrapping occurs because of the\n       wrapLength option) and one of the characters may optionally be\n       underlined using the underline option.  A checkbutton has all of the\n       behavior of a simple button, including the following: it can display\n       itself in either of three different ways, according to the state\n       option; it can be made to appear raised, sunken, or flat; it can be\n       made to flash; and it invokes a Tcl command whenever mouse button 1 is\n       clicked over the checkbutton."
  manpageQuestion1: What is the primary purpose of the checkbutton command?
  manpageQuestion2: How would you create a checkbutton widget with the text 'Confirm' and set its initial state to selected?
  manpageQuestion3: Can you provide an example of configuring a checkbutton to display an image and have it flash when clicked?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `checkbutton`.\n\n\n\nManpage text:\n\nIn addition, checkbuttons can be selected.  If a checkbutton is\n       selected then the indicator is normally drawn with a selected\n       appearance, and a Tcl variable associated with the checkbutton is set\n       to a particular value (normally 1).  The indicator is drawn with a      │\n       check mark inside.  If the checkbutton is not selected, then the        │\n       indicator is drawn with a deselected appearance, and the associated     │\n       variable is set to a different value (typically 0).  The indicator is   │\n       drawn without a check mark inside.  In the special case where the       │\n       variable (if specified) has a value that matches the tristatevalue, the │\n       indicator is drawn with a tri-state appearance and is in the tri-state  │\n       mode indicating mixed or multiple values.  (This is used when the check │\n       box represents the state of multiple items.)  The indicator is drawn in │\n       a platform dependent manner.  Under Unix and Windows, the background    │\n       interior of the box is “grayed”.  Under Mac, the indicator is drawn     │\n       with a dash mark inside.  By default, the name of the variable\t       │\n       associated with a checkbutton is the same as the name used to create    │\n       the checkbutton.  The variable name, and the “on”, “off” and “tristate” │\n       values stored in it, may be modified with options on the command line   │\n       or in the option database.  Configuration options may also be used to   │\n       modify the way the indicator is displayed (or whether it is displayed   │\n       at all).  By default a checkbutton is configured to select and deselect │\n       itself on alternate button clicks.  In addition, each checkbutton       │\n       monitors its associated variable and automatically selects and\t       │\n       deselects itself when the variables value changes to and from the       │\n       button's “on”, “off” and “tristate” values."
  manpageQuestion1: What is the primary purpose of the checkbutton resource?
  manpageQuestion2: How can you configure a checkbutton to use a different variable name than its default?
  manpageQuestion3: What are the visual differences in the appearance of a checkbutton's indicator when it is selected, deselected, and in tri-state mode?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `checkbutton`.\n\n\n\nManpage text:\n\nWIDGET COMMAND\n       The checkbutton command creates a new Tcl command whose name is\n       pathName.  This command may be used to invoke various operations on the\n       widget.\tIt has the following general form:\n\t      pathName option ?arg arg ...?\n       Option and the args determine the exact behavior of the command.  The\n       following commands are possible for checkbutton widgets:\n\n       pathName cget option\n\t      Returns the current value of the configuration option given by\n\t      option.  Option may have any of the values accepted by the\n\t      checkbutton command.\n\n       pathName configure ?option? ?value option value ...?\n\t      Query or modify the configuration options of the widget.\tIf no\n\t      option is specified, returns a list describing all of the\n\t      available options for pathName (see Tk_ConfigureInfo for\n\t      information on the format of this list).\tIf option is specified\n\t      with no value, then the command returns a list describing the\n\t      one named option (this list will be identical to the\n\t      corresponding sublist of the value returned if no option is\n\t      specified).  If one or more option-value pairs are specified,\n\t      then the command modifies the given widget option(s) to have the\n\t      given value(s);  in this case the command returns an empty\n\t      string.  Option may have any of the values accepted by the\n\t      checkbutton command."
  manpageQuestion1: What is the primary purpose of the checkbutton widget in Tcl?
  manpageQuestion2: How do you retrieve the current value of a specific configuration option for a checkbutton widget?
  manpageQuestion3: Can you provide an example of how to configure a checkbutton widget to set its text and variable?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `checkbutton`.\n\n\n\nManpage text:\n\npathName deselect\n\t      Deselects the checkbutton and sets the associated variable to\n\t      its “off” value.\n\n       pathName flash\n\t      Flashes the checkbutton.\tThis is accomplished by redisplaying\n\t      the checkbutton several times, alternating between active and\n\t      normal colors.  At the end of the flash the checkbutton is left\n\t      in the same normal/active state as when the command was invoked.\n\t      This command is ignored if the checkbutton's state is disabled.\n\n       pathName invoke\n\t      Does just what would have happened if the user invoked the\n\t      checkbutton with the mouse: toggle the selection state of the\n\t      button and invoke the Tcl command associated with the\n\t      checkbutton, if there is one.  The return value is the return\n\t      value from the Tcl command, or an empty string if there is no\n\t      command associated with the checkbutton.\tThis command is\n\t      ignored if the checkbutton's state is disabled.\n\n       pathName select\n\t      Selects the checkbutton and sets the associated variable to its\n\t      “on” value."
  manpageQuestion1: What is the primary purpose of the checkbutton resource in Tcl/Tk?
  manpageQuestion2: How would you use the select command with a checkbutton to toggle its state and trigger its associated Tcl command?
  manpageQuestion3: Can you provide an example of using the flash command on a checkbutton to temporarily change its appearance without altering its state?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `checkbutton`.\n\n\n\nManpage text:\n\npathName toggle\n\t      Toggles the selection state of the button, redisplaying it and\n\t      modifying its associated variable to reflect the new state.\n\nBINDINGS\n       Tk automatically creates class bindings for checkbuttons that give them\n       the following default behavior:\n\n       [1]    On Unix systems, a checkbutton activates whenever the mouse\n\t      passes over it and deactivates whenever the mouse leaves the\n\t      checkbutton.  On Mac and Windows systems, when mouse button 1 is\n\t      pressed over a checkbutton, the button activates whenever the\n\t      mouse pointer is inside the button, and deactivates whenever the\n\t      mouse pointer leaves the button.\n\n       [2]    When mouse button 1 is pressed over a checkbutton, it is invoked\n\t      (its selection state toggles and the command associated with the\n\t      button is invoked, if there is one).\n\n       [3]    When a checkbutton has the input focus, the space key causes the\n\t      checkbutton to be invoked.  Under Windows, there are additional\n\t      key bindings; plus (+) and equal (=) select the button, and\n\t      minus (-) deselects the button."
  manpageQuestion1: What is the primary purpose of the checkbutton resource in Tcl/Tk?
  manpageQuestion2: How can a user toggle the selection state of a checkbutton using mouse interactions?
  manpageQuestion3: What are the keybindings associated with a checkbutton on different operating systems?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `checkbutton`.\n\n\n\nManpage text:\n\nIf the checkbutton's state is disabled then none of the above actions\n       occur:  the checkbutton is completely non-responsive.\n\n       The behavior of checkbuttons can be changed by defining new bindings\n       for individual widgets or by redefining the class bindings.\n\nEXAMPLE\n       This example shows a group of uncoupled checkbuttons.\n\n\t\t  labelframe .lbl -text \"Steps:\"\n\t\t  checkbutton .c1 -text Lights\t-variable lights\n\t\t  checkbutton .c2 -text Cameras -variable cameras\n\t\t  checkbutton .c3 -text Action! -variable action\n\t\t  pack .c1 .c2 .c3 -in .lbl\n\t\t  pack .lbl\n\nSEE ALSO\n       button(n), options(n), radiobutton(n), ttk::checkbutton(n)\n\nKEYWORDS\n       checkbutton, widget\n\nTk\t\t\t\t      4.4\t\t\tcheckbutton(n)"
  manpageQuestion1: What is the primary purpose of the checkbutton resource in Tkinter?
  manpageQuestion2: How can you create a group of uncoupled checkbuttons in a Tkinter application?
  manpageQuestion3: What is the effect of disabling a checkbutton in Tkinter?

