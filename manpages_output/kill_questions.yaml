- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `kill`.\n\n\n\nManpage text:\n\nKILL(1) \t\t    General Commands Manual\t\t       KILL(1)\n\nNAME\n     kill – terminate or signal a process\n\nSYNOPSIS\n     kill [-s signal_name] pid ...\n     kill -l [exit_status]\n     kill -signal_name pid ...\n     kill -signal_number pid ...\n\nDESCRIPTION\n     The kill utility sends a signal to the processes specified by the pid\n     operands.\n\n     Only the super-user may send signals to other users' processes.\n\n     The options are as follows:\n\n     -s signal_name\n\t     A symbolic signal name specifying the signal to be sent instead\n\t     of the default TERM.\n\n     -l [exit_status]\n\t     If no operand is given, list the signal names; otherwise, write\n\t     the signal name corresponding to exit_status.\n\n     -signal_name\n\t     A symbolic signal name specifying the signal to be sent instead\n\t     of the default TERM.\n\n     -signal_number\n\t     A non-negative decimal integer, specifying the signal to be sent\n\t     instead of the default TERM.\n\n     The following PIDs have special meanings:\n\n     -1      If superuser, broadcast the signal to all processes; otherwise\n\t     broadcast to all processes belonging to the user."
  manpageQuestion1: What is the primary purpose of the kill command?
  manpageQuestion2: How would you use the kill command to send a SIGINT signal to a process with PID 1234?
  manpageQuestion3: Can you provide an example of using the kill command to list all signal names available on a system?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `kill`.\n\n\n\nManpage text:\n\nSome of the more commonly used signals:\n\n     1\t     HUP (hang up)\n     2\t     INT (interrupt)\n     3\t     QUIT (quit)\n     6\t     ABRT (abort)\n     9\t     KILL (non-catchable, non-ignorable kill)\n     14      ALRM (alarm clock)\n     15      TERM (software termination signal)\n\n     Some shells may provide a builtin kill command which is similar or\n     identical to this utility.  Consult the builtin(1) manual page.\n\nEXIT STATUS\n     The kill utility exits 0 on success, and >0 if an error occurs.\n\nEXAMPLES\n     Terminate the processes with PIDs 142 and 157:\n\n\t   kill 142 157\n\n     Send the hangup signal (SIGHUP) to the process with PID 507:\n\n\t   kill -s HUP 507\n\n     Terminate the process group with PGID 117:\n\n\t   kill -- -117\n\nSEE ALSO\n     builtin(1), csh(1), killall(1), ps(1), sh(1), kill(2), sigaction(2)\n\nSTANDARDS\n     The kill utility is expected to be IEEE Std 1003.2 (“POSIX.2”)\n     compatible.\n\nHISTORY\n     A kill command appeared in Version 3 AT&T UNIX in section 8 of the\n     manual."
  manpageQuestion1: What is the primary purpose of the kill command?
  manpageQuestion2: How would you send a hangup signal (SIGHUP) to a process with PID 507 using the kill command?
  manpageQuestion3: Can you provide an example of using the kill command to terminate a process group with PGID 117?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `kill`.\n\n\n\nManpage text:\n\nBUGS\n     A replacement for the command “kill 0” for csh(1) users should be\n     provided.\n\nmacOS 15.3\t\t\tOctober 3, 2016 \t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the kill command?
  manpageQuestion2: How can you use the kill command to send a SIGTERM signal to a process with PID 1234?
  manpageQuestion3: What is the recommended alternative to using ‘kill 0’ in csh(1)?

