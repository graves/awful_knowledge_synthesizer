- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `snmptest`.\n\n\n\nManpage text:\n\nSNMPTEST(1)\t\t\t   Net-SNMP\t\t\t   SNMPTEST(1)\n\nNAME\n       snmptest - communicates with a network entity using SNMP requests\n\nSYNOPSIS\n       snmptest [COMMON OPTIONS] AGENT\n\nDESCRIPTION\n       snmptest is a flexible SNMP application that can monitor and manage\n       information on a network entity.\n\n       After invoking the program, a command line interpreter proceeds to\n       accept commands.  This intepreter enables the user to send different\n       types of SNMP requests to target agents.\n\n       AGENT identifies a target SNMP agent, which is instrumented to monitor\n       the given objects.  At its simplest, the AGENT specification will\n       consist of a hostname or an IPv4 address.  In this situation, the\n       command will attempt communication with the agent, using UDP/IPv4 to\n       port 161 of the given target host. See snmpcmd(1) for a full list of\n       the possible formats for AGENT.\n\n       Once snmptest is invoked, the command line intepreter will prompt with:\n\n       Variable:"
  manpageQuestion1: What is the primary purpose of the snmptest tool?
  manpageQuestion2: How can you use snmptest to query the system's systemUpTime object using SNMP?
  manpageQuestion3: Can you provide an example of using snmptest to send a GET request to an SNMP agent at 192.168.1.1 for the object .1.3.6.1.2.1.1.1?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `snmptest`.\n\n\n\nManpage text:\n\nAt this point you can enter one or more variable names, one per line.\n       A blank line ends the parameter input and will send the request\n       (variables entered) in a single packet, to the remote entity.  Each\n       variable name is given in the format specified in variables(5).\tFor\n       example:\n\n       snmptest -c public -v 1 zeus\n       Variable: system.sysDescr.0\n       Variable:\n\n       will return some information about the request and reply packets, as\n       well as the information:\n\n       requestid 0x5992478A errstat 0x0 errindex 0x0\n       system.sysDescr.0 = STRING: \"Unix 4.3BSD\"\n\n       The errstatus value shows the error status code for the call.  The\n       possible values for errstat are in the header file snmp.h.  The\n       errindex value identifies the variable that has the given error.  Index\n       values are assigned to all the variables entered at the \"Variable\":\n       prompt. The first value is assigned an index of 1.\n\n       Upon startup, the program defaults to sending a GET request packet.\n       The type of request can be changed by typing one of the following\n       commands at the \"Variable:\" prompt:"
  manpageQuestion1: What is the primary purpose of the snmptest tool?
  manpageQuestion2: How would you use snmptest to send a GET request for the system description variable sysDescr.0 from a remote SNMP entity?
  manpageQuestion3: Can you provide an example of using snmptest to send a custom request with multiple variables and observe the response?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `snmptest`.\n\n\n\nManpage text:\n\n$G - send a GET request\n       $N - send a GETNEXT request\n       $S - send a SET request\n       $B - send a GETBULK request\n\t    Note: GETBULK is not available in SNMPv1\n       $I - send an Inform request\n       $T - send an SNMPv2 Trap request\n\n       Other values that can be entered at the \"Variable:\" prompt are:\n\n       $D - toggle the dumping of each sent and received packet\n       $QP - toggle a quicker, less verbose output form\n       $Q - Quit the program\n\n       Request Types:\n\n       GET Request:\n\n       When in \"GET request\" mode ($G or default), the user can enter an OID\n       at the \"Variable:\" prompt. The user can enter multiple OIDs, one per\n       prompt. The user enters a blank line to send the GET request.\n\n       GETNEXT Request:\n\n       The \"GETNEXT request\" mode ($N) is simlar to the \"Get request\" mode,\n       described above.\n\n       SET Request:\n\n       When in the \"SET request\" mode ($S), more information is requested by\n       the prompt for each variable.  The prompt:"
  manpageQuestion1: What is the primary purpose of the snmptest tool?
  manpageQuestion2: How would you use snmptest to send a GET request for the OID 1.3.6.1.2.1.1.1?
  manpageQuestion3: Can you provide an example of using snmptest to send a SET request to modify the value of a specific SNMP variable?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `snmptest`.\n\n\n\nManpage text:\n\nType [i|s|x|d|n|o|t|a]:\n       requests the type of the variable be entered.  Depending on the type of\n       value you want to set, you can type one of the following:\n\n       i - integer\n       u - unsigned integer\n       s - octet string in ASCII\n       x - octet string in hex bytes, separated by whitespace\n       d - octet string as decimal bytes, separated by whitespace\n       a - ip address in dotted IP notation\n       o - object identifier\n       n - null\n       t - timeticks\n       At this point a value will be prompted for:\n\n       Value:\n\n       If this is an integer value, just type the integer (in decimal).  If it\n       is a decimal string, type in white-space separated decimal numbers, one\n       per byte of the string.\tAgain type a blank line at the prompt for the\n       variable name to send the packet.\n\n       GETBULK Request:\n\n       The \"GETBULK request\" mode ($B) is similar to the \"Set request\" mode.\n       GETBULK, however, is not available in SNMPv1.\n\n       Inform Request:"
  manpageQuestion1: What is the primary purpose of the snmptest tool?
  manpageQuestion2: How would you use snmptest to set an integer value of 12345 to a specific variable?
  manpageQuestion3: Can you provide an example of using snmptest to send a GETBULK request in SNMPv2c?

- prompt: |-
    You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `snmptest`.



    Manpage text:

    The "Inform request" mode ($I) is similar to the "Set request" mode.
           This type of request, however, is not available in SNMPv1. Also, the
           _agent_ specified on the snmptest command should correspond to the
           target snmptrapd agent.

           SNMPv2 Trap Request:

           The "SNMPv2 Trap Request" mode ($T) is similar to the "Set request"
           mode.  This type of request, however, is not available in SNMPv1. Also,
           the _agent_ specified on the snmptest command should correspond to the
           target snmptrapd agent.

    OPTIONS
           snmptest takes the common options described in the snmpcmd(1) manual
           page.

    EXAMPLES
           The following is an example of sending a GET request for two OIDs:

           % snmptest -v 2c -c public testhost:9999

           Variable: system.sysDescr.0
           Variable: system.sysContact.0
           Variable:
           Received Get Response from 128.2.56.220
           requestid 0x7D9FCD63 errstat 0x0 errindex 0x0
           SNMPv2-MIB::sysDescr.0 = STRING: SunOS testhost 5.9 Generic_112233-02 sun4u
           SNMPv2-MIB::sysContact.0 = STRING: x1111
  manpageQuestion1: What is the primary purpose of the snmptest command?
  manpageQuestion2: How would you use snmptest to send a GET request for the OIDs system.sysDescr.0 and system.sysContact.0 to an SNMP agent running on testhost at port 9999?
  manpageQuestion3: Can you provide an example of using snmptest in SNMPv2 Trap Request mode to simulate sending a trap to the target snmptrapd agent?

- prompt: |-
    You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `snmptest`.



    Manpage text:

    The following is an example of sending a GETNEXT request:

           Variable: SNMPv2-MIB::sysORUpTime
           Variable:
           Received Get Response from 128.2.56.220
           requestid 0x7D9FCD64 errstat 0x0 errindex 0x0
           SNMPv2-MIB::sysORUpTime.1 = Timeticks: (6) 0:00:00.06
           Variable:

           The following is an example of sending a SET request:

           Variable: $S
           Request type is Set Request
           Variable: system.sysLocation.0
           Type [i|u|s|x|d|n|o|t|a]: s
           Value: building 17
           Variable:
           Received Get Response from 128.2.56.220
           requestid 0x7D9FCD65 errstat 0x0 errindex 0x0
           SNMPv2-MIB::sysLocation.0 = STRING: building A
           Variable:

           The following is an example of sending a GETBULK request:

           Variable: $B
           Request type is Bulk Request
           Enter a blank line to terminate the list of non-repeaters
           and to begin the repeating variables
           Variable:
           Now input the repeating variables
           Variable: system.sysContact.0
           Variable: system.sysLocation.0
           Variable:
           What repeat count? 2
           Received Get Response from 128.2.56.220
           requestid 0x2EA7942A errstat 0x0 errindex 0x0
           SNMPv2-MIB::sysName.0 = STRING: testhost
           SNMPv2-MIB::sysORLastChange.0 = Timeticks: (58) 0:00:00.58
           SNMPv2-MIB::sysLocation.0 = STRING: bldg A
           SNMPv2-MIB::sysORID.1 = OID: IF-MIB::ifMIB
           Variable:
  manpageQuestion1: What is the primary purpose of the snmptest tool?
  manpageQuestion2: How would you use snmptest to send a GETNEXT request for the SNMP variable sysORUpTime?
  manpageQuestion3: Can you provide an example of using snmptest to send a GETBULK request and retrieve multiple SNMP variables?

- prompt: |-
    You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `snmptest`.



    Manpage text:

    The following is an example of sending an Inform request:

           snmptest -v 2c -c public snmptrapd_host
           Variable: $I
           Request type is Inform Request
           (Are you sending to the right port?)
           Variable: system.sysContact.0
           Type [i|u|sIx|d|n|o|t|a]: s
           Value: x12345
           Variable:
           Inform Acknowledged
           Variable:

           The snmptrapd_host will show:

           snmptrapd_host [<ip address>]: Trap SNMPv2-MIB::sysContact.0 = STRING:
           x12345

           The following is an example of sending an SNMPv2 Trap request:

           snmptest -v 2c -c public snmptrapd_host
           Variable: $T
           Request type is SNMPv2 Trap Request
           (Are you sending to the right port?)
           Variable: system.sysLocation.0
           Type [i|u|s|x|d|n|o|t|a]: s
           Value: building a
           Variable:

           The snmptrapd_host will show:

           snmptrapd_host [<ip address>]: Trap SNMPv2-MIB::sys.0 = STRING:
           building a

    SEE ALSO
           snmpcmd(1), snmpget(1), snmpset(1), variables(5)
  manpageQuestion1: What is the primary purpose of the snmptest tool?
  manpageQuestion2: How would you use snmptest to send an SNMPv2 Inform Request with a STRING value for sysContact?
  manpageQuestion3: Can you provide an example of using snmptest to send an SNMPv2 Trap Request with a STRING value for sysLocation?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `snmptest`.\n\n\n\nManpage text:\n\nV5.6.2.1\t\t\t  06 Sep 2003\t\t\t   SNMPTEST(1)"
  manpageQuestion1: What is the primary purpose of the snmptest tool?
  manpageQuestion2: How would you use snmptest to query the system's system uptime using SNMP?
  manpageQuestion3: Can you provide an example of using snmptest to check the status of a network interface on a remote device?

