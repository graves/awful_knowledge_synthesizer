- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ntext`.\n\n\n\nManpage text:\n\nntext(n)\t   Alternative Bindings for the Text Widget\t      ntext(n)\n\n______________________________________________________________________________\n\nNAME\n       ntext - Alternative Bindings for the Text Widget\n\nSYNOPSIS\n       package require Tcl  8.5\n\n       package require Tk  8.5\n\n       package require ntext  ?0.81?\n\n______________________________________________________________________________\n\nDESCRIPTION\n       The purpose of the ntext package is to make the text widget behave more\n       like other text-editing applications. It makes the text widget more\n       useful for implementing a text editor, and makes it behave in a way\n       that will be more familiar to most users.\n\n       The package provides a binding tag named Ntext for use by text widgets\n       in place of the default Text binding tag.\n\n       Package ntext 's functions and variables are contained entirely in the\n       ::ntext namespace; its other code is contained in the binding tag\n       Ntext.  ntext has no exports to the global or other namespaces, and no\n       new widget commands.  It uses modified copies of the Tk code, leaving\n       the original code, and the Text binding tag, unchanged."
  manpageQuestion1: What is the primary purpose of the ntext package?
  manpageQuestion2: How do you install and use the ntext package in Tcl/Tk?
  manpageQuestion3: What is the main difference between the default Text binding tag and the Ntext binding tag in Tcl/Tk?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ntext`.\n\n\n\nManpage text:\n\nThe differences between the Ntext binding tag and the default Text\n       binding tag are in three categories:\n\n       •      Some Text bindings behave differently from most text-editing\n\t      applications.  Ntext gives these bindings more familiar\n\t      behaviour.  For details see ntextBindings.\n\n       •      When a logical line with leading whitespace is word-wrapped onto\n\t      more than one display line, the wrapped display lines begin\n\t      further to the left than the first display line, which can make\n\t      the text layout untidy and difficult to read.  Ntext can indent\n\t      the wrapped lines to match the leading whitespace of the first\n\t      display line (this facility is switched off by default).\tFor\n\t      details see ntextIndent.\n\n       •      When the user navigates or selects text, Tcl/Tk sometimes needs\n\t      to detect word boundaries.  Ntext provides improved rules for\n\t      word boundary detection.\tFor details see ntextWordBreak.\n\n       The remainder of this page describes the basic use and configuration of\n       all three aspects of Ntext.  For more detailed information on the\n       different facilities of Ntext, see the pages ntextBindings,\n       ntextIndent, and ntextWordBreak."
  manpageQuestion1: What is the primary purpose of the Ntext resource?
  manpageQuestion2: How can you configure Ntext to indent wrapped lines so that they match the leading whitespace of the first display line?
  manpageQuestion3: What is the difference between the default Text binding tag and the Ntext binding tag in terms of word boundary detection?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ntext`.\n\n\n\nManpage text:\n\nSee Section EXAMPLE for how to apply the Ntext binding tag in place of\n       the Text binding tag.\n\nCONFIGURATION OPTIONS\n       Ntext provides alternatives to a number of behaviours of the classic\n       Text binding tag.  Where there is an option, the Ntext behaviour\n       (except for display-line indentation) is switched on by default.\n\n       The behaviour of Ntext may be configured application-wide by setting\n       the values of a number of namespace variables:\n\n       ::ntext::classicAnchor\n\n       •      0 - (default value) selects Ntext behaviour, i.e. the anchor\n\t      point is fixed\n\n       •      1 - selects classic Text behaviour, i.e. the anchor point is\n\t      variable\n\n       ::ntext::classicExtras\n\n       •      0 - (default value) selects Ntext behaviour, i.e. several\n\t      traditional Text bindings are de-activated\n\n       •      1 - selects classic Text behaviour, i.e. all Text bindings are\n\t      activated\n\n       ::ntext::classicMouseSelect\n\n       •      0 - (default value) selects Ntext behaviour, i.e. the anchor\n\t      point for mouse selection operations is moved by keyboard\n\t      navigation"
  manpageQuestion1: What is the primary purpose of the ntext resource?
  manpageQuestion2: How can you configure ntext to use classic Text binding behaviours instead of Ntext's default?
  manpageQuestion3: What is the effect of setting ::ntext::classicAnchor to 1?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ntext`.\n\n\n\nManpage text:\n\n•      1 - selects classic Text behaviour\n\n       ::ntext::classicWordBreak\n\n       •      0 - (default value) selects Ntext behaviour, i.e. platform-\n\t      independent, two classes of word characters and one class of\n\t      non-word characters.\n\n       •      1 - selects classic Text behaviour, i.e. platform-dependent, one\n\t      class of word characters and one class of non-word characters\n\n       •      After changing this value, the matching patterns should be\n\t      recalculated.  See ntextWordBreak for details and advanced\n\t      configuration options.\n\n       ::ntext::classicWrap\n\n       •      0 - selects Ntext behaviour, i.e. display lines of text widgets\n\t      in -wrap word mode are indented to match the initial whitespace\n\t      of the first display line of a logical line.  If the widget\n\t      already holds text when this value is set, a function call may\n\t      be necessary.  See ntextIndent for detailed instructions on the\n\t      use of Ntext 's indentation.\n\n       •      1 - (default value) selects classic Text behaviour, i.e. no\n\t      indentation"
  manpageQuestion1: What is the primary purpose of the ntext resource?
  manpageQuestion2: How would you configure the ntext resource to use classic Text behaviour for word break handling?
  manpageQuestion3: Can you provide an example of setting the ntext resource to enable classic Text behaviour for line wrapping?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ntext`.\n\n\n\nManpage text:\n\n::ntext::overwrite\n\n       •      0 - (initial value) text typed at the keyboard is inserted into\n\t      the widget\n\n       •      1 - text typed at the keyboard overwrites text already in the\n\t      widget\n\n       •      The value is toggled by the Insert key.\n\nEXAMPLE\n       To create a text widget .t and use the Ntext bindings:\n\n       package require ntext\n       text .t\n       bindtags .t {.t Ntext . all}\n\n       See bindtags for more information.\n\nSEE ALSO\n       bindtags, ntextBindings, ntextIndent, ntextWordBreak, re_syntax,\n       regexp, text\n\nKEYWORDS\n       bindtags, re_syntax, regexp, text\n\nntext\t\t\t\t     0.81\t\t\t      ntext(n)"
  manpageQuestion1: What is the primary purpose of the ntext resource in macOS?
  manpageQuestion2: How can you configure a text widget to overwrite existing text when new input is typed?
  manpageQuestion3: Can you provide an example of setting up a text widget with the ntext bindings to enable the overwrite functionality?

