- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `socketmap_table`.\n\n\n\nManpage text:\n\nSOCKETMAP_TABLE(5)\t      File Formats Manual\t    SOCKETMAP_TABLE(5)\n\n\nNAME\n       socketmap_table - Postfix socketmap table lookup client\n\nSYNOPSIS\n       postmap -q \"string\" socketmap:inet:host:port:name\n       postmap -q \"string\" socketmap:unix:pathname:name\n\n       postmap -q - socketmap:inet:host:port:name <inputfile\n       postmap -q - socketmap:unix:pathname:name <inputfile\n\nDESCRIPTION\n       The Postfix mail system uses optional tables for address rewriting.\n       mail routing or policy lookup.\n\n       The Postfix socketmap client expects TCP endpoint names of the form\n       inet:host:port:name, or UNIX-domain endpoints of the form\n       unix:pathname:name.  In both cases, name specifies the name field in a\n       socketmap client request (see \"REQUEST FORMAT\" below).\n\nPROTOCOL\n       Socketmaps use a simple protocol: the client sends one request, and the\n       server sends one reply.\tEach request and reply are sent as one\n       netstring object.\n\nREQUEST FORMAT\n       The socketmap protocol supports only the lookup request.  The request\n       has the following form:"
  manpageQuestion1: What is the primary purpose of the socketmap_table resource?
  manpageQuestion2: How would you use the socketmap_table tool to look up a TCP endpoint named 'example.com:25:name1'?
  manpageQuestion3: Can you provide an example of using the socketmap_table tool to look up a UNIX-domain endpoint with the pathname '/var/run/postfix/socket' and name 'mysocketname'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `socketmap_table`.\n\n\n\nManpage text:\n\nname <space> key\n\t      Search the named socketmap for the specified key.\n\n       Postfix will not generate partial search keys such as domain names\n       without one or more subdomains, network addresses without one or more\n       least-significant octets, or email addresses without the localpart,\n       address extension or domain portion. This behavior is also found with\n       cidr:, pcre:, and regexp: tables.\n\nREPLY FORMAT\n       The Postfix socketmap client requires that replies are not longer than\n       100000 characters (not including the netstring encapsulation). Replies\n       must have the following form:\n\n       OK <space> data\n\t      The requested data was found.\n\n       NOTFOUND <space>\n\t      The requested data was not found.\n\n       TEMP <space> reason\n\n       TIMEOUT <space> reason\n\n       PERM <space> reason\n\t      The request failed. The reason, if non-empty, is descriptive\n\t      text.\n\nSECURITY\n       This map cannot be used for security-sensitive information,\n       because neither the connection nor the server are authenticated."
  manpageQuestion1: What is the primary purpose of the socketmap_table resource?
  manpageQuestion2: How can you use socketmap_table to search for a key in a named socketmap?
  manpageQuestion3: What are the possible reply formats that the socketmap_table client can receive, and what do they signify?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `socketmap_table`.\n\n\n\nManpage text:\n\nSEE ALSO\n       http://cr.yp.to/proto/netstrings.txt, netstring definition\n       postconf(1), Postfix supported lookup tables\n       postmap(1), Postfix lookup table manager\n       regexp_table(5), format of regular expression tables\n       pcre_table(5), format of PCRE tables\n       cidr_table(5), format of CIDR tables\n\nREADME FILES\n       Use \"postconf readme_directory\" or \"postconf html_directory\" to locate\n       this information.\n       DATABASE_README, Postfix lookup table overview\n\nBUGS\n       The protocol limits are not yet configurable.\n\nLICENSE\n       The Secure Mailer license must be distributed with this software.\n\nHISTORY\n       Socketmap support was introduced with Postfix version 2.10.\n\nAUTHOR(S)\n       Wietse Venema\n       IBM T.J. Watson Research\n       P.O. Box 704\n       Yorktown Heights, NY 10598, USA\n\n       Wietse Venema\n       Google, Inc.\n       111 8th Avenue\n       New York, NY 10011, USA\n\n\t\t\t\t\t\t\t    SOCKETMAP_TABLE(5)"
  manpageQuestion1: What is the primary purpose of the socketmap_table resource?
  manpageQuestion2: How would you use the socketmap_table to define a mapping between IP addresses and port numbers in Postfix?
  manpageQuestion3: Can you provide an example of how to configure the socketmap_table to handle a specific CIDR range?

