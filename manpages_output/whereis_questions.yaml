- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `whereis`.\n\n\n\nManpage text:\n\nWHEREIS(1)\t\t    General Commands Manual\t\t    WHEREIS(1)\n\nNAME\n     whereis – locate programs\n\nSYNOPSIS\n     whereis [-abmqu] [-BM dir ... -f] program ...\n\nDESCRIPTION\n     The whereis utility checks the standard binary, and manual page\n     directories for the specified programs, printing out the paths of any it\n     finds.  The supplied program names are first stripped of leading path\n     name components and any single trailing extension added by gzip(1),\n     compress(1), or bzip2(1).\n\n     The default path searched is the string returned by the sysctl(8) utility\n     for the “user.cs_path” string, with /usr/libexec and the current user's\n     $PATH appended.  Manual pages are searched by default along the $MANPATH.\n\n     The following options are available:\n\n     -B      Specify directories to search for binaries.  Requires the -f\n\t     option.\n\n     -M      Specify directories to search for manual pages.  Requires the -f\n\t     option.\n\n     -a      Report all matches instead of only the first of each requested\n\t     type."
  manpageQuestion1: What is the primary purpose of the whereis command?
  manpageQuestion2: How can you use whereis to find all occurrences of the program 'grep' in both binary and manual page directories?
  manpageQuestion3: What command would you use with whereis to search for manual pages of the 'ls' command in specific directories, such as /usr/share/man and /opt/local/man?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `whereis`.\n\n\n\nManpage text:\n\n-b      Search for binaries.\n\n     -f      Delimits the list of directories after the -B, -M, or -S options,\n\t     and indicates the beginning of the program list.\n\n     -m      Search for manual pages.\n\n     -q      (“quiet”).  Suppress the output of the utility name in front of\n\t     the normal output line.  This can become handy for use in a\n\t     backquote substitution of a shell command line, see EXAMPLES.\n\n     -u      Search for “unusual” entries.  A file is said to be unusual if it\n\t     does not have at least one entry of each requested type.  Only\n\t     the name of the unusual entry is printed.\n\nEXAMPLES\n     The following finds all utilities under /usr/bin that do not have\n     documentation:\n\n\t   whereis -m -u /usr/bin/*\n\nSEE ALSO\n     find(1), locate(1), man(1), which(1), sysctl(8)\n\nHISTORY\n     The whereis utility appeared in 3.0BSD.  This version re-implements the\n     historical functionality that was lost in 4.4BSD.\n\nAUTHORS\n     This implementation of the whereis command was written by Jörg Wunsch."
  manpageQuestion1: What is the primary purpose of the whereis command?
  manpageQuestion2: How can you use whereis to find all manual pages located in the /usr/share/man directory?
  manpageQuestion3: Can you provide an example of using whereis to search for "unusual" entries in the /usr/local/bin directory?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `whereis`.\n\n\n\nManpage text:\n\nBUGS\n     This re-implementation of the whereis utility is not bug-for-bug\n     compatible with historical versions.  It is believed to be compatible\n     with the version that was shipping with FreeBSD 2.2 through FreeBSD 4.5\n     though.\n\nmacOS 15.3\t\t\tAugust 22, 2002 \t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the whereis command?
  manpageQuestion2: How can you use the whereis command to find the location of a specific file or executable?
  manpageQuestion3: What is the difference between the traditional whereis utility and the re-implementation provided in macOS?

