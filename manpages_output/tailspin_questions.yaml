- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `tailspin`.\n\n\n\nManpage text:\n\ntailspin(1)\t\t    General Commands Manual\t\t   tailspin(1)\n\nNAME\n     tailspin – configure, save and print tailspin output\n\nSYNOPSIS\n     tailspin info\n     tailspin enable\n     tailspin disable\n     tailspin set buffer-size buffer-size-mb\n\t\t ktrace-filter-descriptor (add:|remove:)filter-desc\n\t\t oncore-sampling-period period-in-ns|disabled\n\t\t full-system-sampling-period period-in-ns|disabled\n\t\t sampling-option (add:|remove:)options\n     tailspin reset\n\t\t [buffer-size-mb|ktrace-filter-descriptor|oncore-sampling-period|full-system-sampling-period]\n     tailspin save [-r reason-string] [-l num-seconds] [-n] path-to-file\n     tailspin augment [-s] [-d] [-a] [-l] [-L path-to-log-archive]\n\t\t path-to-file\n     tailspin stat [-v] [-s] path-to-file\n\nDESCRIPTION\n     tailspin configures the system to continuously sample callstacks of\n     processes and select kdebug events in the kernel trace buffer. When\n     tailspin data is recorded to a file, the tailspin file will contain\n     information about the system state from about 20s prior to the save. The\n     tailspind daemon is a helper daemon for the tailspin feature and should\n     not be run manually."
  manpageQuestion1: What is the primary purpose of the tailspin tool?
  manpageQuestion2: How can you configure tailspin to enable continuous sampling of callstacks and kdebug events?
  manpageQuestion3: What command would you use to save tailspin data to a file with a specified reason and duration?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `tailspin`.\n\n\n\nManpage text:\n\nCOLLECTING TAILSPIN DATA\n     tailspin data can be collected using the keychord when enabled:\n     Shift-Control-Option-Command-Comma. When the command is completed, a\n     Finder window will pop up with the saved tailspin file.\n\nSUBCOMMANDS\n     tailspin uses a subcommand syntax to separate different functionality\n     into logical groups.  Each subcommand takes its own set of options.\n\n     info\tPrint information about the current configuration of tailspin.\n\n     enable\tEnable tailspin collection. Enablement persists across reboots\n\t\tand upgrade installs.\n\n     disable\tStop tailspin collection. Disablement persists across reboots\n\t\tand upgrade installs. tailspin can be enabled again after it\n\t\thas been disabled, using the same configuration.\n\n     set\tConfigure the 4 tunable parameters of tailspin. Any change\n\t\tapplied will persist across reboots and upgrade installs.\n\n\t\tbuffer-size buffer-size-mb\n\t\t\tSet up the kernel trace buffer to be buffer-size-mb\n\t\t\tbig.\n\n\t\tktrace-filter-descriptor (add:|remove:)filter-desc\n\t\t\tApply the filter-desc to the tailspin configuration,\n\t\t\tthereby controlling which events are traced by\n\t\t\ttailspin.  See FILTER DESCRIPTIONS on the syntax of a\n\t\t\tfilter. The filter may be prefixed with \"add:\" or\n\t\t\t\"remove:\" to modify an existing filter rather than\n\t\t\treplace it entirely"
  manpageQuestion1: What is the primary purpose of the tailspin tool?
  manpageQuestion2: How would you enable tailspin collection and set the buffer size to 64 MB?
  manpageQuestion3: Can you provide an example of using the set subcommand to add a filter descriptor for tailspin tracing?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `tailspin`.\n\n\n\nManpage text:\n\noncore-sampling-period period-in-ns\n\t\t\tSet up a timer in the tailspin configuration to sample\n\t\t\tthe threads that are on the CPU when the timer fires\n\t\t\tevery period-in-ns.  The minimum period allowed is 1\n\t\t\tms. \"disabled\" may be used to disable the oncore\n\t\t\tsampling timer.\n\n\t\tfull-system-sampling-period period-in-ns\n\t\t\tSet up a timer in the tailspin configuration to sample\n\t\t\tall threads of all processes when the timer fires\n\t\t\tevery period-in-ns.  The minimum period allowed is 10\n\t\t\tms. \"disabled\" may be used to disable the full\n\t\t\tsampling timer.\n\n\t\tsampling-option (add:|remove:)options\n\t\t\tApply the sampling options specified by options to the\n\t\t\ttailspin configuration, thereby controlling what\n\t\t\tsampling is enabled by tailspin. See SAMPLING OPTIONS\n\t\t\ton the syntax of a sampling options.\n\n     reset\n\t\t[buffer-size-mb|ktrace-filter-descriptor|oncore-sampling-period|full-system-sampling-period]\n\t\tRemove all custom configuration of tailspin and reset to\n\t\tsystem default, or reset specific setting to the system\n\t\tdefault."
  manpageQuestion1: What is the primary purpose of the tailspin tool?
  manpageQuestion2: How would you use tailspin to configure a sampling timer that samples threads on the CPU every 10 milliseconds?
  manpageQuestion3: Can you provide an example of resetting the tailspin configuration to its system default settings?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `tailspin`.\n\n\n\nManpage text:\n\nsave [-r reason-string] [-l num-seconds] [-n] [path-to-file]\n\n\t\tSave the current contents of the kernel trace buffer\n\t\tcontaining tailspin data to path-to-file.\n\n\t\t-r reason-string\n\t\t\tInclude a key in the tailspin file indicating why it\n\t\t\twas saved. This reason can be viewed with tailspin\n\t\t\tstat.\n\n\t\t-l num-seconds\n\t\t\tLimit the data in tailspin file to that of the last\n\t\t\tnum-seconds.\n\n\t\t-n\tSave tailspin file without symbolicating.\n\n     augment [-d] [-s] [-l] [-L -path-to-log-archive] path-to-file\n\t\tAugment the tailspin report at path-to-file with additional\n\t\tinformation like symbols, os logs and os signposts.  If not\n\t\tused with -d, needs to be run on the same device and build on\n\t\twhich the tailspin file was saved .\n\n     stat [-v] [-s] path-to-file\n\t\tPrint aggregate information about the data in the tailspin\n\t\tfile.\n\n\t\t-v\tPrint layout information of tailspin file.\n\n\t\t-s\tSort ktrace statistics by frequency of trace\n\t\t\tclass/subclass. Default sorting is by class/subclass\n\t\t\tcode.\n\nFILTER DESCRIPTIONS\n     A filter description is a comma-separated list of class and subclass\n     specifiers that indicate which events should be traced.   A class\n     specifier starts with ‘C’ followed by a number between 0 and 255\n     inclusive, specified in either decimal or hex (when prepended with \"0x\").\n     A subclass specifier starts with ‘S’ and takes two bytes.\tThe high byte\n     is the class and the low byte is the subclass of that class."
  manpageQuestion1: What is the primary purpose of the tailspin tool?
  manpageQuestion2: How can you save the current kernel trace buffer containing tailspin data to a file named 'trace_data.txt' with a reason string 'Debugging kernel issues' and limit the data to the last 30 seconds?
  manpageQuestion3: What command would you use to augment a tailspin report file 'report.tailspin' with additional information like symbols and logs, without symbolicating the data?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `tailspin`.\n\n\n\nManpage text:\n\nFor example, this filter description would enable classes 0x1 and 0x25\n     and the subclasses 0x21 and 0x23 of class 0x5:\n     ‘C1,C0x25,S0x0521,S0x0523’.  The ‘ALL’ filter description enables events\n     from all classes.\n\nSAMPLING OPTIONS\n     Sampling options are specified via a comma-separated list of recognized\n     names that indicate what sampling should be enabled/disabled.  The names\n     that are recognized are: ‘cswitch-sampling’, ‘syscall-sampling’ and\n     ‘vmfault-sampling’\n\nVIEWING TAILSPIN DATA\n     tailspin data can be viewed by ktrace(1), spindump(8) and fs_usage(1).\n\nDIAGNOSTICS\n     The tailspin utility exits 0 on success, and >0 if an error occurs.\n\nSEE ALSO\n     ktrace(1), fs_usage(1), spindump(8)\n\nDarwin\t\t\t\t 22 June 2016\t\t\t\tDarwin"
  manpageQuestion1: What is the primary purpose of the tailspin utility?
  manpageQuestion2: How can you enable sampling for both ‘cswitch-sampling’ and ‘syscall-sampling’ using tailspin?
  manpageQuestion3: Which tools can be used to view the data generated by tailspin?

