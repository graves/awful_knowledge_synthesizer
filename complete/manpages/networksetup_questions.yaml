- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `networksetup`.\n\n\n\nManpage text:\n\nNETWORKSETUP(8) \t    System Manager's Manual\t       NETWORKSETUP(8)\n\nNAME\n     networksetup – configuration tool for network settings in System\n     Preferences.\n\nSYNOPSIS\n     networksetup [-listnetworkserviceorder] [-listallnetworkservices]\n\t\t  [-listallhardwareports] [-detectnewhardware]\n\t\t  [-getmacaddress hardwareport] [-getcomputername]\n\t\t  [-setcomputername computername] [-getinfo networkservice]\n\t\t  [-setmanual networkservice ip subnet router]\n\t\t  [-setdhcp networkservice [clientid]]\n\t\t  [-setbootp networkservice]\n\t\t  [-setmanualwithdhcprouter networkservice ip]\n\t\t  [-getadditionalroutes networkservice]\n\t\t  [-setadditionalroutes\n\t\t  networkservice [dest1 mask1 gate1]\n\t\t  [dest2 mask2 gate2] ... [destN maskN gateN]]\n\t\t  [-setv4off networkservice] [-setv6off networkservice]\n\t\t  [-setv6automatic networkservice]\n\t\t  [-setv6linklocal networkservice]\n\t\t  [-setv6manual networkservice address prefixLength router]\n\t\t  [-getv6additionalroutes networkservice]\n\t\t  [-setv6additionalroutes networkservice [dest1 prefixlength1 gate1] [dest2 prefixlength2 gate2] ... [destN prefixlengthN gateN]]\n\t\t  [-getdnsservers networkservice]\n\t\t  [-setdnsservers networkservice dns1 [dns2] [...]]\n\t\t  [-getsearchdomains networkservice]\n\t\t  [-setsearchdomains networkservice domain1 [domain2] [...]]\n\t\t  [-create6to4service networkservicename]\n\t\t  [-set6to4automatic networkservice]\n\t\t  [-set6to4manual networkservice relayAddress]\n\t\t  [-getwebproxy networkservice]\n\t\t  [-setwebproxy networkservice\n\t\t  domain portnumber authenticated username password]\n\t\t  [-setwebproxystate networkservice on | off]\n\t\t  [-getsecurewebproxy networkservice]\n\t\t  [-setsecurewebproxy\n\t\t  networkservice domain portnumber\n\t\t  authenticated username password]\n\t\t  [-setsecurewebproxystate networkservice on | off]\n\t\t  [-getsocksfirewallproxy networkservice]\n\t\t  [-setsocksfirewallproxy networkservice domain portnumber authenticated username password]\n\t\t  [-setsocksfirewallproxystate networkservice on | off]\n\t\t  [-getproxybypassdomains networkservice]\n\t\t  [-setproxybypassdomains networkservice domain1 [domain2] [...]]\n\t\t  [-getproxyautodiscovery networkservice]\n\t\t  [-setproxyautodiscovery networkservice on | off]\n\t\t  [-getairportnetwork device]\n\t\t  [-setairportnetwork device network [password]]\n\t\t  [-getairportpower device] [-setairportpower device on | off]\n\t\t  [-listpreferredwirelessnetworks hardwareport]\n\t\t  [-addpreferredwirelessnetworkatindex hardwareport network index securitytype [password]]\n\t\t  [-removepreferredwirelessnetwork hardwareport network]\n\t\t  [-removeallpreferredwirelessnetworks hardwareport]\n\t\t  [-getnetworkserviceenabled networkservice]\n\t\t  [-setnetworkserviceenabled networkservice on | off]\n\t\t  [-createnetworkservice networkservicename hardwareport]\n\t\t  [-renamenetworkservice networkservice newnetworkservicename]\n\t\t  [-duplicatenetworkservice networkservice newnetworkservicename]\n\t\t  [-removenetworkservice networkservice]\n\t\t  [-ordernetworkservices service1 [service2] [service3] [...]]\n\t\t  [-getMTU hardwareport] [-setMTU hardwarePort value]\n\t\t  [-listvalidMTUrange hardwareport] [-getmedia hardwareport]\n\t\t  [-setmedia hardwareport subtype [option1] [option2] [...]]\n\t\t  [-listvalidmedia hardwareport]\n\t\t  [-createVLAN name parentdevice tag]\n\t\t  [-deleteVLAN name parentdevice tag] [-listVLANs]\n\t\t  [-listdevicesthatsupportVLAN] [-isBondSupported device]\n\t\t  [-createBond name [device1] [device2] [...]]\n\t\t  [-deleteBond bond] [-addDeviceToBond device bond]\n\t\t  [-removeDeviceFromBond device bond] [-listBonds]\n\t\t  [-showBondStatus bond] [-listpppoeservices]\n\t\t  [-showpppoestatus name]\n\t\t  [-createpppoeservice device name\n\t\t  account password [pppoeName]] [-deletepppoeservice service]\n\t\t  [-setpppoeaccountname service account]\n\t\t  [-setpppoepassword service password]\n\t\t  [-connectpppoeservice service]\n\t\t  [-disconnectpppoeservice service] [-listlocations]\n\t\t  [-getcurrentlocation] [-createlocation location [populate]]\n\t\t  [-deletelocation location] [-switchtolocation location]\n\t\t  [-version] [-help] [-printcommands]"
  manpageQuestion1: What is the primary purpose of the networksetup command?
  manpageQuestion2: How can you use networksetup to set a manual IP configuration for the 'Ethernet' network service?
  manpageQuestion3: Can you provide an example of using networksetup to configure the DNS servers for the 'Wi-Fi' network service?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `networksetup`.\n\n\n\nManpage text:\n\nDESCRIPTION\n     The networksetup command is used to configure network settings typically\n     configured in the System Preferences application.\tThe networksetup\n     command requires at least admin privileges to change network settings.\n     If the \"Require an administrator password to access system-wide\n     preferences\" option is selected in System Preferences > Security &\n     Privacy, then root privileges are required to change network settings.\n\n     Any flag that takes a password will accept \"-\" in place of the password\n     to indicate it should read the password from stdin.\n\n     A list of flags and their descriptions:\n\n     -listnetworkserviceorder\n\t     Displays a list of network services in the order they are\n\t     contacted for a connection, along with the corresponding port and\n\t     device for each.  An asterisk (*) next to a service means the\n\t     service is inactive.\n\n     -listallnetworkservices\n\t     Displays a list of all the network services on the server's\n\t     hardware ports.  An asterisk (*) denotes that a network service\n\t     is disabled."
  manpageQuestion1: What is the primary purpose of the networksetup command?
  manpageQuestion2: How can you use networksetup to list all network services on the system?
  manpageQuestion3: What is the process for using networksetup to display the order of network services with their associated port and device information?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `networksetup`.\n\n\n\nManpage text:\n\n-listallhardwareports\n\t     Displays list of hardware ports with corresponding device name\n\t     and ethernet address.\n\n     -detectnewhardware\n\t     Detects new network hardware and creates a default network\n\t     service on the hardware.\n\n     -getmacaddress hardwareport\n\t     Displays ethernet (or Wi-Fi) address for hardwareport or device\n\t     specified.\n\n     -getcomputername\n\t     Displays the computer name.\n\n     -setcomputername computername\n\t     Sets computer name to <computername>.  This name is used by AFP.\n\n     -getinfo networkservice\n\t     Displays the IP address, subnet mask, router, and hardware\n\t     address for the <networkservice> that you specify.\n\n     -setmanual networkservice ip subnet router\n\t     Set the TCP/IP configuration for <networkservice> to manual with\n\t     IP address set to <ip>, Subnet Mask set to <subnet>, and Router\n\t     address set to <router>.\n\n     -setdhcp networkservice [clientid]\n\t     Use this command to set the TCP/IP configuration for the\n\t     specified <networkservice> to use DHCP.  The client ID is\n\t     optional.\tSpecify \"Empty\" for [clientid] to clear the DHCP\n\t     client id."
  manpageQuestion1: What is the primary purpose of the networksetup command?
  manpageQuestion2: How would you use networksetup to detect new network hardware and set up a default network service?
  manpageQuestion3: Can you provide an example of using networksetup to set a manual IP configuration for a specific network service?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `networksetup`.\n\n\n\nManpage text:\n\n-setbootp networkservice\n\t     Use this command to set the TCP/IP configuration for the\n\t     specified <networkservice> to use BOOTP.\n\n     -setmanualwithdhcprouter networkservice ip\n\t     Use this command to specify a manual IP address to use for DHCP\n\t     for the specified <networkservice>.\n\n     -getadditionalroutes networkservice\n\t     Use this command to display the list of additional IPv4 routes\n\t     configured for the service.\n\n     -setadditionalroutes networkservice [dest1 mask1 gate1] [dest2 mask2\n\t     gate2] ... [destN maskN gateN]\n\t     Use this command to set the list of IPv4 additional routes\n\t     configured for the service.  Each route is specified as a\n\t     (destination address, subnet mask, gateway address) tuple.\n\t     Specifying no tuples clears the list of routes.\n\n     -setv4off networkservice\n\t     Use this command to turn IPv4 off on the specified\n\t     <networkservice>.\n\n     -setv6off networkservice\n\t     Use this command to turn IPv6 off on the specified\n\t     <networkservice>."
  manpageQuestion1: What is the primary purpose of the networksetup command?
  manpageQuestion2: How can you use networksetup to disable IPv4 on a specific networkservice named 'en0'?
  manpageQuestion3: 'Can you provide an example of using networksetup to set additional IPv4 routes for a networkservice called ''en1'' with two routes: 192.168.1.0/24 via 192.168.1.254 and 10.0.0.0/24 via 10.0.0.1?'

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `networksetup`.\n\n\n\nManpage text:\n\n-setv6automatic networkservice\n\t     Use this command to set IPv6 to get its addresses automatically\n\t     for <networkservice>.\n\n     -setv6linklocal networkservice\n\t     Use this command to set IPv6 to only use link local for\n\t     <networkservice>.\n\n     -setv6manual ip prefixlength router\n\t     Use this command to set IPv6 to get its addresses manually for\n\t     <networkservice>. Specify the ip address, the prefix length and\n\t     the router.\n\n     -getv6additionalroutes networkservice\n\t     Use this command to display the list of additional IPv6 routes\n\t     configured for the service.\n\n     -setv6additionalroutes networkservice [dest1 prefixlength1 gate1] [dest2\n\t     prefixlength2 gate2] ... [destN prefixlengthN gateN]\n\t     Use this command to set the list of additional routes configured\n\t     for the service.  Each route is specified as a\n\t     (destination address, prefix length, gateway address) tuple.\n\t     Specifying no tuples clears the list of routes.\n\n     -getdnsservers networkservice\n\t     Displays DNS info for <networkservice>."
  manpageQuestion1: What is the primary purpose of the networksetup command?
  manpageQuestion2: How would you use networksetup to configure a network service to obtain IPv6 addresses automatically?
  manpageQuestion3: Can you provide an example of using networksetup to set additional IPv6 routes for a specific network service?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `networksetup`.\n\n\n\nManpage text:\n\n-setdnsservers networkservice dns1 [dns2] [...]\n\t     Use this command to specify the IP addresses of servers you want\n\t     the specified <networkservice> to use to resolve domain names.\n\t     You can list any number of servers (replace dns1, dns2, and so on\n\t     with the IP addresses of domain name servers).  If you want to\n\t     clear all DNS entries for the specified network service, type\n\t     \"empty\" in place of the DNS server names.\n\n     -getsearchdomains networkservice\n\t     Displays Domain Name info for <networkservice>.\n\n     -setsearchdomains networkservice domain1 [domain2] [...]\n\t     Use this command to designate the search domain for the specified\n\t     <networkservice>. You can list any number of search domains\n\t     (replace domain1, domain2, and so on with the name of a local\n\t     domain). If you want to clear all search domain entries for the\n\t     specified network service, type “empty” in place of the domain\n\t     name.\n\n     -create6to4service -<newnetworkservicename>\n\t     Use this command to create a new 6 to 4 service with name\n\t     <newnetworkservicename>."
  manpageQuestion1: What is the primary purpose of the networksetup command?
  manpageQuestion2: How would you use networksetup to set DNS servers for a specific network service?
  manpageQuestion3: Can you provide an example of using networksetup to configure search domains for a network service?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `networksetup`.\n\n\n\nManpage text:\n\n-set6to4automatic -<newnetworkservicename>\n\t     Use this command to set the 6 to 4 service such that it will get\n\t     the relay address automatically.\n\n     -set6to4manual -<newnetworkservicename> -<relayaddress>\n\t     Use this command to set the 6 to 4 service such that it will get\n\t     the relay address manually.  Specify the <relayaddress> that you\n\t     would like to set.\n\n     -getwebproxy networkservice\n\t     Displays Web proxy (server, port, enabled value) info for\n\t     <networkservice>.\n\n     -setwebproxy networkservice domain portnumber authenticated username\n\t     password\n\t     Set Web proxy for <networkservice> with <domain> and <port\n\t     number>.  Turns proxy on.\tOptionally, specify <on> or <off> for\n\t     <authenticated> to enable and disable authenticated proxy\n\t     support.  Specify <username> and <password> if you turn\n\t     authenticated proxy support on.\n\n     -setwebproxystate networkservice on | off\n\t     Set Web proxy on <networkservice> to either <on> or <off>."
  manpageQuestion1: What is the primary purpose of the networksetup command in this context?
  manpageQuestion2: How can you configure a 6to4 service to use a manual relay address with networksetup?
  manpageQuestion3: What command can be used to set the Web proxy for a specific networkservicename with authentication details?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `networksetup`.\n\n\n\nManpage text:\n\n-getsecurewebproxy networkservice\n\t     Displays Secure Web proxy (server, port, enabled value) info for\n\t     <networkservice>.\n\n     -setsecurewebproxy networkservice domain portnumber authenticated\n\t     username password\n\t     Set Secure Web proxy for <networkservice> with <domain> and <port\n\t     number>.  Turns proxy on.\tOptionally, specify <on> or <off> for\n\t     <authenticated> to enable and disable authenticated proxy\n\t     support.  Specify <username> and <password> if you turn\n\t     authenticated proxy support on.\n\n     -setsecurewebproxystate networkservice on | off\n\t     Set SecureWeb proxy on <networkservice> to either <on> or <off>.\n\n     -getsocksfirewallproxy networkservice\n\t     Displays SOCKS Firewall proxy (server, port, enabled value) info\n\t     for <networkservice>.\n\n     -setsocksfirewallproxy networkservice domain portnumber authenticated\n\t     username password\n\t     Set SOCKS Firewall proxy for <networkservice> with <domain> and\n\t     <port number>.  Turns proxy on.  Optionally, specify <on> or\n\t     <off> for <authenticated> to enable and disable authenticated\n\t     proxy support.  Specify <username> and <password> if you turn\n\t     authenticated proxy support on."
  manpageQuestion1: What is the primary purpose of the networksetup command in macOS?
  manpageQuestion2: How can you set a Secure Web proxy for the 'Ethernet' network service with domain 'example.com', port 8080, and enable authenticated proxy support using username 'admin' and password 'secret'?
  manpageQuestion3: Can you explain how to disable the SOCKS Firewall proxy for the 'Wi-Fi' network service using networksetup?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `networksetup`.\n\n\n\nManpage text:\n\n-setsocksfirewallproxystate networkservice on | off\n\t     Set SOCKS Firewall proxy to  either <on> or <off>.\n\n     -getproxybypassdomains networkservice\n\t     Displays Bypass Domain Names for <networkservice>.\n\n     -setproxybypassdomains networkservice domain1 [domain2] [...]\n\t     Set the Bypass Domain Name Servers for <networkservice> to\n\t     <domain1> [domain2] [...]. Any number of Domain Name servers can\n\t     be specified.  Specify \"Empty\" for <domain1> to clear all Domain\n\t     Name entries.\n\n     -getproxyautodiscovery networkservice\n\t     Displays Proxy Auto Discover for <networkservice>.\n\n     -setproxyautodiscovery networkservice on | off\n\t     Set Proxy Auto Discover for <networkservice> to either <on> or\n\t     <off>.\n\n     -setautoproxyurl networkservice url\n\t     Set proxy auto-config to url for <networkservice> and enable it.\n\n     -getautoproxyurl networkservice\n\t     Displays proxy auto-config (url, enabled) info for\n\t     <networkservice>.\n\n     -setsocksfirewallproxystate networkservice on | off\n\t     Set SOCKS Firewall proxy to  either <on> or <off>."
  manpageQuestion1: What is the primary purpose of the networksetup command's -setsocksfirewallproxystate option?
  manpageQuestion2: How would you use the networksetup command to set the SOCKS Firewall proxy state to 'on' for the network service 'Ethernet'?
  manpageQuestion3: Can you provide an example of using the networksetup command to set bypass domains for the 'Wi-Fi' network service?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `networksetup`.\n\n\n\nManpage text:\n\n-getairportnetwork hardwareport\n\t     Displays current Wi-Fi Network.\n\n     -setairportnetwork hardwareport network [password]\n\t     Set Wi-Fi Network to <network> using optional [password] if\n\t     specified.\n\n     -getairportpower hardwareport\n\t     Displays whether Wi-Fi power is on or off.\n\n     -setairportpower hardwareport on | off\n\t     Set Wi-Fi power to either <on> or <off>.\n\n     -listpreferredwirelessnetworks hardwareport\n\t     List the preferred wireless networks for <hardwareport>\n\n     -addpreferredwirelessnetworkatindex hardwareport network index\n\t     securitytype [password]\n\t     Add wireless network named <network> to preferred list for\n\t     <hardwareport> at <index>. Store the optional password in the\n\t     keychain For security type, use OPEN for none, WPA for WPA\n\t     Personal, WPA2 for WPA2 Personal, WPA/WPA2 for WPA/WPA2 Personal,\n\t     WPAE for WPA Enterprise, WPA2E for WPA2 Enterprise, WPAE/WPA2E\n\t     for WPA/WPA2 Enterprise, WEP for plain WEP, and 8021XWEP for\n\t     802.1X WEP."
  manpageQuestion1: What is the primary purpose of the networksetup command with the -getairportnetwork option?
  manpageQuestion2: How can you use networksetup to set a Wi-Fi network with a password?
  manpageQuestion3: Can you provide an example of adding a preferred wireless network to the list using the networksetup command?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `networksetup`.\n\n\n\nManpage text:\n\n-removepreferredwirelessnetwork hardwareport network\n\t     Remove <network> from the preferred wireless network list for\n\t     <hardwareport>\n\n     -removeallpreferredwirelessnetworks hardwareport\n\t     Remove all networks from the preferred wireless network list for\n\t     <hardwareport>\n\n     -getnetworkserviceenabled networkservice\n\t     Displays whether a service is on or off (enabled or disabled).\n\n     -setnetworkserviceenabled networkservice on | off\n\t     Use this command to turn the specified network service on or off\n\t     (enable or disable).\n\n     -createnetworkservice networkservicename hardwareport\n\t     Create a service named <networkservice> on port <hardwareport>.\n\t     The new service will be enabled by default.\n\n     -renamenetworkservice networkservice newnetworkservicename\n\t     Use this command to rename the specified network service\n\t     <networkservice> to <newnetworkservicename>.\n\n     -duplicatenetworkservice networkservice newnetworkservicename\n\t     Use this command to duplicate an existing network service\n\t     <networkservice> and rename it to the specified name\n\t     <newnetworkservicename>."
  manpageQuestion1: What is the primary purpose of the networksetup command?
  manpageQuestion2: How would you use networksetup to remove all preferred wireless networks from a hardware port?
  manpageQuestion3: Can you provide an example of using networksetup to create a new network service named 'MyService' on the 'en0' hardware port?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `networksetup`.\n\n\n\nManpage text:\n\n-removenetworkservice networkservice\n\t     Use this command to delete a network service <networkservice>.\n\t     You cannot use this command to delete the last remaining service\n\t     for a hardware port.  To do so, you use the\n\t     -setnetworkserviceenabled command.\n\n     -ordernetworkservices service1 [service2] [service3] [...]\n\t     Use this command to designate the order network services are\n\t     contacted on the specified hardware port.\tName the network you\n\t     want contacted first, then the second, and so on.\tUse\n\t     \"listnetworkserviceorder\" to view current service order.  Note:\n\t     use quotes around service names which contain spaces (ie. \"Built-\n\t     in Ethernet\").\n\n     -setMTUAndMediaAutomatically hardwarePort\n\t     Set hardwareport or device specified back to automatically\n\t     setting the MTU and Media.\n\n     -getMTU hardwareport\n\t     Get the MTU value for hardwareport or device specified.\n\n     -setMTU hardwarePort value\n\t     Set MTU for hardwareport or device specified."
  manpageQuestion1: What is the primary purpose of the networksetup command?
  manpageQuestion2: How would you use networksetup to delete a network service named 'Built-in Ethernet' on the hardware port 'En1'?
  manpageQuestion3: Can you provide an example of using networksetup to set the MTU value for the hardware port 'En0' to 1500?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `networksetup`.\n\n\n\nManpage text:\n\n-listValidMTURange hardwareport\n\t     List the valid MTU range for hardwareport or device specified.\n\n     -getMedia hardwareport\n\t     Show both the current setting for media and the active media on\n\t     hardwareport or device specified.\n\n     -setMedia hardwareport subtype [option1] [option2] [...]\n\t     Set media for hardwareport or device specified to subtype.\n\t     Specify optional [option1] and additional options depending on\n\t     subtype.  Any number of valid options can be specified.\n\n     -listValidMedia hardwareport\n\t     List valid media options for hardwareport or device name.\n\t     Enumerates available subtypes and options per subtype.\n\n     -createVLAN name parentdevice tag\n\t     Create a VLAN with the name <name> over the parent device\n\t     <parentdevice> and with the tag <tag>.\n\n     -deleteVLAN name parentdevice tag\n\t     Delete the VLAN with the name <name> over the parent device\n\t     <parentdevice> and with the tag <tag>.\n\n     -listVLANs\n\t     List the VLANs that have been created."
  manpageQuestion1: What is the primary purpose of the networksetup command?
  manpageQuestion2: How can you list the valid media options for a specific hardware port using networksetup?
  manpageQuestion3: Can you provide an example of creating a VLAN with the name 'vlan1' over the parent device 'en0' with tag 100 using networksetup?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `networksetup`.\n\n\n\nManpage text:\n\n-listdevicesthatsupportVLAN\n\t     List the devices that support VLANs.\n\n     -isBondSupported device\n\t     Displays YES if the device can be added to a bond.  NO if it\n\t     cannot.\n\n     -createBond name [device1] [device2] [...]\n\t     Create a bond with the user-defined-name name and optionally add\n\t     any listed devices if they support bonding.\n\n     -deleteBond bond\n\t     Delete the bond with the specified device-name.\n\n     -addDeviceToBond device bond\n\t     Add device to bond.\n\n     -removeDeviceFromBond device bond\n\t     Remove device from bond.\n\n     -listBonds\n\t     List of all bonds.\n\n     -showBondStatus bond\n\t     Display the status of the specified bond.\n\n     -listpppoeservices\n\t     List all PPPoE services in the current set.\n\n     -showpppoestatus name\n\t     Display the status of the PPPoE service with the specified name.\n\n     -createpppoeservice device name account password [pppoeName]\n\t     Create a PPPoE service on the specified device with the service\n\t     name specified."
  manpageQuestion1: What is the primary purpose of the networksetup command-line tool?
  manpageQuestion2: How can you use networksetup to check if a specific device supports VLAN?
  manpageQuestion3: Can you provide an example of creating a bond named 'Bond1' using two devices, 'Ethernet0' and 'Ethernet1'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `networksetup`.\n\n\n\nManpage text:\n\n-deletepppoeservice service\n\t     Delete the service.\n\n     -setpppoeaccountname service account\n\t     Set the account name for the service.\n\n     -setpppoepassword service password\n\t     Set the password for the service.\n\n     -connectpppoeservice service\n\t     Connect the service.\n\n     -disconnectpppoeservice service\n\t     Disconnect the service.\n\n     -listlocations\n\t     List all network locations.\n\n     -getcurrentlocation\n\t     Display the name of the current set.\n\n     -createlocation location [populate]\n\t     Create a set with the user-defined-name name and optionally\n\t     populate it with the default services.\n\n     -deletelocation location\n\t     Delete the set.\n\n     -switchtolocation location\n\t     Make the specified set the current set.\n\n     -version\n\t     Displays version of networksetup tool.\n\n     -help   Displays a list of all the commands available in the Network\n\t     Setup Tool, with explanatory information.\n\n     -printcommands\n\t     Displays a list of commands with no detail."
  manpageQuestion1: What is the primary purpose of the networksetup command-line tool?
  manpageQuestion2: How can you use networksetup to delete a PPPoE service named 'MyInternet'?
  manpageQuestion3: Can you provide an example of using networksetup to create a new network location called 'HomeNetwork' and populate it with default services?

- prompt: |-
    You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `networksetup`.



    Manpage text:

    FILES
         /usr/sbin/networksetup

    EXAMPLES
         networksetup -listallnetworkservices

         networksetup -setmanual "Built-in Ethernet" 192.168.100.100 255.255.255.0
         192.168.100.1

         networksetup -setdnsservers "Built-in Ethernet" 192.168.100.100
         192.168.100.12

         networksetup -setsearchdomains "Built-in Ethernet" company.com corp.com

         networksetup -setwebproxy "Built-in Ethernet" proxy.company.com 80

         networksetup -setwebproxy "Built-In Ethernet" proxy.company.com 80 On
         authusername authpassword

         networksetup -duplicatenetworkservice "Built-In Ethernet" "Local LAN"

         networksetup -getdnsservers "Built-In Ethernet"

         networksetup -setMTU en0 1500

         networksetup -setMedia en0 autoselect

         networksetup -setMedia en0 100baseTX half-duplex

         networksetup -createBond MyBond en0 en1

         networksetup -addDeviceToBond en0 bond0

         networksetup -setpppoepassword MyPPPoE - < ~/Desktop/MyPasswordFile.txt

         networksetup -createlocation Home populate
  manpageQuestion1: What is the primary purpose of the networksetup command?
  manpageQuestion2: How can you use networksetup to configure a manual IP address for the 'Built-in Ethernet' interface?
  manpageQuestion3: Can you provide an example of using networksetup to set the DNS servers for a network interface?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `networksetup`.\n\n\n\nManpage text:\n\nSEE ALSO\n     systemsetup(8)\n\nmacOS\t\t\t\t July 29, 2020\t\t\t\t macOS"
  manpageQuestion1: What is the primary purpose of the networksetup command?
  manpageQuestion2: How would you use networksetup to configure a Wi-Fi network with the name 'HomeNetwork' and the password 'SecurePass123'?
  manpageQuestion3: Can you provide an example of using networksetup to set the IP address and DNS server for a network interface called 'en1'?

