- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `java_home`.\n\n\n\nManpage text:\n\njava_home(1)\t\t    General Commands Manual\t\t  java_home(1)\n\nNAME\n       java_home - return a value for $JAVA_HOME\n\n\nSYNOPSIS\n       /usr/libexec/java_home [options]\n\n\nDESCRIPTION\n       The java_home command returns a path suitable for setting the JAVA_HOME\n       environment variable.  It determines this path from the user's\n       preferred JVM based on configured environment variables.  Additional\n       constraints may be provided to filter the list of JVMs available.  By\n       default, if no constraints match the available list of JVMs, the\n       default order is used.  The path is printed to standard output.\n\n\nOPTIONS\n       -v or --version\tversion\n\t      Filters the returned JVMs by version (as if JAVA_VERSION had\n\t      been set in the environment). Example versions: \"11.0\", or\n\t      \"14.0.2\".\n\n\n       -a or --arch  architecture\n\t      Filters the returned JVMs by the architecture they support (as\n\t      if JAVA_ARCH had been set in the environment). Example\n\t      architectures: \"x86_64\", or \"arm64\"."
  manpageQuestion1: What is the primary purpose of the java_home command?
  manpageQuestion2: How would you use the java_home command to find the path for the default Java Development Kit (JDK) installation on a macOS system?
  manpageQuestion3: Can you provide an example of using the java_home command with the --version option to retrieve the path for Java 11?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `java_home`.\n\n\n\nManpage text:\n\n-F or --failfast\n\t      Immediately fails when filters return no JVMs; does not print\n\t      out the path to the default $JAVA_HOME.\n\n\n       --exec  command ...\n\t      Executes the command at $JAVA_HOME/bin/<command> and passes the\n\t      remaining arguments. Any arguments to select which $JAVA_HOME to\n\t      use must precede the --exec option.\n\n\n       -X or --xml\n\t      Prints a list of all matching JVMs and associated properties as\n\t      an XML plist to stdout.\n\n\n       -V or --verbose\n\t      Prints a list of all matching JVMs and architectures to stderr.\n\n\n       -h or --help\n\t      Brief usage information.\n\n\nUSAGE\n       /usr/libexec/java_home helps users set a $JAVA_HOME in their login rc\n       files, or provides a way for command-line Java tools to use the most\n       appropriate JVM which can satisfy a minimum version or architecture\n       requirement. The --exec argument can invoke tools in the selected\n       $JAVA_HOME/bin directory, which is useful for starting Java command-\n       line tools from launchd plists without hardcoding the full path to the\n       Java command-line tool."
  manpageQuestion1: What is the primary purpose of the java_home tool?
  manpageQuestion2: How can you use java_home to execute a specific Java command, such as 'java -version', using the selected $JAVA_HOME?
  manpageQuestion3: What command can you use with java_home to generate an XML file listing all matching JVMs and their properties?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `java_home`.\n\n\n\nManpage text:\n\nUsage for bash-style shells:\n\t      $ export JAVA_HOME=`/usr/libexec/java_home`\n\n       Usage for csh-style shells:\n\t      % setenv JAVA_HOME `/usr/libexec/java_home`\n\n\t\t\t\t July 15, 2020\t\t\t  java_home(1)"
  manpageQuestion1: What is the primary purpose of the java_home command?
  manpageQuestion2: How can you set the JAVA_HOME environment variable in a bash shell using the java_home command?
  manpageQuestion3: Can you provide an example of how to use the java_home command in a csh-style shell?

