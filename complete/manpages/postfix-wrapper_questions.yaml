- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `postfix-wrapper`.\n\n\n\nManpage text:\n\nPOSTFIX-WRAPPER(5)\t      File Formats Manual\t    POSTFIX-WRAPPER(5)\n\n\nNAME\n       postfix-wrapper - Postfix multi-instance API\n\nDESCRIPTION\n       Support for managing multiple Postfix instances is available as of\n       version 2.6. Instances share executable files and documentation, but\n       have their own directories for configuration, queue and data files.\n\n       This document describes how the familiar \"postfix start\" etc. user\n       interface can be used to manage one or multiple Postfix instances, and\n       gives details of an API to coordinate activities between the postfix(1)\n       command and a multi-instance manager program.\n\n       With multi-instance support, the default Postfix instance is always\n       required. This instance is identified by the config_directory\n       parameter's default value.\n\nGENERAL OPERATION\n       Multi-instance support is backwards compatible: when you run only one\n       Postfix instance, commands such as \"postfix start\" will not change\n       behavior at all.\n\n       Even with multiple Postfix instances, you can keep using the same\n       postfix commands in boot scripts, upgrade procedures, and other places.\n       The commands do more work, but humans are not forced to learn new\n       tricks.\n\n       For example, to start all Postfix instances, use:\n\n\t      # postfix start\n\n       Other postfix(1) commands also work as expected. For example, to find\n       out what Postfix instances exist in a multi-instance configuration,\n       use:\n\n\t      # postfix status\n\n       This enumerates the status of all Postfix instances within a\n       multi-instance configuration.\n\nMANAGING AN INDIVIDUAL POSTFIX INSTANCE\n       To manage a specific Postfix instance, specify its configuration\n       directory on the postfix(1) command line:\n\n\t      # postfix -c /path/to/config_directory command\n\n       Alternatively, the postfix(1) command accepts the instance's\n       configuration directory via the MAIL_CONFIG environment variable (the\n       -c command-line option has higher precedence).\n\n       Otherwise, the postfix(1) command will operate on all Postfix\n       instances.\n\nENABLING POSTFIX(1) MULTI-INSTANCE MODE\n       By default, the postfix(1) command operates in single-instance mode. In\n       this mode the command invokes the postfix-script file directly\n       (currently installed in the daemon directory).  This file contains the\n       commands that start or stop one Postfix instance, that upgrade the\n       configuration of one Postfix instance, and so on.\n\n       When the postfix(1) command operates in multi-instance mode as\n       discussed below, the command needs to execute start, stop, etc.\n       commands for each Postfix instance.  This multiplication of commands is\n       handled by a multi-instance manager program.\n\n       Turning on postfix(1) multi-instance mode goes as follows: in the\n       default Postfix instance's main.cf file, 1) specify the pathname of a\n       multi-instance manager program with the multi_instance_wrapper\n       parameter; 2) populate the multi_instance_directories parameter with\n       the configuration directory pathnames of additional Postfix instances.\n       For example:\n\n\t      /etc/postfix/main.cf:\n\t\t  multi_instance_wrapper = $daemon_directory/postfix-wrapper\n\t\t  multi_instance_directories = /etc/postfix-test\n\n       The $daemon_directory/postfix-wrapper file implements a simple manager\n       and contains instructions for creating Postfix instances by hand.  The\n       postmulti(1) command provides a more extensive implementation including\n       support for life-cycle management.\n\n       The multi_instance_directories and other main.cf parameters are listed\n       below in the CONFIGURATION PARAMETERS section.\n\n       In multi-instance mode, the postfix(1) command invokes the\n       $multi_instance_wrapper command instead of the postfix-script file.\n       This multi-instance manager in turn executes the postfix(1) command in\n       single-instance mode for each Postfix instance.\n\n       To illustrate the main ideas behind multi-instance operation, below is\n       an example of a simple but useful multi-instance manager\n       implementation:\n\n\t      #!/bin/sh\n\n\t      : ${command_directory?\"do not invoke this command directly\"}\n\n\t      POSTCONF=$command_directory/postconf\n\t      POSTFIX=$command_directory/postfix\n\t      instance_dirs=`$POSTCONF -h multi_instance_directories |\n\t\t\t      sed 's/,/ /'` || exit 1\n\n\t      err=0\n\t      for dir in $config_directory $instance_dirs\n\t      do\n\t\t  case \"$1\" in\n\t\t  stop|abort|flush|reload|drain)\n\t\t      test \"`$POSTCONF -c $dir -h multi_instance_enable`\" \\\n\t\t\t  = yes || continue;;\n\t\t  start)\n\t\t      test \"`$POSTCONF -c $dir -h multi_instance_enable`\" \\\n\t\t\t  = yes || {\n\t\t\t  $POSTFIX -c $dir check || err=$?\n\t\t\t  continue\n\t\t      };;\n\t\t  esac\n\t\t  $POSTFIX -c $dir \"$@\" || err=$?\n\t      done\n\n\t      exit $err\n\nPER-INSTANCE MULTI-INSTANCE MANAGER CONTROLS\n       Each Postfix instance has its own main.cf file with parameters that\n       control how the multi-instance manager operates on that instance.  This\n       section discusses the most important settings.\n\n       The setting \"multi_instance_enable = yes\" allows the multi-instance\n       manager to start (stop, etc.) the corresponding Postfix instance. For\n       safety reasons, this setting is not the default.\n\n       The default setting \"multi_instance_enable = no\" is useful for manual\n       testing with \"postfix -c /path/name start\" etc.\tThe multi-instance\n       manager will not start such an instance, and it will skip commands such\n       as \"stop\" or \"flush\" that require a running Postfix instance.  The\n       multi-instance manager will execute commands such as \"check\",\n       \"set-permissions\" or \"upgrade-configuration\", and it will replace\n       \"start\" by \"check\" so that problems will be reported even when the\n       instance is disabled.\n\nMAINTAINING SHARED AND NON-SHARED FILES\n       Some files are shared between Postfix instances, such as executables\n       and manpages, and some files are per-instance, such as configuration\n       files, mail queue files, and data files.  See the NON-SHARED FILES\n       section below for a list of per-instance files.\n\n       Before Postfix multi-instance support was implemented, the executables,\n       manpages, etc., have always been maintained as part of the default\n       Postfix instance.\n\n       With multi-instance support, we simply continue to do this.\n       Specifically, a Postfix instance will not check or update shared files\n       when that instance's config_directory value is listed with the default\n       main.cf file's multi_instance_directories parameter.\n\n       The consequence of this approach is that the default Postfix instance\n       should be checked and updated before any other instances.\n\nMULTI-INSTANCE API SUMMARY\n       Only the multi-instance manager implements support for the\n       multi_instance_enable configuration parameter. The multi-instance\n       manager will start only Postfix instances whose main.cf file has\n       \"multi_instance_enable = yes\". A setting of \"no\" allows a Postfix\n       instance to be tested by hand.\n\n       The postfix(1) command operates on only one Postfix instance when the\n       -c option is specified, or when MAIL_CONFIG is present in the process\n       environment. This is necessary to terminate recursion.\n\n       Otherwise, when the multi_instance_directories parameter value is\n       non-empty, the postfix(1) command executes the command specified with\n       the multi_instance_wrapper parameter, instead of executing the commands\n       in postfix-script.\n\n       The multi-instance manager skips commands such as \"stop\" or \"reload\"\n       that require a running Postfix instance, when an instance does not have\n       \"multi_instance_enable = yes\".  This avoids false error messages.\n\n       The multi-instance manager replaces a \"start\" command by \"check\" when a\n       Postfix instance's main.cf file does not have \"multi_instance_enable =\n       yes\". This substitution ensures that problems will be reported even\n       when the instance is disabled.\n\n       No Postfix command or script will update or check shared files when its\n       config_directory value is listed in the default main.cf's\n       multi_instance_directories parameter value.  Therefore, the default\n       instance should be checked and updated before any Postfix instances\n       that depend on it.\n\n       Set-gid commands such as postdrop(1) and postqueue(1) effectively\n       append the multi_instance_directories parameter value to the legacy\n       alternate_config_directories parameter value. The commands use this\n       information to determine whether a -c option or MAIL_CONFIG environment\n       setting specifies a legitimate value.\n\n       The legacy alternate_config_directories parameter remains necessary for\n       non-default Postfix instances that are running different versions of\n       Postfix, or that are not managed together with the default Postfix\n       instance.\n\nENVIRONMENT VARIABLES\n\n       MAIL_CONFIG\n\t      When present, this forces the postfix(1) command to operate only\n\t      on the specified Postfix instance. This environment variable is\n\t      exported by the postfix(1) -c option, so that postfix(1)\n\t      commands in descendant processes will work correctly.\n\nCONFIGURATION PARAMETERS\n       The text below provides only a parameter summary. See postconf(5) for\n       more details.\n\n       multi_instance_directories (empty)\n\t      An optional list of non-default Postfix configuration\n\t      directories; these directories belong to additional Postfix\n\t      instances that share the Postfix executable files and\n\t      documentation with the default Postfix instance, and that are\n\t      started, stopped, etc., together with the default Postfix\n\t      instance.\n\n       multi_instance_wrapper (empty)\n\t      The pathname of a multi-instance manager command that the\n\t      postfix(1) command invokes when the multi_instance_directories\n\t      parameter value is non-empty.\n\n       multi_instance_name (empty)\n\t      The optional instance name of this Postfix instance.\n\n       multi_instance_group (empty)\n\t      The optional instance group name of this Postfix instance.\n\n       multi_instance_enable (no)\n\t      Allow this Postfix instance to be started, stopped, etc., by a\n\t      multi-instance manager.\n\nNON-SHARED FILES\n\n       config_directory (see 'postconf -d' output)\n\t      The default location of the Postfix main.cf and master.cf\n\t      configuration files.\n\n       data_directory (see 'postconf -d' output)\n\t      The directory with Postfix-writable data files (for example:\n\t      caches, pseudo-random numbers).\n\n       queue_directory (see 'postconf -d' output)\n\t      The location of the Postfix top-level queue directory.\n\nSEE ALSO\n       postfix(1) Postfix control program\n       postmulti(1) full-blown multi-instance manager\n       $daemon_directory/postfix-wrapper simple multi-instance manager\n\nLICENSE\n       The Secure Mailer license must be distributed with this software.\n\nAUTHOR(S)\n       Wietse Venema\n       IBM T.J. Watson Research\n       P.O. Box 704\n       Yorktown Heights, NY 10598, USA\n\n       Wietse Venema\n       Google, Inc.\n       111 8th Avenue\n       New York, NY 10011, USA\n\n\t\t\t\t\t\t\t    POSTFIX-WRAPPER(5)"
  manpageQuestion1: What is the primary purpose of the postfix-wrapper command?
  manpageQuestion2: How would you configure Postfix to manage multiple instances using the postfix-wrapper tool?
  manpageQuestion3: Can you provide an example of using the postfix-wrapper to start a specific Postfix instance located in /etc/postfix-test?

