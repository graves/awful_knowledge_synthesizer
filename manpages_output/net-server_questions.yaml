- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `net-server`.\n\n\n\nManpage text:\n\nNET-SERVER(1)\t      User Contributed Perl Documentation\t NET-SERVER(1)\n\n\nNAME\n       net-server - Base Net::Server starting module\n\nSYNOPSIS\n\t   net-server [base type] [net server arguments]\n\n\t   net-server PreFork ipv '*'\n\n\t   net-server HTTP\n\n\t   net-server HTTP app foo.cgi\n\n\t   net-server HTTP app foo.cgi app /=bar.cgi\n\n\t   net-server HTTP port 8080 port 8443/ssl ipv '*' server_type PreFork --SSL_key_file=my.key --SSL_cert_file=my.crt access_log_file STDERR\n\nDESCRIPTION\n       The net-server program gives a simple way to test out code and try port\n       connection parameters.  Though the running server can be robust enough\n       for full tim use, it is anticipated that this binary will just be used\n       for basic testing of net-server ports, acting as a simple echo server,\n       or for running development scripts as CGI.\n\nOPTIONS\n       \"base type\"\n\t   The very first argument may be a Net::Server flavor.  This is given\n\t   as shorthand for writing out server_type \"ServerFlavor\".\n\t   Additionally, this allows types such as HTTP and PSGI, which are\n\t   not true Net::Server base types, to subclass other server types via\n\t   an additional server_type argument.\n\n\t       net-server PreFork\n\n\t       net-server HTTP\t# becomes a HTTP server in the Fork flavor\n\n\t       net-server HTTP server_type PreFork  # preforking HTTP server\n\n       \"port\"\n\t   Port to bind upon.  Default is 80 if running a HTTP server as root,\n\t   8080 if running a HTTP server as non-root, or 20203 otherwise.\n\n\t   Multiple value can be given for binding to multiple ports.  All of\n\t   the methods for specifying port attributes enumerated in\n\t   Net::Server and Net::Server::Proto are available here.\n\n\t       net-server port 20201\n\n\t       net-server port 20202\n\n\t       net-server port 20203/IPv6\n\n       \"host\"\n\t   Host to bind to.  Default is *.  Will bind to an IPv4 socket if an\n\t   IPv4 address is given.  Will bind to an IPv6 socket if an IPv6\n\t   address is given (requires installation of IO::Socket::INET6).\n\n\t   If a hostname is given and \"ipv\" is still set to 4, an IPv4 socket\n\t   will be created.  If a hostname is given and \"ipv\" is set to 6, an\n\t   IPv6 socket will be created.  If a hostname is given and \"ipv\" is\n\t   set to * (default), a lookup will be performed and any available\n\t   IPv4 or IPv6 addresses will be bound.  The \"ipv\" parameter can be\n\t   set directly, or passed along in the port, or additionally can be\n\t   passed as part of the hostname.\n\n\t       net-server host localhost\n\n\t       net-server host localhost/IPv4\n\n       There are many more options available.  Please see the Net::Server\n       documentation.\n\nAUTHOR\n\t   Paul Seamons <paul@seamons.com>\n\nLICENSE\n       This package may be distributed under the terms of either the\n\n\t GNU General Public License\n\t   or the\n\t Perl Artistic License\n\nperl v5.34.0\t\t\t  2017-08-10\t\t\t NET-SERVER(1)"
  manpageQuestion1: What is the primary purpose of the net-server tool?
  manpageQuestion2: How would you configure net-server to run an HTTP server on port 8080 with SSL support using the provided key and certificate files?
  manpageQuestion3: Can you provide an example of using net-server to create a simple HTTP server that serves two CGI scripts, foo.cgi and bar.cgi?

