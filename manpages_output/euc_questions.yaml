- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `euc`.\n\n\n\nManpage text:\n\nEUC(5)\t\t\t      File Formats Manual\t\t\tEUC(5)\n\nNAME\n     euc â€“ EUC encoding of wide characters\n\nSYNOPSIS\n     ENCODING \"EUC\"\n\n     VARIABLE len1 mask1 len2 mask2 len3 mask3 len4 mask4 mask\n\nDESCRIPTION\n     EUC implements a system of 4 multibyte codesets.  A multibyte character\n     in the first codeset consists of len1 bytes starting with a byte in the\n     range of 0x00 to 0x7f.  To allow use of ASCII, len1 is always 1.  A\n     multibyte character in the second codeset consists of len2 bytes starting\n     with a byte in the range of 0x80-0xff excluding 0x8e and 0x8f.  A\n     multibyte character in the third codeset consists of len3 bytes starting\n     with the byte 0x8e.  A multibyte character in the fourth codeset consists\n     of len4 bytes starting with the byte 0x8f.\n\n     The wchar_t encoding of EUC multibyte characters is dependent on the len\n     and mask arguments.  First, the bytes are moved into a wchar_t as\n     follows:\n\n     byte0 << ((lenN-1) * 8) | byte1 << ((lenN-2) * 8) | ... | bytelenN-1"
  manpageQuestion1: What is the primary purpose of the euc resource?
  manpageQuestion2: How would you configure EUC encoding for a specific codeset with len1=2, mask1=0x0f, len2=3, mask2=0x1f, len3=4, mask3=0x3f, and len4=5, mask4=0x7f?
  manpageQuestion3: Can you explain how the EUC encoding maps a multibyte sequence starting with 0x8e followed by four bytes to a wchar_t value?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `euc`.\n\n\n\nManpage text:\n\nThe result is then ANDed with ~mask and ORed with maskN.  Codesets 2 and\n     3 are special in that the leading byte (0x8e or 0x8f) is first removed\n     and the lenN argument is reduced by 1.\n\n     For example, the ja_JP.eucJP locale has the following VARIABLE line:\n\n     VARIABLE\t     1 0x0000 2 0x8080 2 0x0080 3 0x8000 0x8080\n\n     Codeset 1 consists of the values 0x0000 - 0x007f.\n\n     Codeset 2 consists of the values who have the bits 0x8080 set.\n\n     Codeset 3 consists of the values 0x0080 - 0x00ff.\n\n     Codeset 4 consists of the values 0x8000 - 0xff7f excluding the values\n     which have the 0x0080 bit set.\n\n     Notice that the global mask is set to 0x8080, this implies that from\n     those 2 bits the codeset can be determined.\n\nSEE ALSO\n     mklocale(1), setlocale(3)\n\nmacOS 15.3\t\t       November 8, 2003 \t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the euc resource in macOS?
  manpageQuestion2: How does the euc resource handle codesets 2 and 3 differently from other codesets?
  manpageQuestion3: Can you explain the role of the global mask in determining codesets for the euc resource?

