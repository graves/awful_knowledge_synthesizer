- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_radiobox`.\n\n\n\nManpage text:\n\niwidgets::radiobox(1)\t\t[incr Widgets]\t\t iwidgets::radiobox(1)\n\n______________________________________________________________________________\n\nNAME\n       iwidgets::radiobox - Create and manipulate a radiobox widget\n\nSYNOPSIS\n       iwidgets::radiobox pathName ?options?\n\nINHERITANCE\n       itk::Widget <- iwidgets::Labeledframe <- iwidgets::Radiobox\n\nSTANDARD OPTIONS\n       background      borderWidth    cursor\t      disabledForeground\n       foreground      relief\t      selectColor\n\n       See the \"options\" manual entry for details on the standard options.\n\nINHERITED OPTIONS\n       labelBitmap     labelFont      labelImage      labelMargin\n       labelPos        labelText      labelVariable\n\n       See the \"labeledframe\" class manual entry for details on the inherited\n       options.\n\nWIDGET-SPECIFIC OPTIONS\n       Name:   command\n       Class:  Command\n       Command-Line Switch:    -command\n\n\t      Specifies a Tcl command procedure to be evaluated following a\n\t      change in the current radio box selection.\n\n       Name:   orient\n       Class:  Orient\n       Command-Line Switch:    -orient\n       Default Value:  vertical\n\n\t      Specifies the orientation of the radiobuttons within the\n\t      radiobox.  Valid values are either \"horizontal\" or \"vertical\".\n\n______________________________________________________________________________\n\n\nDESCRIPTION\n       The iwidgets::radiobox command creates a radio button box widget\n       capable of adding, inserting, deleting, selecting, and configuring\n       radiobuttons as well as obtaining the currently selected button.\n\n\nMETHODS\n       The iwidgets::radiobox command creates a new Tcl command whose name is\n       pathName.  This command may be used to invoke various operations on the\n       widget.\tIt has the following general form:\n\n\t      pathName option ?arg arg ...?\n\n       Option and the args determine the exact behavior of the command.\n\n       Many of the widget commands for the radiobox take as one argument an\n       indicator of which radiobutton of the radiobox to operate on.  These\n       indicators are called indexes and allow reference and manipulation of\n       radiobuttons.  Radiobox indexes may be specified in any of the\n       following forms:\n\n       number\t   Specifies the radiobutton numerically, where 0 corresponds\n\t\t   to the top radiobutton of the radiobox.\n\n       end\t   Indicates the last radiobutton of the radiobox.\n\n       pattern\t   If the index doesn't satisfy one of the above forms then\n\t\t   this form is used.  Pattern is pattern-matched against the\n\t\t   tag of each radiobutton in the radiobox, in order from top\n\t\t   to bottom, until a matching entry is found.\tThe rules of\n\t\t   Tcl_StringMatch are used.\n\n\nWIDGET-SPECIFIC METHODS\n       pathName add tag ?option value option value?\n\t      Adds a new radiobutton to the radiobuttond window on the bottom.\n\t      The command takes additional options which are passed on to the\n\t      radiobutton as construction arguments.  These include the\n\t      standard Tk radiobutton options.\tThe tag is returned.\n\n       pathName buttonconfigure index ?options?\n\t      This command is similar to the configure command, except that it\n\t      applies to the options for an individual radiobutton, whereas\n\t      configureapplies to the options for the radiobox as a whole.\n\t      Options may have any of the values accepted by the add widget\n\t      command.\tIf options are specified, options are modified as\n\t      indicated in the command and the command returns an empty\n\t      string.  If no options are specified, returns a list describing\n\t      the current options for entry index (see Tk_ConfigureInfo for\n\t      information on the format of this list).\n\n       pathName cget option\n\t      Returns the current value of the configuration option given by\n\t      option.  Option may have any of the values accepted by the\n\t      iwidgets::radiobox command.\n\n       pathName configure ?option? ?value option value ...?\n\t      Query or modify the configuration options of the widget.\tIf no\n\t      option is specified, returns a list describing all of the\n\t      available options for pathName (see Tk_ConfigureInfo for\n\t      information on the format of this list).\tIf option is specified\n\t      with no value, then the command returns a list describing the\n\t      one named option (this list will be identical to the\n\t      corresponding sublist of the value returned if no option is\n\t      specified).  If one or more option-value pairs are specified,\n\t      then the command modifies the given widget option(s) to have the\n\t      given value(s);  in this case the command returns an empty\n\t      string.  Option may have any of the values accepted by the\n\t      iwidgets::radiobox command.\n\n       pathName delete index\n\t      Deletes a specified radiobutton given an index.\n\n       pathName deselect index\n\t      Deselects a specified radiobutton given an index.\n\n       pathName flash index\n\t      Flashes a specified radiobutton given an index.\n\n       pathName get\n\t      Returns the tag of the currently selected radiobutton.\n\n       pathName index index\n\t      Returns the numerical index corresponding to index.\n\n       pathName insert index tag ?option value option value ...?\n\t      Same as the add command except that it inserts the new\n\t      radiobutton just before the one given by index, instead of\n\t      appending to the end of the radiobox.  The option, and value\n\t      arguments have the same interpretation as for the add widget\n\t      command.\n\n       pathName select index\n\t      Selects a specified radiobutton given an index.\n\n\nEXAMPLE\n\n\t       package require Iwidgets 4.0\n\t       iwidgets::radiobox .rb -labeltext Fonts\n\t       .rb add times -text Times\n\t       .rb add helvetica -text Helvetica\n\t       .rb add courier -text Courier\n\t       .rb add symbol -text Symbol\n\t       .rb select courier\n\n\t       pack .rb -padx 10 -pady 10 -fill both -expand yes"
  manpageQuestion1: What is the primary purpose of the iwidgets::radiobox command?
  manpageQuestion2: How would you use the iwidgets::radiobox command to create a radiobutton box with vertical orientation and add three buttons labeled 'Option 1', 'Option 2', and 'Option 3'?
  manpageQuestion3: Can you provide an example of using the iwidgets::radiobox command to delete the second radiobutton in a radiobox widget named .rb?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_radiobox`.\n\n\n\nManpage text:\n\nAUTHOR\n       Michael J. McLennan\n\n       Mark L. Ulferts\n\nKEYWORDS\n       radiobox, widget\n\nTk\t\t\t\t\t\t\t iwidgets::radiobox(1)"
  manpageQuestion1: What is the primary purpose of the iwidgets_radiobox command?
  manpageQuestion2: How would you use the iwidgets_radiobox command to create a radiobutton group with three options labeled 'Option 1', 'Option 2', and 'Option 3'?
  manpageQuestion3: Can you provide an example of using the iwidgets_radiobox command to set the default selection to 'Option 2' in a radiobutton group?

