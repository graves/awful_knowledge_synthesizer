- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `wc`.\n\n\n\nManpage text:\n\nWC(1)\t\t\t    General Commands Manual\t\t\t WC(1)\n\nNAME\n     wc – word, line, character, and byte count\n\nSYNOPSIS\n     wc [--libxo] [-Lclmw] [file ...]\n\nDESCRIPTION\n     The wc utility displays the number of lines, words, and bytes contained\n     in each input file, or standard input (if no file is specified) to the\n     standard output.  A line is defined as a string of characters delimited\n     by a ⟨newline⟩ character.\tCharacters beyond the final ⟨newline⟩\n     character will not be included in the line count.\n\n     A word is defined as a string of characters delimited by white space\n     characters.  White space characters are the set of characters for which\n     the iswspace(3) function returns true.  If more than one input file is\n     specified, a line of cumulative counts for all the files is displayed on\n     a separate line after the output for the last file.\n\n     The following options are available:\n\n     --libxo\n\t     Generate output via libxo(3) in a selection of different human\n\t     and machine readable formats.  See xo_parse_args(3) for details\n\t     on command line arguments."
  manpageQuestion1: What is the primary purpose of the wc command?
  manpageQuestion2: How can you use the wc command to count the number of lines, words, and characters in a file named 'example.txt'?
  manpageQuestion3: What is the function of the --libxo option in the wc command?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `wc`.\n\n\n\nManpage text:\n\n-L      Write the length of the line containing the most bytes (default)\n\t     or characters (when -m is provided) to standard output.  When\n\t     more than one file argument is specified, the longest input line\n\t     of all files is reported as the value of the final “total”.\n\n     -c      The number of bytes in each input file is written to the standard\n\t     output.  This will cancel out any prior usage of the -m option.\n\n     -l      The number of lines in each input file is written to the standard\n\t     output.\n\n     -m      The number of characters in each input file is written to the\n\t     standard output.  If the current locale does not support\n\t     multibyte characters, this is equivalent to the -c option.  This\n\t     will cancel out any prior usage of the -c option.\n\n     -w      The number of words in each input file is written to the standard\n\t     output.\n\n     When an option is specified, wc only reports the information requested by\n     that option.  The order of output always takes the form of line, word,\n     byte, and file name.  The default action is equivalent to specifying the\n     -c, -l and -w options."
  manpageQuestion1: What is the primary purpose of the `wc` command?
  manpageQuestion2: How would you use `wc` to count the number of bytes in a file named 'example.txt'?
  manpageQuestion3: Can you provide an example of using `wc` to count the number of lines, words, and characters in a file named 'data.txt'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `wc`.\n\n\n\nManpage text:\n\nIf no files are specified, the standard input is used and no file name is\n     displayed.  The prompt will accept input until receiving EOF, or [^D] in\n     most environments.\n\n     If wc receives a SIGINFO (see the status argument for stty(1)) signal,\n     the interim data will be written to the standard error output in the same\n     format as the standard completion message.\n\nENVIRONMENT\n     The LANG, LC_ALL and LC_CTYPE environment variables affect the execution\n     of wc as described in environ(7).\n\nEXIT STATUS\n     The wc utility exits 0 on success, and >0 if an error occurs.\n\nEXAMPLES\n     Count the number of characters, words and lines in each of the files\n     report1 and report2 as well as the totals for both:\n\n\t   wc -mlw report1 report2\n\n     Find the longest line in a list of files:\n\n\t   wc -L file1 file2 file3 | fgrep total\n\nCOMPATIBILITY\n     Historically, the wc utility was documented to define a word as a\n     “maximal string of characters delimited by <space>, <tab> or <newline>\n     characters”.  The implementation, however, did not handle non-printing\n     characters correctly so that “  ^D^E  ” counted as 6 spaces, while\n     “foo^D^Ebar” counted as 8 characters.  4BSD systems after 4.3BSD modified\n     the implementation to be consistent with the documentation.  This\n     implementation defines a “word” in terms of the iswspace(3) function, as\n     required by IEEE Std 1003.2 (“POSIX.2”)."
  manpageQuestion1: What is the primary purpose of the wc command?
  manpageQuestion2: How can you use the wc command to count the number of characters, words, and lines in multiple files and display totals?
  manpageQuestion3: What is an example of using the wc command to find and display the longest line in a list of files?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `wc`.\n\n\n\nManpage text:\n\nThe -L option is a non-standard FreeBSD extension, compatible with the -L\n     option of the GNU wc utility.\n\nSEE ALSO\n     iswspace(3), libxo(3), xo_parse_args(3)\n\nSTANDARDS\n     The wc utility conforms to IEEE Std 1003.1-2001 (“POSIX.1”).\n\nHISTORY\n     A wc command appeared in Version 1 AT&T UNIX.\n\nmacOS 15.3\t\t\tApril 11, 2020\t\t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the wc command?
  manpageQuestion2: How would you use the -L option with wc to count the number of lines in a file?
  manpageQuestion3: Can you provide an example of using wc with the -c option to count the number of bytes in a file?

