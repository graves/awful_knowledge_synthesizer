- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `colldef`.\n\n\n\nManpage text:\n\nCOLLDEF(1)\t\t    General Commands Manual\t\t    COLLDEF(1)\n\nNAME\n     colldef – convert collation sequence source definition\n\nSYNOPSIS\n     colldef [-I map_dir] [-o out_file] [filename]\n\nDESCRIPTION\n     The colldef utility converts a collation sequence source definition into\n     a format usable by the strxfrm() and strcoll() functions.\tIt is used to\n     define the many ways in which strings can be ordered and collated.  The\n     strxfrm() function transforms its first argument and places the result in\n     its second argument.  The transformed string is such that it can be\n     correctly ordered with other transformed strings by using strcmp(),\n     strncmp(), or memcmp().  The strcoll() function transforms its arguments\n     and does a comparison.\n\n     The colldef utility reads the collation sequence source definition from\n     the standard input and stores the converted definition in filename.  The\n     output file produced contains the database with collating sequence\n     information in a form usable by system commands and routines."
  manpageQuestion1: What is the primary purpose of the colldef utility?
  manpageQuestion2: How would you use the colldef command to convert a collation sequence source definition into a format usable by strxfrm() and strcoll()?
  manpageQuestion3: Can you provide an example of using colldef to generate a collation database from a source definition file?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `colldef`.\n\n\n\nManpage text:\n\nThe following options are available:\n\n     -I map_dir\n\t     Set directory name where charmap files can be found, current\n\t     directory by default.\n\n     -o out_file\n\t     Set output file name, LC_COLLATE by default.\n\n     The collation sequence definition specifies a set of collating elements\n     and the rules defining how strings containing these should be ordered.\n     This is most useful for different language definitions.\n\n     The specification file can consist of three statements: charmap,\n     substitute and order.\n\n     Of these, only the order statement is required.  When charmap or\n     substitute is supplied, these statements must be ordered as above.  Any\n     statements after the order statement are ignored.\n\n     Lines in the specification file beginning with a ‘#’ are treated as\n     comments and are ignored.\tBlank lines are also ignored.\n\n\t   charmap charmapfile\n\n     Charmap defines where a mapping of the character and collating element\n     symbols to the actual character encoding can be found."
  manpageQuestion1: What is the primary purpose of the colldef tool?
  manpageQuestion2: How would you use colldef to define a custom collation sequence using a specification file with a charmap and order statements?
  manpageQuestion3: Can you provide an example of using colldef to set the output file to 'custom.collate' and specify a custom charmap directory?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `colldef`.\n\n\n\nManpage text:\n\nThe format of charmapfile is shown below.\tSymbol names are separated\n     from their values by TAB or SPACE characters.  Symbol-value can be\n     specified in a hexadecimal (\\x??) or octal (\\???) representation, and can\n     be only one character in length.\n\n\t   symbol-name1 symbol-value1\n\t   symbol-name2 symbol-value2\n\t   ...\n\n     Symbol names cannot be specified in substitute fields.\n\n     The charmap statement is optional.\n\n\t   substitute \"symbol\" with \"repl_string\"\n\n     The substitute statement substitutes the character symbol with the string\n     repl_string.  Symbol names cannot be specified in repl_string field.  The\n     substitute statement is optional.\n\n\t   order order_list\n\n     Order_list is a list of symbols, separated by semi colons, that defines\n     the collating sequence.  The special symbol ... specifies, in a short-\n     hand form, symbols that are sequential in machine code order.\n\n     An order list element can be represented in any one of the following\n     ways:"
  manpageQuestion1: What is the primary purpose of the `colldef` resource?
  manpageQuestion2: How would you use the `colldef` resource to define a custom character mapping where 'A' is mapped to 'a', and 'B' is mapped to 'b'?
  manpageQuestion3: Can you provide an example of using the `colldef` resource to set a collating order that includes the symbols 'a', 'b', 'c', and uses the shorthand for sequential symbols?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `colldef`.\n\n\n\nManpage text:\n\n•\t The symbol itself (for example, a for the lower-case letter a).\n\n     •\t The symbol in octal representation (for example, \\141 for the letter\n\t a).\n\n     •\t The symbol in hexadecimal representation (for example, \\x61 for the\n\t letter a).\n\n     •\t The symbol name as defined in the charmap file (for example,\n\t <letterA> for letterA \\023 record in charmapfile).  If character map\n\t name have > character, it must be escaped as />, single / must be\n\t escaped as //.\n\n     •\t Symbols \\a, \\b, \\f, \\n, \\r, \\v are permitted in its usual C-language\n\t meaning.\n\n     •\t The symbol chain (for example: abc, <letterA><letterB>c, \\xf1b\\xf2)\n\n     •\t The symbol range (for example, a;...;z).\n\n     •\t Comma-separated symbols, ranges and chains enclosed in parenthesis\n\t (for example ( sym1, sym2, ... )) are assigned the same primary\n\t ordering but different secondary ordering.\n\n     •\t Comma-separated symbols, ranges and chains enclosed in curly brackets\n\t (for example { sym1, sym2, ... }) are assigned the same primary\n\t ordering only."
  manpageQuestion1: What is the primary purpose of the colldef command?
  manpageQuestion2: How would you use colldef to define a symbol chain consisting of the symbols 'a', 'b', and 'c'?
  manpageQuestion3: Can you provide an example of using colldef to define a symbol range from 'a' to 'z'?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `colldef`.\n\n\n\nManpage text:\n\nThe backslash character \\ is used for continuation.  In this case, no\n     characters are permitted after the backslash character.\n\nDIAGNOSTICS\n     The colldef utility exits with the following values:\n\n     0\t     No errors were found and the output was successfully created.\n\n     !=0     Errors were found.\n\nFILES\n     /usr/share/locale/⟨language⟩/LC_COLLATE\n\t     The standard shared location for collation orders under the\n\t     locale ⟨language⟩.\n\nSEE ALSO\n     mklocale(1), setlocale(3), strcoll(3), strxfrm(3)\n\nmacOS 15.3\t\t       January 27, 1995 \t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the colldef utility?
  manpageQuestion2: How would you use colldef to define a custom collation order for the 'en_US' locale?
  manpageQuestion3: What are the possible exit statuses of the colldef utility and what do they indicate?

