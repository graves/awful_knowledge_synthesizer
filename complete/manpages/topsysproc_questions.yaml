- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `topsysproc`.\n\n\n\nManpage text:\n\ntopsysproc(1m)\t\t\t USER COMMANDS\t\t\ttopsysproc(1m)\n\nNAME\n       topsysproc - top syscalls by process name. Uses DTrace.\n\nSYNOPSIS\n       topsysproc [-Cs] [interval [count]]\n\nDESCRIPTION\n       This program continually prints a report of the number of system calls\n       by process name, and refreshes the display every 1 second or as\n       specified at the command line. Similar data can be fetched with \"prstat\n       -m\".\n\n       Since this uses DTrace, only users with root privileges can run this\n       command.\n\nOPTIONS\n       -C     don't clear the screen\n\n       -s     print per second values\n\nEXAMPLES\n       Default output, 1 second updates,\n\t      # topsysproc\n\n       Print every 5 seconds,\n\t      # topsysproc 5\n\n       Print a scrolling output,\n\t      # topsysproc -C\n\nFIELDS\n       load avg\n\t      load averages, see uptime(1)\n\n       syscalls\n\t      total syscalls in this interval\n\n       syscalls/s\n\t      syscalls per second\n\n       PROCESS\n\t      process name\n\n       COUNT  total syscalls in this interval"
  manpageQuestion1: What is the primary purpose of the topsysproc command?
  manpageQuestion2: How would you use topsysproc to monitor system calls per second for a process named 'myprocess'?
  manpageQuestion3: Can you provide an example of using topsysproc to display system call data without clearing the screen?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `topsysproc`.\n\n\n\nManpage text:\n\nCOUNT/s\n\t      syscalls per second\n\nNOTES\n       There may be several PIDs with the same process name.\n\nDOCUMENTATION\n       See the DTraceToolkit for further documentation under the Docs\n       directory. The DTraceToolkit docs may include full worked examples with\n       verbose descriptions explaining the output.\n\nEXIT\n       topsysproc will run until Ctrl-C is hit.\n\nAUTHOR\n       Brendan Gregg [Sydney, Australia]\n\nSEE ALSO\n       dtrace(1M), prstat(1M)\n\nversion 0.90\t\t\t June 13, 2005\t\t\ttopsysproc(1m)"
  manpageQuestion1: What is the primary purpose of the topsysproc tool?
  manpageQuestion2: How would you use topsysproc to monitor the number of syscalls per second for all processes on a system?
  manpageQuestion3: Can you provide an example of using topsysproc to track the syscall count for a specific process with PID 1234?

