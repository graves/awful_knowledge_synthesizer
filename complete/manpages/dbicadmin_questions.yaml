- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `dbicadmin`.\n\n\n\nManpage text:\n\nDBICADMIN(1)\t      User Contributed Perl Documentation\t  DBICADMIN(1)\n\n\nNAME\n       dbicadmin - utility for administrating DBIx::Class schemata\n\nSYNOPSIS\n       dbicadmin: [-I] [long options...]\n\n\t deploy a schema to a database\n\t dbicadmin --schema=MyApp::Schema \\\n\t   --connect='[\"dbi:SQLite:my.db\", \"\", \"\"]' \\\n\t   --deploy\n\n\t update an existing record\n\t dbicadmin --schema=MyApp::Schema --class=Employee \\\n\t   --connect='[\"dbi:SQLite:my.db\", \"\", \"\"]' \\\n\t   --op=update --set='{ \"name\": \"New_Employee\" }'\n\nOPTIONS\n   Actions\n       --create\n\t   Create version diffs needs preversion\n\n       --upgrade\n\t   Upgrade the database to the current schema\n\n       --install\n\t   Install the schema version tables to an existing database\n\n       --deploy\n\t   Deploy the schema to the database\n\n       --select\n\t   Select data from the schema\n\n       --insert\n\t   Insert data into the schema\n\n       --update\n\t   Update data in the schema\n\n       --delete\n\t   Delete data from the schema\n\n       --op\n\t   compatibility option all of the above can be supplied as\n\t   --op=<action>\n\n       --help\n\t   display this help\n\n   Arguments\n       --config-file or --config\n\t   Supply the config file for parsing by Config::Any\n\n       --connect-info\n\t   Supply the connect info as trailing options e.g. --connect-info\n\t   dsn=<dsn> user=<user> password=<pass>\n\n       --connect\n\t   Supply the connect info as a JSON-encoded structure, e.g. an\n\t   --connect=[\"dsn\",\"user\",\"pass\"]\n\n       --schema-class\n\t   The class of the schema to load\n\n       --config-stanza\n\t   Where in the config to find the connection_info, supply in form\n\t   MyApp::Model::DB\n\n       --resultset or --resultset-class or --class\n\t   The resultset to operate on for data manipulation\n\n       --sql-dir\n\t   The directory where sql diffs will be created\n\n       --sql-type\n\t   The RDBMs flavour you wish to use\n\n       --version\n\t   Supply a version install\n\n       --preversion\n\t   The previous version to diff against\n\n       --set\n\t   JSON data used to perform data operations\n\n       --attrs\n\t   JSON string to be used for the second argument for search\n\n       --where\n\t   JSON string to be used for the where clause of search\n\n       --force\n\t   Be forceful with some operations\n\n       --trace\n\t   Turn on DBIx::Class trace output\n\n       --quiet\n\t   Be less verbose\n\n       -I  Same as perl's -I, prepended to current @INC\n\nAUTHORS\n       See \"AUTHORS\" in DBIx::Class\n\nLICENSE\n       You may distribute this code under the same terms as Perl itself\n\nperl v5.34.0\t\t\t  2018-01-29\t\t\t  DBICADMIN(1)"
  manpageQuestion1: What is the primary purpose of the dbicadmin utility?
  manpageQuestion2: How can you use dbicadmin to deploy a DBIx::Class schema to a SQLite database?
  manpageQuestion3: Can you provide an example of using dbicadmin to update a record in the Employee table with new name data?

