- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ipptoolfile`.\n\n\n\nManpage text:\n\nipptoolfile(5)\t\t\t  Apple Inc.\t\t\tipptoolfile(5)\n\nNAME\n       ipptoolfile - ipptool file format\n\nDESCRIPTION\n       The ipptool(1) program accepts free-form plain text files that describe\n       one or more IPP requests.  Comments start with the \"#\" character and\n       continue to the end of the line.  Each request is enclosed by curly\n       braces, for example:\n\n\t   # This is a comment\n\t   {\n\t     # The name of the test\n\t     NAME \"Print PDF File\"\n\n\t     # The request to send\n\t     OPERATION Print-Job\n\n\t     GROUP operation-attributes-tag\n\t     ATTR charset attributes-charset utf-8\n\t     ATTR language attributes-natural-language en\n\t     ATTR uri printer-uri $uri\n\t     ATTR name requesting-user-name $user\n\t     ATTR mimeMediaType document-format application/pdf\n\n\t     GROUP job-attributes-tag\n\t     ATTR collection media-col {\n\t       # US Letter plain paper from the \"main\" tray\n\t       MEMBER collection media-size {\n\t\t MEMBER integer x-dimension 21590\n\t\t MEMBER integer y-dimension 27940\n\t       }\n\t       MEMBER integer media-top-margin 423\n\t       MEMBER integer media-bottom-margin 423\n\t       MEMBER integer media-left-margin 423\n\t       MEMBER integer media-right-margin 423\n\t       MEMBER keyword media-source \"main\"\n\t       MEMBER keyword media-type \"stationery\"\n\t     }"
  manpageQuestion1: What is the primary purpose of the ipptoolfile resource?
  manpageQuestion2: How would you use ipptoolfile to define a simple IPP request for printing a PDF file?
  manpageQuestion3: Can you provide an example of how to structure an ipptoolfile to include both operation and job attributes for a printer request?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ipptoolfile`.\n\n\n\nManpage text:\n\nFILE testfile.pdf\n\n\t     # The response to expect\n\t     STATUS successful-ok\n\t     EXPECT job-id OF-TYPE integer WITH-VALUE >0\n\t     EXPECT job-uri OF-TYPE uri\n\t   }\n\t   {\n\t     # The name of the test\n\t     NAME \"Wait for Job to Complete\"\n\n\t     # The request to send\n\t     OPERATION Get-Job-Attributes\n\n\t     GROUP operation-attributes-tag\n\t     ATTR charset attributes-charset utf-8\n\t     ATTR language attributes-natural-language en\n\t     ATTR uri printer-uri $uri\n\t     ATTR integer job-id $job-id\n\t     ATTR name requesting-user-name $user\n\n\t     # The response to expect\n\t     STATUS successful-ok\n\t     EXPECT job-id OF-TYPE integer WITH-VALUE $job-id\n\t     EXPECT job-uri OF-TYPE uri\n\t     EXPECT job-state OF-TYPE enum WITH-VALUE >5 REPEAT-NO-MATCH\n\t     EXPECT job-originating-user-name OF-TYPE name WITH-VALUE \"$user\"\n\n\t     # Show the job state until completed...\n\t     DISPLAY job-state\n\t     DISPLAY job-state-reasons\n\t   }\n\n   TOP-LEVEL DIRECTIVES\n       The following directives can be used outside of a test:"
  manpageQuestion1: What is the primary purpose of the ipptoolfile resource?
  manpageQuestion2: How would you use ipptoolfile to test the job state of a printer job with a specific user name and job ID?
  manpageQuestion3: Can you provide an example of using ipptoolfile to monitor the state of a printer job until it is completed?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ipptoolfile`.\n\n\n\nManpage text:\n\n{ test }\n\t    Defines a test.\n\n       DEFINE variable-name value\n\t    Defines the named variable to the given value. This is equivalent\n\t    to specifying -d variable-name=value on the ipptool(8) command-\n\t    line.\n\n       DEFINE-DEFAULT variable-name value\n\t    Defines the named variable to the given value if it does not\n\t    already have a value.\n\n       FILE-ID \"identifier\"\n\t    Specifies an identifier string for the current file.\n\n       IGNORE-ERRORS yes\n\n       IGNORE-ERRORS no\n\t    Specifies whether, by default, ipptool(8) will ignore errors and\n\t    continue with subsequent tests.\n\n       INCLUDE \"filename\"\n\n       INCLUDE <filename>\n\t    Includes another test file. The first form includes a file\n\t    relative to the current test file, while the second form includes\n\t    a file from the ipptool(8) include directory.\n\n       INCLUDE-IF-DEFINED name \"filename\"\n\n       INCLUDE-IF-DEFINED name <filename>\n\t    Includes another test file if the named variable is defined. The\n\t    first form includes a file relative to the current test file,\n\t    while the second form includes a file from the ipptool(8) include\n\t    directory."
  manpageQuestion1: What is the primary purpose of the ipptoolfile resource?
  manpageQuestion2: How can you define a variable in an ipptoolfile and set its value?
  manpageQuestion3: What is the function of the INCLUDE command in ipptoolfile and how is it used?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ipptoolfile`.\n\n\n\nManpage text:\n\nINCLUDE-IF-NOT-DEFINED name \"filename\"\n\n       INCLUDE-IF-NOT-DEFINED name <filename>\n\t    Includes another test file if the named variable is not defined.\n\t    The first form includes a file relative to the current test file,\n\t    while the second form includes a file from the ipptool(8) include\n\t    directory.\n\n       SKIP-IF-DEFINED variable-name\n\n       SKIP-IF-NOT-DEFINED variable-name\n\t    Specifies that the remainder of the test file should be skipped\n\t    when the variable is or is not defined.\n\n       STOP-AFTER-INCLUDE-ERROR no\n\n       STOP-AFTER-INCLUDE-ERROR yes\n\t    Specifies whether tests will be stopped after an error in an\n\t    included file.\n\n       TRANSFER auto\n\t    Specifies that tests will, by default, use \"Transfer-Encoding:\n\t    chunked\" for requests with attached files and \"Content-Length:\"\n\t    for requests without attached files.\n\n       TRANSFER chunked\n\t    Specifies that tests will, by default, use the HTTP/1.1 \"Transfer-\n\t    Encoding: chunked\" header. This is the default and is equivalent\n\t    to specifying -c on the ipptool(8) command-line. Support for\n\t    chunked requests is required for conformance with all versions of\n\t    IPP."
  manpageQuestion1: What is the primary purpose of the ipptoolfile resource?
  manpageQuestion2: How would you use ipptoolfile to skip a test file if the variable 'TEST_ENV' is defined?
  manpageQuestion3: Can you provide an example of using ipptoolfile to include a test file named 'test_utils.txt' from the ipptool include directory?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ipptoolfile`.\n\n\n\nManpage text:\n\nTRANSFER length\n\t    Specifies that tests will, by default, use the HTTP/1.0 \"Content-\n\t    Length:\" header. This is equivalent to specifying -l on the\n\t    ipptool(8) command-line. Support for content length requests is\n\t    required for conformance with all versions of IPP.\n\n       VERSION 1.0\n\n       VERSION 1.1\n\n       VERSION 2.0\n\n       VERSION 2.1\n\n       VERSION 2.2\n\t    Specifies the default IPP version number to use for the tests that\n\t    follow.\n\n   TEST DIRECTIVES\n       The following directives are understood within a test:\n\n       ATTR out-of-band-tag attribute-name\n\n       ATTR tag attribute-name value(s)\n\t    Adds an attribute to the test request.  Out-of-band tags (admin-\n\t    define, delete-attribute, no-value, not-settable, unknown,\n\t    unsupported) have no value.  Values for other tags are delimited\n\t    by the comma (\",\") character - escape commas using the \"\\\"\n\t    character.\tCommon attributes and values are listed in the IANA\n\t    IPP registry - see references below."
  manpageQuestion1: What is the primary purpose of the ipptoolfile resource?
  manpageQuestion2: How would you use ipptoolfile to set the default IPP version to 2.0 and add an out-of-band tag called 'admin-define' to the test request?
  manpageQuestion3: Can you provide an example of using ipptoolfile to add a standard attribute 'printer-uri' with the value 'ipp://localhost:631/printers/test-printer' to a test request?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ipptoolfile`.\n\n\n\nManpage text:\n\nATTR collection attribute-name { MEMBER tag member-name value(s) ... }\n       [ ... ,{ ... } ]\n\t    Adds a collection attribute to the test request.  Member\n\t    attributes follow the same syntax as regular attributes and can\n\t    themselves be nested collections.  Multiple collection values can\n\t    be supplied as needed, separated by commas.\n\n       COMPRESSION deflate\n\n       COMPRESSION gzip\n\n       COMPRESSION none\n\t    Uses the specified compression on the document data following the\n\t    attributes in a Print-Job or Send-Document request.\n\n       DELAY seconds[,repeat-seconds]\n\t    Specifies a delay in seconds before this test will be run.\tIf two\n\t    values are specified, the second value is used as the delay\n\t    between repeated tests.\n\n       DISPLAY attribute-name\n\t    Specifies that value of the named attribute should be output as\n\t    part of the test report.\n\n       EXPECT attribute-name [ predicate(s) ]\n\n       EXPECT ?attribute-name predicate(s)\n\n       EXPECT !attribute-name\n\t    Specifies that the response must/may/must not include the named\n\t    attribute. Additional requirements can be added as predicates -\n\t    see the \"EXPECT PREDICATES\" section for more information on\n\t    predicates. Attribute names can specify member attributes by\n\t    separating the attribute and member names with the forward slash,\n\t    for example \"media-col/media-size/x-dimension\"."
  manpageQuestion1: What is the primary purpose of the ipptoolfile command?
  manpageQuestion2: How would you use ipptoolfile to compress a Print-Job request using gzip compression?
  manpageQuestion3: Can you provide an example of using ipptoolfile to specify that the value of the 'media-col/media-size/x-dimension' attribute should be displayed in the test report?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ipptoolfile`.\n\n\n\nManpage text:\n\nEXPECT-ALL attribute-name [ predicate(s) ]\n\n       EXPECT-ALL ?attribute-name predicate(s)\n\t    Specifies that the response must/may include the named attribute\n\t    and that all occurrences of that attribute must match the given\n\t    predicates.\n\n       FILE filename\n\t    Specifies a file to include at the end of the request. This is\n\t    typically used when sending a test print file.\n\n       GROUP tag\n\t    Specifies the group tag for subsequent attributes in the request.\n\n       IGNORE-ERRORS yes\n\n       IGNORE-ERRORS no\n\t    Specifies whether ipptool(8) will ignore errors and continue with\n\t    subsequent tests.\n\n       NAME \"literal string\"\n\t    Specifies the human-readable name of the test.\n\n       OPERATION operation-code\n\t    Specifies the operation to be performed.\n\n       PAUSE \"message\"\n\t    Displays the provided message and waits for the user to press a\n\t    key to continue.\n\n       REQUEST-ID number\n\n       REQUEST-ID random\n\t    Specifies the request-id value to use in the request, either an\n\t    integer or the word \"random\" to use a randomly generated value\n\t    (the default)."
  manpageQuestion1: What is the primary purpose of the ipptoolfile command?
  manpageQuestion2: How would you use ipptoolfile to include a specific test print file named 'test.print' in a request?
  manpageQuestion3: Can you provide an example of using ipptoolfile to set the request-id to a random value and specify a test name?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ipptoolfile`.\n\n\n\nManpage text:\n\nRESOURCE path\n\t    Specifies an alternate resource path that is used for the HTTP\n\t    POST request. The default is the resource from the URI provided to\n\t    the ipptool(8) program.\n\n       SKIP-IF-DEFINED variable-name\n\n       SKIP-IF-NOT-DEFINED variable-name\n\t    Specifies that the current test should be skipped when the\n\t    variable is or is not defined.\n\n       SKIP-PREVIOUS-ERROR yes\n\n       SKIP-PREVIOUS-ERROR no\n\t    Specifies whether ipptool(8) will skip the current test if the\n\t    previous test resulted in an error/failure.\n\n       STATUS status-code [ predicate ]\n\t    Specifies an expected response status-code value. Additional\n\t    requirements can be added as predicates - see the \"STATUS\n\t    PREDICATES\" section for more information on predicates.\n\n       TEST-ID \"identifier\"\n\t    Specifies an identifier string for the current test.\n\n       TRANSFER auto\n\t    Specifies that this test will use \"Transfer-Encoding: chunked\" if\n\t    it has an attached file or \"Content-Length:\" otherwise."
  manpageQuestion1: What is the primary purpose of the ipptoolfile resource?
  manpageQuestion2: How would you configure ipptoolfile to skip a test if the variable 'PRINTERS' is defined?
  manpageQuestion3: Can you provide an example of using ipptoolfile to set the expected HTTP status code to 200 with a predicate that checks if the response is successful?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ipptoolfile`.\n\n\n\nManpage text:\n\nTRANSFER chunked\n\t    Specifies that this test will use the HTTP/1.1 \"Transfer-Encoding:\n\t    chunked\" header.\n\n       TRANSFER length\n\t    Specifies that this test will use the HTTP/1.0 \"Content-Length:\"\n\t    header.\n\n       VERSION 1.0\n\n       VERSION 1.1\n\n       VERSION 2.0\n\n       VERSION 2.1\n\n       VERSION 2.2\n\t    Specifies the IPP version number to use for this test.\n\n   EXPECT PREDICATES\n       The following predicates are understood following the EXPECT test\n       directive:\n\n       COUNT number\n\t    Requires the EXPECT attribute to have the specified number of\n\t    values.\n\n       DEFINE-MATCH variable-name\n\t    Defines the variable to \"1\" when the EXPECT condition matches. A\n\t    side-effect of this predicate is that this EXPECT will never fail\n\t    a test.\n\n       DEFINE-NO-MATCH variable-name\n\t    Defines the variable to \"1\" when the EXPECT condition does not\n\t    match. A side-effect of this predicate is that this EXPECT will\n\t    never fail a test.\n\n       DEFINE-VALUE variable-name\n\t    Defines the variable to the value of the attribute when the EXPECT\n\t    condition matches. A side-effect of this predicate is that this\n\t    EXPECT will never fail a test."
  manpageQuestion1: What is the primary purpose of the ipptoolfile resource?
  manpageQuestion2: How can you configure ipptoolfile to use the HTTP/1.0 'Content-Length' header for a test?
  manpageQuestion3: What is the function of the 'DEFINE-VALUE' predicate in ipptoolfile tests?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ipptoolfile`.\n\n\n\nManpage text:\n\nIF-DEFINED variable-name\n\t    Makes the EXPECT conditions apply only if the specified variable\n\t    is defined.\n\n       IF-NOT-DEFINED variable-name\n\t    Makes the EXPECT conditions apply only if the specified variable\n\t    is not defined.\n\n       IN-GROUP tag\n\t    Requires the EXPECT attribute to be in the specified group tag.\n\n       OF-TYPE tag[|tag,...]\n\t    Requires the EXPECT attribute to use one of the specified value\n\t    tag(s).\n\n       REPEAT-LIMIT number\n\t    Specifies the maximum number of times to repeat if the REPEAT-\n\t    MATCH or REPEAT-NO-MATCH predicate is specified. The default value\n\t    is 1000.\n\n       REPEAT-MATCH\n\n       REPEAT-NO-MATCH\n\t    Specifies that the current test should be repeated when the EXPECT\n\t    condition matches or does not match.\n\n       SAME-COUNT-AS attribute-name\n\t    Requires the EXPECT attribute to have the same number of values as\n\t    the specified parallel attribute.\n\n       WITH-ALL-HOSTNAMES \"literal string\"\n\n       WITH-ALL-HOSTNAMES \"/regular expression/\"\n\t    Requires that all URI values contain a matching hostname."
  manpageQuestion1: What is the primary purpose of the ipptoolfile resource?
  manpageQuestion2: How would you use ipptoolfile to ensure that all URI values contain the hostname 'example.com'?
  manpageQuestion3: Can you provide an example of using ipptoolfile to repeat a test up to 1000 times based on whether the EXPECT condition matches or not?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ipptoolfile`.\n\n\n\nManpage text:\n\nWITH-ALL-RESOURCES \"literal string\"\n\n       WITH-ALL-RESOURCES \"/regular expression/\"\n\t    Requires that all URI values contain a matching resource\n\t    (including leading /).\n\n       WITH-ALL-SCHEMES \"literal string\"\n\n       WITH-ALL-SCHEMES \"/regular expression/\"\n\t    Requires that all URI values contain a matching scheme.\n\n       WITH-ALL-VALUES \"literal string\"\n\t    Requires that all values of the EXPECT attribute match the literal\n\t    string. Comparisons are case-sensitive.\n\n       WITH-ALL-VALUES <number\n\n       WITH-ALL-VALUES =number\n\n       WITH-ALL-VALUES >number\n\n       WITH-ALL-VALUES number[,...,number]\n\t    Requires that all values of the EXPECT attribute match the\n\t    number(s) or numeric comparison. When comparing rangeOfInteger\n\t    values, the \"<\" and \">\" operators only check the upper bound of\n\t    the range.\n\n       WITH-ALL-VALUES \"false\"\n\n       WITH-ALL-VALUES \"true\"\n\t    Requires that all values of the EXPECT attribute match the boolean\n\t    value given.\n\n       WITH-ALL-VALUES \"/regular expression/\"\n\t    Requires that all values of the EXPECT attribute match the regular\n\t    expression, which must conform to the POSIX regular expression\n\t    syntax. Comparisons are case-sensitive."
  manpageQuestion1: What is the primary purpose of the ipptoolfile resource?
  manpageQuestion2: How would you use ipptoolfile to ensure that all URI values in a test contain the scheme 'https'?
  manpageQuestion3: Can you provide an example of using ipptoolfile to check that all EXPECT attributes are equal to the integer value 42?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ipptoolfile`.\n\n\n\nManpage text:\n\nWITH-HOSTNAME \"literal string\"\n\n       WITH-HOSTNAME \"/regular expression/\"\n\t    Requires that at least one URI value contains a matching hostname.\n\n       WITH-RESOURCE \"literal string\"\n\n       WITH-RESOURCE \"/regular expression/\"\n\t    Requires that at least one URI value contains a matching resource\n\t    (including leading /).\n\n       WITH-SCHEME \"literal string\"\n\n       WITH-SCHEME \"/regular expression/\"\n\t    Requires that at least one URI value contains a matching scheme.\n\n       WITH-VALUE \"literal string\"\n\t    Requires that at least one value of the EXPECT attribute matches\n\t    the literal string. Comparisons are case-sensitive.\n\n       WITH-VALUE <number\n\n       WITH-VALUE =number\n\n       WITH-VALUE >number\n\n       WITH-VALUE number[,...,number]\n\t    Requires that at least one value of the EXPECT attribute matches\n\t    the number(s) or numeric comparison. When comparing rangeOfInteger\n\t    values, the \"<\" and \">\" operators only check the upper bound of\n\t    the range.\n\n       WITH-VALUE \"false\""
  manpageQuestion1: What is the primary purpose of the ipptoolfile resource?
  manpageQuestion2: How can you use the ipptoolfile resource to ensure that at least one URI in a list contains a hostname matching the regular expression 'example.com'?
  manpageQuestion3: Can you provide an example of using the ipptoolfile resource to check that at least one value in the EXPECT attribute is greater than 100?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ipptoolfile`.\n\n\n\nManpage text:\n\nWITH-VALUE \"true\"\n\t    Requires that at least one value of the EXPECT attribute matches\n\t    the boolean value given.\n\n       WITH-VALUE \"/regular expression/\"\n\t    Requires that at least one value of the EXPECT attribute matches\n\t    the regular expression, which must conform to the POSIX regular\n\t    expression syntax. Comparisons are case-sensitive.\n\n       WITH-VALUE-FROM attribute-name\n\t    Requires that the value(s) of the EXPECT attribute matches the\n\t    value(s) in the specified attribute.  For example, \"EXPECT\n\t    job-sheets WITH-VALUE-FROM job-sheets-supported\" requires that the\n\t    \"job-sheets\" value is listed as a value of the\n\t    \"job-sheets-supported\" attribute.\n\n   STATUS PREDICATES\n       The following predicates are understood following the STATUS test\n       directive:\n\n       DEFINE-MATCH variable-name\n\t    Defines the variable to \"1\" when the STATUS matches. A side-effect\n\t    of this predicate is that this STATUS will never fail a test.\n\n       DEFINE-NO-MATCH variable-name\n\t    Defines the variable to \"1\" when the STATUS does not match. A\n\t    side-effect of this predicate is that this STATUS will never fail\n\t    a test."
  manpageQuestion1: What is the primary purpose of the ipptoolfile resource?
  manpageQuestion2: How can you use the ipptoolfile to require that at least one value of the EXPECT attribute matches a specific regular expression?
  manpageQuestion3: Can you provide an example of using ipptoolfile to check if the STATUS matches a defined condition and set a variable accordingly?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ipptoolfile`.\n\n\n\nManpage text:\n\nIF-DEFINED variable-name\n\t    Makes the STATUS apply only if the specified variable is defined.\n\n       IF-NOT-DEFINED variable-name\n\t    Makes the STATUS apply only if the specified variable is not\n\t    defined.\n\n       REPEAT-LIMIT number\n\t    Specifies the maximum number of times to repeat. The default value\n\t    is 1000.\n\n       REPEAT-MATCH\n\n       REPEAT-NO-MATCH\n\t    Specifies that the current test should be repeated when the\n\t    response status-code matches or does not match the value specified\n\t    by the STATUS directive.\n\n   OPERATION CODES\n       Operation codes correspond to the hexadecimal numbers (0xHHHH) and\n       names from RFC 8011 and other IPP extension specifications. Here is a\n       complete list of names supported by ipptool(8):\n\n\t   Activate-Printer\n\t   CUPS-Accept-Jobs\n\t   CUPS-Add-Modify-Class\n\t   CUPS-Add-Modify-Printer\n\t   CUPS-Authenticate-Job\n\t   CUPS-Delete-Class\n\t   CUPS-Delete-Printer\n\t   CUPS-Get-Classes\n\t   CUPS-Get-Default\n\t   CUPS-Get-Devices\n\t   CUPS-Get-Document\n\t   CUPS-Get-PPD\n\t   CUPS-Get-PPDs\n\t   CUPS-Get-Printers\n\t   CUPS-Move-Job\n\t   CUPS-Reject-Jobs\n\t   CUPS-Set-Default\n\t   Cancel-Current-Job\n\t   Cancel-Job\n\t   Cancel-Jobs\n\t   Cancel-My-Jobs\n\t   Cancel-Subscription\n\t   Close-Job\n\t   Create-Job\n\t   Create-Job-Subscriptions\n\t   Create-Printer-Subscriptions\n\t   Deactivate-Printer\n\t   Disable-Printer\n\t   Enable-Printer\n\t   Get-Job-Attributes\n\t   Get-Jobs\n\t   Get-Notifications\n\t   Get-Printer-Attributes\n\t   Get-Printer-Support-Files\n\t   Get-Printer-Supported-Values\n\t   Get-Subscription-Attributes\n\t   Get-Subscriptions\n\t   Hold-Job\n\t   Hold-New-Jobs\n\t   Identify-Printer\n\t   Pause-Printer\n\t   Pause-Printer-After-Current-Job\n\t   Print-Job\n\t   Print-URI\n\t   Promote-Job\n\t   Purge-Jobs\n\t   Release-Held-New-Jobs\n\t   Release-Job\n\t   Renew-Subscription\n\t   Reprocess-Job\n\t   Restart-Job\n\t   Restart-Printer\n\t   Resubmit-Job\n\t   Resume-Job\n\t   Resume-Printer\n\t   Schedule-Job-After\n\t   Send-Document\n\t   Send-Hardcopy-Document\n\t   Send-Notifications\n\t   Send-URI\n\t   Set-Job-Attributes\n\t   Set-Printer-Attributes\n\t   Shutdown-Printer\n\t   Startup-Printer\n\t   Suspend-Current-Job\n\t   Validate-Document\n\t   Validate-Job"
  manpageQuestion1: What is the primary purpose of the ipptoolfile resource?
  manpageQuestion2: How can you use ipptoolfile to perform a specific printer operation such as activating a printer?
  manpageQuestion3: Can you provide an example of using ipptoolfile with the REPEAT-LIMIT option to control the number of repetitions in a test?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ipptoolfile`.\n\n\n\nManpage text:\n\nSTATUS CODES\n       Status codes correspond to the hexadecimal numbers (0xHHHH) and names\n       from RFC 8011 and other IPP extension specifications. Here is a\n       complete list of the names supported by ipptool(8):\n\n\t   client-error-account-authorization-failed\n\t   client-error-account-closed\n\t   client-error-account-info-needed\n\t   client-error-account-limit-reached\n\t   client-error-attributes-not-settable\n\t   client-error-attributes-or-values-not-supported\n\t   client-error-bad-request\n\t   client-error-charset-not-supported\n\t   client-error-compression-error\n\t   client-error-compression-not-supported\n\t   client-error-conflicting-attributes\n\t   client-error-document-access-error\n\t   client-error-document-format-error\n\t   client-error-document-format-not-supported\n\t   client-error-document-password-error\n\t   client-error-document-permission-error\n\t   client-error-document-security-error\n\t   client-error-document-unprintable-error\n\t   client-error-forbidden\n\t   client-error-gone\n\t   client-error-ignored-all-notifications\n\t   client-error-ignored-all-subscriptions\n\t   client-error-not-authenticated\n\t   client-error-not-authorized\n\t   client-error-not-found\n\t   client-error-not-possible\n\t   client-error-print-support-file-not-found\n\t   client-error-request-entity-too-large\n\t   client-error-request-value-too-long\n\t   client-error-timeout\n\t   client-error-too-many-subscriptions\n\t   client-error-uri-scheme-not-supported\n\t   cups-error-account-authorization-failed\n\t   cups-error-account-closed\n\t   cups-error-account-info-needed\n\t   cups-error-account-limit-reached\n\t   cups-see-other\n\t   redirection-other-site\n\t   server-error-busy\n\t   server-error-device-error\n\t   server-error-internal-error\n\t   server-error-job-canceled\n\t   server-error-multiple-document-jobs-not-supported\n\t   server-error-not-accepting-jobs\n\t   server-error-operation-not-supported\n\t   server-error-printer-is-deactivated\n\t   server-error-service-unavailable\n\t   server-error-temporary-error\n\t   server-error-version-not-supported\n\t   successful-ok\n\t   successful-ok-but-cancel-subscription\n\t   successful-ok-conflicting-attributes\n\t   successful-ok-events-complete\n\t   successful-ok-ignored-notifications\n\t   successful-ok-ignored-or-substituted-attributes\n\t   successful-ok-ignored-subscriptions\n\t   successful-ok-too-many-events"
  manpageQuestion1: What is the primary purpose of the ipptoolfile resource?
  manpageQuestion2: How can you use ipptoolfile to convert a status code name like 'client-error-bad-request' into its corresponding hexadecimal value?
  manpageQuestion3: Can you provide an example of converting the hexadecimal status code 0x1234 into its corresponding status code name using ipptoolfile?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ipptoolfile`.\n\n\n\nManpage text:\n\nTAGS\n       Value and group tags correspond to the names from RFC 8011 and other\n       IPP extension specifications. Here are the group tags:\n\n\t   document-attributes-tag\n\t   event-notification-attributes-tag\n\t   job-attributes-tag\n\t   operation-attributes-tag\n\t   printer-attributes-tag\n\t   subscription-attributes-tag\n\t   unsupported-attributes-tag\n\n       Here are the value tags:\n\n\t   admin-define\n\t   boolean\n\t   charset\n\t   collection\n\t   dateTime\n\t   default\n\t   delete-attribute\n\t   enum\n\t   integer\n\t   keyword\n\t   mimeMediaType\n\t   nameWithLanguage\n\t   nameWithoutLanguage\n\t   naturalLanguage\n\t   no-value\n\t   not-settable\n\t   octetString\n\t   rangeOfInteger\n\t   resolution\n\t   textWithLanguage\n\t   textWithoutLanguage\n\t   unknown\n\t   unsupported\n\t   uri\n\t   uriScheme\n\n   VARIABLES\n       The ipptool(8) program maintains a list of variables that can be used\n       in any literal string or attribute value by specifying \"$variable-\n       name\". Aside from variables defined using the -d option or DEFINE\n       directive, the following pre-defined variables are available:"
  manpageQuestion1: What is the primary purpose of the ipptoolfile resource?
  manpageQuestion2: How can you use the ipptoolfile to reference a predefined variable in a string or attribute value?
  manpageQuestion3: What are some of the common group tags and value tags associated with the ipptoolfile resource?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ipptoolfile`.\n\n\n\nManpage text:\n\n$$   Inserts a single \"$\" character.\n\n       $ENV[name]\n\t    Inserts the value of the named environment variable, or an empty\n\t    string if the environment variable is not defined.\n\n       $date-current\n\t    Inserts the current date and time using the ISO-8601 format\n\t    (\"yyyy-mm-ddThh:mm:ssZ\").\n\n       $date-start\n\t    Inserts the starting date and time using the ISO-8601 format\n\t    (\"yyyy-mm-ddThh:mm:ssZ\").\n\n       $filename\n\t    Inserts the filename provided to ipptool(8) with the -f option.\n\n       $filetype\n\t    Inserts the MIME media type for the filename provided to\n\t    ipptool(8) with the -f option.\n\n       $hostname\n\t    Inserts the hostname from the URI provided to ipptool(8).\n\n       $job-id\n\t    Inserts the last \"job-id\" attribute value returned in a test\n\t    response or 0 if no \"job-id\" attribute has been seen.\n\n       $job-uri\n\t    Inserts the last \"job-uri\" attribute value returned in a test\n\t    response or an empty string if no \"job-uri\" attribute has been\n\t    seen."
  manpageQuestion1: What is the primary purpose of the ipptoolfile resource?
  manpageQuestion2: How can you insert the current date and time in ISO-8601 format into a file using ipptoolfile?
  manpageQuestion3: What command would you use to insert the value of an environment variable named 'PATH' into a file using ipptoolfile?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `ipptoolfile`.\n\n\n\nManpage text:\n\n$notify-subscription-id\n\t    Inserts the last \"notify-subscription-id\" attribute value returned\n\t    in a test response or 0 if no \"notify-subscription-id\" attribute\n\t    has been seen.\n\n       $port\n\t    Inserts the port number from the URI provided to ipptool(8).\n\n       $resource\n\t    Inserts the resource path from the URI provided to ipptool(8).\n\n       $scheme\n\t    Inserts the scheme from the URI provided to ipptool(8).\n\n       $uri Inserts the URI provided to ipptool(8).\n\n       $uriuser\n\t    Inserts the username from the URI provided to ipptool(8), if any.\n\n       $user\n\t    Inserts the current user's login name.\n\nSEE ALSO\n       ipptool(1), IANA IPP Registry (http://www.iana.org/assignments/ipp-\n       registrations), PWG Internet Printing Protocol Workgroup\n       (http://www.pwg.org/ipp), RFC 8011 (http://tools.ietf.org/html/rfc8011)\n\nCOPYRIGHT\n       Copyright © 2007-2019 by Apple Inc.\n\n15 August 2019\t\t\t     CUPS\t\t\tipptoolfile(5)"
  manpageQuestion1: What is the primary purpose of the ipptoolfile resource?
  manpageQuestion2: How would you use the $uri variable in ipptoolfile to insert the full URI provided to ipptool(8) into a configuration file?
  manpageQuestion3: Can you provide an example of using the $resource variable in ipptoolfile to extract and insert the resource path from a URI into a configuration file?

