- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `eqn`.\n\n\n\nManpage text:\n\nEQN(7)\t\t       Miscellaneous Information Manual \t\tEQN(7)\n\nNAME\n     eqn – eqn language reference for mandoc\n\nDESCRIPTION\n     The eqn language is an equation-formatting language.  It is used within\n     mdoc(7) and man(7) UNIX manual pages.  It describes the structure of an\n     equation, not its mathematical meaning.  This manual describes the eqn\n     language accepted by the mandoc(1) utility, which corresponds to the\n     Second Edition eqn specification (see SEE ALSO for references).\n\n     An equation starts with an input line containing exactly the characters\n     ‘.EQ’, may contain multiple input lines, and ends with an input line\n     containing exactly the characters ‘.EN’.  Equivalently, an equation can\n     be given in the middle of a single text input line by surrounding it with\n     the equation delimiters defined with the delim statement.\n\n     The equation grammar is as follows, where quoted strings are case-\n     sensitive literals in the input:\n\n\t   eqn\t   : box | eqn box\n\t   box\t   : text\n\t\t   | \"{\" eqn \"}\"\n\t\t   | \"define\" text text\n\t\t   | \"ndefine\" text text\n\t\t   | \"tdefine\" text text\n\t\t   | \"gfont\" text\n\t\t   | \"gsize\" text\n\t\t   | \"set\" text text\n\t\t   | \"undef\" text\n\t\t   | \"sqrt\" box\n\t\t   | box pos box\n\t\t   | box mark\n\t\t   | \"matrix\" \"{\" [col \"{\" list \"}\"]* \"}\"\n\t\t   | pile \"{\" list \"}\"\n\t\t   | font box\n\t\t   | \"size\" text box\n\t\t   | \"left\" text eqn [\"right\" text]\n\t   col\t   : \"lcol\" | \"rcol\" | \"ccol\" | \"col\"\n\t   text    : [^space\\\"]+ | \\\".*\\\"\n\t   pile    : \"lpile\" | \"cpile\" | \"rpile\" | \"pile\"\n\t   pos\t   : \"over\" | \"sup\" | \"sub\" | \"to\" | \"from\"\n\t   mark    : \"dot\" | \"dotdot\" | \"hat\" | \"tilde\" | \"vec\"\n\t\t   | \"dyad\" | \"bar\" | \"under\"\n\t   font    : \"roman\" | \"italic\" | \"bold\" | \"fat\"\n\t   list    : eqn\n\t\t   | list \"above\" eqn\n\t   space   : [\\^~ \\t]"
  manpageQuestion1: What is the primary purpose of the eqn tool?
  manpageQuestion2: How would you use the eqn language to format a mathematical equation within a man page?
  manpageQuestion3: Can you provide an example of using the eqn language to create a matrix equation with specific formatting?

- prompt: |-
    You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `eqn`.



    Manpage text:

    White-space consists of the space, tab, circumflex, and tilde characters.
         It is required to delimit tokens consisting of alphabetic characters and
         it is ignored at other places.  Braces and quotes also delimit tokens.
         If within a quoted string, these space characters are retained.  Quoted
         strings are also not scanned for keywords, glyph names, and expansion of
         definitions.  To print a literal quote character, it can be prepended
         with a backslash or expressed with the \(dq escape sequence.

         Subequations can be enclosed in braces to pass them as arguments to
         operation keywords, overriding standard operation precedence.  Braces can
         be nested.  To set a brace verbatim, it needs to be enclosed in quotes.

         The following text terms are translated into a rendered glyph, if
         available: alpha, beta, chi, delta, epsilon, eta, gamma, iota, kappa,
         lambda, mu, nu, omega, omicron, phi, pi, psi, rho, sigma, tau, theta,
         upsilon, xi, zeta, DELTA, GAMMA, LAMBDA, OMEGA, PHI, PI, PSI, SIGMA,
         THETA, UPSILON, XI, inter (intersection), union (union), prod (product),
         int (integral), sum (summation), grad (gradient), del (vector
         differential), times (multiply), cdot (center-dot), nothing (zero-width
         space), approx (approximately equals), prime (prime), half (one-half),
         partial (partial differential), inf (infinity), >> (much greater), <<
         (much less), <- (left arrow), -> (right arrow), +- (plus-minus), != (not
         equal), == (equivalence), <= (less-than-equal), and >= (more-than-equal).
         The character escape sequences documented in mandoc_char(7) can be used,
         too.
  manpageQuestion1: What is the primary purpose of the eqn utility?
  manpageQuestion2: How can you print a literal quote character in an eqn input file?
  manpageQuestion3: What is the correct way to enclose subequations in eqn for use as arguments to operation keywords?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `eqn`.\n\n\n\nManpage text:\n\nThe following control statements are available:\n\n     define  Replace all occurrences of a key with a value.  Its syntax is as\n\t     follows:\n\n\t\t   define key cvalc\n\n\t     The first character of the value string, c, is used as the\n\t     delimiter for the value val.  This allows for arbitrary enclosure\n\t     of terms (not just quotes), such as\n\n\t\t   define foo 'bar baz'\n\t\t   define foo cbar bazc\n\n\t     It is an error to have an empty key or val.  Note that a quoted\n\t     key causes errors in some eqn implementations and should not be\n\t     considered portable.  It is not expanded for replacements.\n\t     Definitions may refer to other definitions; these are evaluated\n\t     recursively when text replacement occurs and not when the\n\t     definition is created.\n\n\t     Definitions can create arbitrary strings, for example, the\n\t     following is a legal construction.\n\n\t\t   define foo 'define'\n\t\t   foo bar 'baz'\n\n\t     Self-referencing definitions will raise an error.\tThe ndefine\n\t     statement is a synonym for define, while tdefine is discarded."
  manpageQuestion1: What is the primary purpose of the eqn tool?
  manpageQuestion2: How would you use the eqn tool to replace all occurrences of the key 'foo' with the value 'bar baz'?
  manpageQuestion3: Can you provide an example of using the eqn tool to create a self-referencing definition and then use it in a string?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `eqn`.\n\n\n\nManpage text:\n\ndelim   This statement takes a string argument consisting of two bytes,\n\t     to be used as the opening and closing delimiters for equations in\n\t     the middle of text input lines.  Conventionally, the dollar sign\n\t     is used for both delimiters, as follows:\n\n\t\t   .EQ\n\t\t   delim $$\n\t\t   .EN\n\t\t   An equation like $sin pi = 0$ can now be entered\n\t\t   in the middle of a text input line.\n\n\t     The special statement delim off temporarily disables previously\n\t     declared delimiters and delim on reenables them.\n\n     gfont   Set the default font of subsequent output.  Its syntax is as\n\t     follows:\n\n\t\t   gfont font\n\n\t     In mandoc, this value is discarded.\n\n     gsize   Set the default size of subsequent output.  Its syntax is as\n\t     follows:\n\n\t\t   gsize [+|-]size\n\n\t     The size value should be an integer.  If prepended by a sign, the\n\t     font size is changed relative to the current size.\n\n     set     Set an equation mode.  In mandoc, both arguments are thrown away.\n\t     Its syntax is as follows:"
  manpageQuestion1: What is the primary purpose of the eqn resource?
  manpageQuestion2: How can you configure the delimiters for equations in mandoc using the eqn resource?
  manpageQuestion3: What is the function of the gsize command in the eqn resource and how is it typically used?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `eqn`.\n\n\n\nManpage text:\n\nset key val\n\n\t     The key and val are not expanded for replacements.  This\n\t     statement is a GNU extension.\n\n     undef   Unset a previously-defined key.  Its syntax is as follows:\n\n\t\t   define key\n\n\t     Once invoked, the definition for key is discarded.  The key is\n\t     not expanded for replacements.  This statement is a GNU\n\t     extension.\n\n     Operation keywords have the following semantics:\n\n     above   See pile.\n\n     bar     Draw a line over the preceding box.\n\n     bold    Set the following box using bold font.\n\n     ccol    Like cpile, but for use in matrix.\n\n     cpile   Like pile, but with slightly increased vertical spacing.\n\n     dot     Set a single dot over the preceding box.\n\n     dotdot  Set two dots (dieresis) over the preceding box.\n\n     dyad    Set a dyad symbol (left-right arrow) over the preceding box.\n\n     fat     A synonym for bold.\n\n     font    Set the second argument using the font specified by the first\n\t     argument; currently not recognized by the mandoc(1) eqn parser."
  manpageQuestion1: What is the primary purpose of the eqn command in macOS?
  manpageQuestion2: How would you use the eqn command to define a custom key-value pair for equation formatting?
  manpageQuestion3: Can you provide an example of using the eqn command to apply bold formatting to a mathematical expression?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `eqn`.\n\n\n\nManpage text:\n\nfrom    Set the following box below the preceding box, using a slightly\n\t     smaller font.  Used for sums, integrals, limits, and the like.\n\n     hat     Set a hat (circumflex) over the preceding box.\n\n     italic  Set the following box using italic font.\n\n     lcol    Like lpile, but for use in matrix.\n\n     left    Set the first argument as a big left delimiter before the second\n\t     argument.\tAs an optional third argument, right can follow.  In\n\t     that case, the fourth argument is set as a big right delimiter\n\t     after the second argument.\n\n     lpile   Like cpile, but subequations are left-justified.\n\n     matrix  Followed by a list of columns enclosed in braces.\tAll columns\n\t     need to have the same number of subequations.  The columns are\n\t     set as a matrix.  The difference compared to multiple subsequent\n\t     pile operators is that in a matrix, corresponding subequations in\n\t     all columns line up horizontally, while each pile does vertical\n\t     spacing independently."
  manpageQuestion1: What is the primary purpose of the eqn utility in macOS?
  manpageQuestion2: How can you use the eqn tool to set a hat (circumflex) over a mathematical expression?
  manpageQuestion3: Can you provide an example of using the eqn tool to create a matrix with aligned equations?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `eqn`.\n\n\n\nManpage text:\n\nover    Set a fraction.  The preceding box is the numerator, the\n\t     following box is the denominator.\n\n     pile    Followed by a list of subequations enclosed in braces, the\n\t     subequations being separated by above keywords.  Sets the\n\t     subequations one above the other, each of them centered.\n\t     Typically used to represent vectors in coordinate representation.\n\n     rcol    Like rpile, but for use in matrix.\n\n     right   See left; right cannot be used without left.  To set a big right\n\t     delimiter without a big left delimiter, the following\n\t     construction can be used:\n\n\t\t   left \"\" box right delimiter\n\n     roman   Set the following box using the default font.\n\n     rpile   Like cpile, but subequations are right-justified.\n\n     size    Set the second argument with the font size specified by the first\n\t     argument; currently ignored by mandoc(1).\tBy prepending a plus\n\t     or minus sign to the first argument, the font size can be\n\t     selected relative to the current size."
  manpageQuestion1: What is the primary purpose of the eqn command in the context of macOS?
  manpageQuestion2: How can you use the eqn tool to format a mathematical equation with multiple subequations stacked vertically?
  manpageQuestion3: Can you provide an example of using the eqn command to set a right-justified stack of subequations in a matrix?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `eqn`.\n\n\n\nManpage text:\n\nsqrt    Set the square root of the following box.\n\n     sub     Set the following box as a subscript to the preceding box.\n\n     sup     Set the following box as a superscript to the preceding box.  As\n\t     a special case, if a sup clause immediately follows a sub clause\n\t     as in\n\n\t\t   mainbox sub subbox sup supbox\n\n\t     both are set with respect to the same mainbox, that is, supbox is\n\t     set above subbox.\n\n     tilde   Set a tilde over the preceding box.\n\n     to      Set the following box above the preceding box, using a slightly\n\t     smaller font.  Used for sums and integrals and the like.  As a\n\t     special case, if a to clause immediately follows a from clause as\n\t     in\n\n\t\t   mainbox from frombox to tobox\n\n\t     both are set below and above the same mainbox.\n\n     under   Underline the preceding box.\n\n     vec     Set a vector symbol (right arrow) over the preceding box.\n\n     The binary operations from, to, sub, and sup group to the right, that is,\n\n\t   mainbox sup supbox sub subbox"
  manpageQuestion1: What is the primary purpose of the eqn utility in the context of TeX typesetting?
  manpageQuestion2: How can you use the eqn tool to set a subscript and superscript to the same main box?
  manpageQuestion3: Can you provide an example of using the eqn utility to underline a box and set a vector symbol over it?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `eqn`.\n\n\n\nManpage text:\n\nis the same as\n\n\t   mainbox sup {supbox sub subbox}\n\n     and different from\n\n\t   {mainbox sup supbox} sub subbox.\n\n     By contrast, over groups to the left.\n\n     In the following list, earlier operations bind more tightly than later\n     operations:\n\n     1.   dyad, vec, under, bar, tilde, hat, dot, dotdot\n     2.   fat, roman, italic, bold, size\n     3.   sub, sup\n     4.   sqrt\n     5.   over\n     6.   from, to\n\nCOMPATIBILITY\n     This section documents the compatibility of mandoc eqn and the troff eqn\n     implementation (including GNU troff).\n\n     -\t The text string ‘\\\"’ is interpreted as a literal quote in troff.  In\n\t mandoc, this is interpreted as a comment.\n     -\t In troff, The circumflex and tilde white-space symbols map to fixed-\n\t width spaces.\tIn mandoc, these characters are synonyms for the space\n\t character.\n     -\t The troff implementation of eqn allows for equation alignment with\n\t the mark and lineup tokens.  mandoc discards these tokens.  The back\n\t n, fwd n, up n, and down n commands are also ignored."
  manpageQuestion1: What is the primary purpose of the eqn tool?
  manpageQuestion2: How can you ensure that a circumflex or tilde character is treated as a literal space in mandoc eqn?
  manpageQuestion3: What are the binding rules for operations in the eqn language according to the manpage?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `eqn`.\n\n\n\nManpage text:\n\nSEE ALSO\n     mandoc(1), man(7), mandoc_char(7), mdoc(7), roff(7)\n\n     Brian W. Kernighan and Lorinda L. Cherry, “System for Typesetting\n     Mathematics”, Communications of the ACM, 18, pp. 151–157, March, 1975.\n\n     Brian W. Kernighan and Lorinda L. Cherry, Typesetting Mathematics, User's\n     Guide, 1976.\n\n     Brian W. Kernighan and Lorinda L. Cherry, Typesetting Mathematics, User's\n     Guide (Second Edition), 1978.\n\nHISTORY\n     The eqn utility, a preprocessor for troff, was originally written by\n     Brian W. Kernighan and Lorinda L. Cherry in 1975.\tThe GNU\n     reimplementation of eqn, part of the GNU troff package, was released in\n     1989 by James Clark.  The eqn component of mandoc(1) was added in 2011.\n\nAUTHORS\n     This eqn reference was written by Kristaps Dzonsons <kristaps@bsd.lv>.\n\nmacOS 15.3\t\t       January 10, 2020 \t\t    macOS 15.3"
  manpageQuestion1: What is the primary purpose of the eqn utility?
  manpageQuestion2: How can the eqn tool be used in conjunction with other documentation tools like troff or mandoc?
  manpageQuestion3: What is the historical significance of the eqn utility in the context of documentation tools?

