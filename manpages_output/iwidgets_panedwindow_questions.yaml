- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_panedwindow`.\n\n\n\nManpage text:\n\niwidgets::panedwindow(1)\t[incr Widgets]\t      iwidgets::panedwindow(1)\n\n______________________________________________________________________________\n\nNAME\n       iwidgets::panedwindow - Create and manipulate a paned window widget\n\nSYNOPSIS\n       iwidgets::panedwindow pathName ?options?\n\nINHERITANCE\n       itk::Widget <- iwidgets::Panedwindow\n\nSTANDARD OPTIONS\n       background      cursor\n\n       See the \"options\" manual entry for details on the standard options.\n\nWIDGET-SPECIFIC OPTIONS\n       Name:\t       height\n       Class:\t       Height\n       Command-Line Switch:\t      -height\n\n\t      Specifies the overall height of the paned window in any of the\n\t      forms acceptable to Tk_GetPixels.  The default is 10 pixels.\n\n       Name:\t       orient\n       Class:\t       Orient\n       Command-Line Switch:\t      -orient\n\n\t      Specifies the orientation of the separators: vertical or\n\t      horizontal.  The default is horizontal.\n\n       Name:\t       sashBorderWidth\n       Class:\t       BorderWidth\n       Command-Line Switch:\t      -sashborderwidth\n\n\t      Specifies a value indicating the width of the 3-D border to draw\n\t      around the outside of the sash in any of the forms acceptable to\n\t      Tk_GetPixels.  The default is 2 pixels.\n\n       Name:\t       sashCursor\n       Class:\t       Cursor\n       Command-Line Switch:\t      -sashcursor\n\n\t      Specifies the type of cursor to be displayed in the sash.  The\n\t      default is crosshair.\n\n       Name:\t       sashHeight\n       Class:\t       Height\n       Command-Line Switch:\t      -sashheight\n\n\t      Specifies the height of the sash in any of the forms acceptable\n\t      to Tk_GetPixels.\tThe default is 10 pixels.\n\n       Name:\t       sashIndent\n       Class:\t       SashIndent\n       Command-Line Switch\t      sashindent\n\n\t      Specifies the placement of the sash along the panes in any of\n\t      the forms acceptable to Tk_GetPixels.  A positive value causes\n\t      the sash to be offset from the near (left/top) side of the pane,\n\t      and a negative value causes the sash to be offset from the far\n\t      (right/bottom) side.  If the offset is greater than the width,\n\t      then the sash is placed flush against the side.  The default is\n\t      -10 pixels.\n\n       Name:\t       sashWidth\n       Class:\t       Width\n       Command-Line Switch:\t      -sashwidth\n\n\t      Specifies the width of the sash in any of the forms acceptable\n\t      to Tk_GetPixels.\tThe default is 10 pixels.\n\n       Name:\t       showHandle\n       Class:\t       ShowHandle\n       Command-Line Switch:\t      -showhandle\n\n\t      Specifies whether or not to display the sashes on the window\n\t      panes.  The default is 1, and valid options are 0 and 1.\n\n       Name:\t       thickness\n       Class:\t       Thickness\n       Command-Line Switch:\t      -thickness\n\n\t      Specifies the thickness of the separators in any of the forms\n\t      acceptable to Tk_GetPixels.  The default is 3 pixels.\n\n       Name:\t       width\n       Class:\t       Width\n       Command-Line Switch:\t      -width\n\n\t      Specifies the overall width of the paned window in any of the\n\t      forms acceptable to Tk_GetPixels.  The default is 10 pixels.\n\n______________________________________________________________________________"
  manpageQuestion1: What is the primary purpose of the iwidgets::panedwindow widget?
  manpageQuestion2: How would you configure the orientation of a paned window to be vertical using the command-line switch?
  manpageQuestion3: Can you provide an example of setting the sash border width to 5 pixels for a paned window?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_panedwindow`.\n\n\n\nManpage text:\n\nDESCRIPTION\n       The iwidgets::panedwindow command creates a multiple paned window\n       widget capable of orienting the panes either vertically or\n       horizontally.  Each pane is itself a frame acting as a child site for\n       other widgets.  The border separating each pane contains a sash which\n       allows user positioning of the panes relative to one another.\n\n\nMETHODS\n       The iwidgets::panedwindow command creates a new Tcl command whose name\n       is pathName.  This command may be used to invoke various operations on\n       the widget.  It has the following general form:\n\n\t      pathName option ?arg arg ...?\n\n       Option and the args determine the exact behavior of the command.\n\n       Many of the widget commands for the panedwindow take as one argument an\n       indicator of which pane of the paned window to operate on.  These\n       indicators are called indexes and allow reference and manipulation of\n       panes regardless of their current map state.  Paned window indexes may\n       be specified in any of the following forms:\n\n       number\t   Specifies the pane numerically, where 0 corresponds to the\n\t\t   nearest (top/left-most) pane of the paned window.\n\n       end\t   Indicates the farthest (bottom/right-most) pane of the\n\t\t   paned window.\n\n       pattern\t   If the index doesn't satisfy one of the above forms then\n\t\t   this form is used.  Pattern is pattern-matched against the\n\t\t   tag of each pane in the panedwindow, in order from left/top\n\t\t   to right/left, until a matching entry is found.  The rules\n\t\t   of Tcl_StringMatch are used."
  manpageQuestion1: What is the primary purpose of the iwidgets_panedwindow resource?
  manpageQuestion2: How would you create a horizontally oriented paned window with two panes using iwidgets_panedwindow?
  manpageQuestion3: Can you provide an example of how to add a label widget to the second pane of a paned window using iwidgets_panedwindow?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_panedwindow`.\n\n\n\nManpage text:\n\nWIDGET-SPECIFIC METHODS\n       pathName add tag ?option value option value?\n\t      Adds a new pane to the paned window on the far side\n\t      (right/bottom).  The following options may be specified:\n\n\t      -margin value\n\t\t     Specifies the border distance between the pane and pane\n\t\t     contents is any of the forms acceptable to Tk_GetPixels.\n\t\t     The default is 8 pixels.\n\n\t      -minimum value\n\t\t     Specifies the minimum size that a pane's contents may\n\t\t     reach not inclusive of twice the margin in any of the\n\t\t     forms acceptable to Tk_GetPixels.\tThe default is 10\n\t\t     pixels.\n\n\t\t     The add method returns the path name of the pane.\n\n       pathName cget option\n\t      Returns the current value of the configuration option given by\n\t      option.  Option may have any of the values accepted by the\n\t      iwidgets::panedwindow command.\n\n       pathName childsite ?index?\n\t      Returns a list of the child site path names or a specific child\n\t      site given an index.  The list is constructed from the near side\n\t      (left/top) to the far side (right/bottom).\n\n       pathName configure ?option? ?value option value ...?\n\t      Query or modify the configuration options of the widget.\tIf no\n\t      option is specified, returns a list describing all of the\n\t      available options for pathName (see Tk_ConfigureInfo for\n\t      information on the format of this list).\tIf option is specified\n\t      with no value, then the command returns a list describing the\n\t      one named option (this list will be identical to the\n\t      corresponding sublist of the value returned if no option is\n\t      specified).  If one or more option-value pairs are specified,\n\t      then the command modifies the given widget option(s) to have the\n\t      given value(s);  in this case the command returns an empty\n\t      string.  Option may have any of the values accepted by the\n\t      iwidgets::panedwindow command.\n\n       pathName delete index\n\t      Deletes a specified pane given an index.\n\n       pathName fraction percentage percentage ?percentage percentage ...?\n\t      Sets the visible percentage of the panes.  Specifies a set of\n\t      percentages which are applied to the visible panes from the near\n\t      side (left/top).\tThe number of percentages must be equal to the\n\t      current number of visible (mapped) panes and add up to 100.\n\n       pathName hide index\n\t      Changes the visiblity of the specified pane, allowing a\n\t      previously displayed pane to be visually removed rather than\n\t      deleted.\n\n       pathName index index\n\t      Returns the numerical index corresponding to index.\n\n       pathName insert index tag ?option value option value ...?\n\t      Same as the add command except that it inserts the new pane just\n\t      before the one given by index, instead of appending to the end\n\t      of the panedwindow.  The option, and value arguments have the\n\t      same interpretation as for the add widget command.\n\n       pathName paneconfigure index ?options?\n\t      This command is similar to the configure command, except that it\n\t      applies to the options for an individual pane, whereas configure\n\t      applies to the options for the paned window as a whole.  Options\n\t      may have any of the values accepted by the add widget command.\n\t      If options are specified, options are modified as indicated in\n\t      the command and the command returns an empty string.  If no\n\t      options are specified, returns a list describing the current\n\t      options for entry index (see Tk_ConfigureInfo for information on\n\t      the format of this list).\n\n       pathName reset\n\t      Redisplays the pane window using default percentages.\n\n       pathName show index\n\t      Changes the visiblity of the specified pane, allowing a\n\t      previously hidden pane to be displayed."
  manpageQuestion1: What is the primary purpose of the iwidgets_panedwindow resource?
  manpageQuestion2: How would you use the iwidgets_panedwindow to add a new pane with a margin of 10 pixels and a minimum size of 20 pixels?
  manpageQuestion3: Can you provide an example of using the iwidgets_panedwindow to hide a pane at index 1 and then show it again?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_panedwindow`.\n\n\n\nManpage text:\n\nNOTES\n\t      Dynamic changing of the margin and or minimum options to values\n\t      which make the current configuration invalid will block\n\t      subsequent sash movement until the fractions are modified via\n\t      the fraction method.  For example a panedwindow is created with\n\t      three panes and the minimum and margin options are at their\n\t      default settings.  Next the user moves the sashes to compact the\n\t      panes to one side.  Now, if the minimum is increased on the most\n\t      compressed pane via the paneconfigure method to a large enough\n\t      value, then sash movement is blocked until the fractions are\n\t      adjusted.  This situation is unusual and under normal operation\n\t      of the panedwindow, this problem will never occur.\n\nEXAMPLE\n\n\t       package require Iwidgets 4.0\n\t       iwidgets::panedwindow .pw -width 300 -height 300\n\t       .pw add top\n\t       .pw add middle -margin 10\n\t       .pw add bottom -margin 10 -minimum 10\n\n\t       pack .pw -fill both -expand yes\n\n\t       foreach pane [.pw childSite] {\n\t\t  button $pane.b -text $pane -relief raised -borderwidth 2\n\t\t  pack $pane.b -fill both -expand yes\n\t       }\n\n\t       .pw fraction 50 30 20\n\t       .pw paneconfigure 0 -minimum 20\n\t       .pw paneconfigure bottom -margin 15"
  manpageQuestion1: What is the primary purpose of the iwidgets_panedwindow resource?
  manpageQuestion2: How would you configure a panedwindow to have three panes with specific margins and minimum sizes?
  manpageQuestion3: Can you provide an example of adjusting the fractions and pane configurations in a panedwindow?

- prompt: "You are playing the role of a college professor. Here is some text copied from the manpages of the macOS resource `iwidgets_panedwindow`.\n\n\n\nManpage text:\n\nACKNOWLEDGEMENTS:\n       Jay Schmidgall\n\n\t      1994 - Base logic posted to comp.lang.tcl\n\n       Joe Hidebrand <hildjj@fuentez.com>\n\n\t      07/25/94 - Posted first multipane version to comp.lang.tcl\n\n\t      07/28/94 - Added support for vertical panes\n\n       Ken Copeland <ken@hilco.com>\n\n\t      09/28/95 - Smoothed out the sash movement and added squeezable\n\t      panes.\n\nAUTHOR\n       Mark L. Ulferts\n\nKEYWORDS\n       panedwindow, widget\n\nTk\t\t\t\t\t\t      iwidgets::panedwindow(1)"
  manpageQuestion1: What is the primary purpose of the iwidgets_panedwindow resource?
  manpageQuestion2: How would you create a paned window widget in Tcl/Tk using iwidgets_panedwindow?
  manpageQuestion3: Can you provide an example of how to configure a paned window to allow vertical and horizontal splitting with sash movement?

